// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SystemRulesTable component should render 1`] = `
<Fragment>
  <TableToolbar
    isFooter={false}
  >
    <Level
      gutter="md"
    >
      <LevelItem>
        <InputGroup>
          <RulesComplianceFilter
            availablePolicies={
              Array [
                Object {
                  "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                  "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                },
              ]
            }
            hidePassed={false}
            policy={Array []}
            severity={Array []}
            updateFilter={[Function]}
          />
          <SimpleFilter
            buttonTitle={null}
            className=""
            onButtonClick={[Function]}
            onFilterChange={[Function]}
            onOptionSelect={[Function]}
            placeholder="Search by name, identifer, or reference"
            searchIcon={true}
          />
        </InputGroup>
      </LevelItem>
      <LevelItem>
        52
         results
      </LevelItem>
      <LevelItem>
        <Connect(ComplianceRemediationButton)
          allSystems={
            Array [
              Object {
                "id": "aa9c4497-5707-4233-9e9b-1fded5423ef3",
                "ruleObjectsFailed": Array [],
              },
            ]
          }
          selectedRules={Array []}
        />
      </LevelItem>
    </Level>
    <Component
      dropDirection="down"
      itemCount={52}
      onPerPageSelect={[Function]}
      onSetPage={[Function]}
      page={1}
      perPage={10}
    />
  </TableToolbar>
  <Component
    aria-label="Rules table"
    cells={
      Array [
        Object {
          "title": "Rule",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Policy",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Severity",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Passed",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "original": "Ansible",
          "title": <React.Fragment>
            <svg
              height="18px"
              id="ansible_icon"
              version="1.1"
              viewBox="0 0 18 18"
              width="18px"
            >
              <path
                className="st0"
                d="M7.965,8.47125 L11.480625,11.25 L9.1575,5.50125 L7.965,8.47125 Z M12.6894375,13.483125 C12.605625,13.483125 12.5263125,13.46625 12.4531875,13.4325 C12.380625,13.39875 12.2900625,13.336875 12.200625,13.258125 L7.56,9.511875 L5.99625,13.415625 L4.6575,13.415625 L8.578125,3.96 C8.634375,3.830625 8.713125,3.735 8.814375,3.6675 C8.915625,3.605625 9.028125,3.571875 9.1575,3.571875 C9.275625,3.571875 9.3825,3.605625 9.48375,3.6675 C9.585,3.729375 9.658125,3.830625 9.703125,3.96 L13.291875,12.571875 C13.314375,12.628125 13.33125,12.684375 13.336875,12.729375 C13.3425,12.774375 13.348125,12.81375 13.348125,12.83625 C13.348125,13.021875 13.28625,13.179375 13.1563125,13.303125 C13.0275,13.426875 12.87,13.483125 12.6894375,13.483125 L12.6894375,13.483125 Z M9,0 C7.756875,0 6.586875,0.23625 5.495625,0.703125 C4.404375,1.17 3.4425,1.81125 2.626875,2.626875 C1.81125,3.4425 1.17,4.39875 0.703125,5.495625 C0.23625,6.5925 0,7.756875 0,9 C0,10.243125 0.23625,11.413125 0.703125,12.504375 C1.17,13.595625 1.81125,14.5575 2.626875,15.3675 C3.4425,16.1825625 4.39875,16.824375 5.49,17.29125 C6.58125,17.758125 7.756875,18 9,18 C10.243125,18 11.413125,17.76375 12.504375,17.296875 C13.595625,16.83 14.5575,16.18875 15.3675,15.373125 C16.1825625,14.5575 16.824375,13.60125 17.29125,12.51 C17.758125,11.41875 18,10.243125 18,9 C18,7.756875 17.76375,6.586875 17.296875,5.495625 C16.83,4.404375 16.18875,3.4425 15.373125,2.6325 C14.5575,1.816875 13.60125,1.175625 12.51,0.70875 C11.41875,0.241875 10.243125,0 9,0 L9,0 Z"
              />
            </svg>
             Ansible
          </React.Fragment>,
          "transforms": Array [
            [Function],
          ],
        },
      ]
    }
    className="compliance-rules-table"
    onCollapse={[Function]}
    onSelect={[Function]}
    onSort={[Function]}
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "original": "Use direct-lvm with the Device Mapper Storage Driver",
              "title": <Stack>
                <StackItem>
                  Use direct-lvm with the Device Mapper Storage Driver
                </StackItem>
                <StackItem>
                  <TextContent>
                    <Text
                      component="small"
                    >
                      CCE-80441-9
                    </Text>
                  </TextContent>
                </StackItem>
              </Stack>,
            },
            Object {
              "original": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "original": "low",
              "title": <React.Fragment>
                <svg
                  height="1em"
                  role="img"
                  style={
                    Object {
                      "verticalAlign": "-0.125em",
                    }
                  }
                  viewBox="0 0 18 18"
                  width="1em"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z"
                    fill="#3A9CA6"
                    fillRule="evenodd"
                  />
                </svg>
                 Low
              </React.Fragment>,
            },
            Object {
              "original": true,
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />,
            },
            Object {
              "original": undefined,
              "title": "No",
            },
          ],
          "isOpen": false,
        },
        Object {
          "cells": Array [
            Object {
              "originalIdentifier": "CCE-80441-9",
              "originalReferences": "",
              "title": <React.Fragment>
                <div
                  className="margin-top-lg"
                >
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-description-0"
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Description
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      foodescription
                    </StackItem>
                  </Stack>
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-identifiers-references-0"
                  >
                    <Grid>
                      <GridItem
                        span={2}
                      >
                        <Text
                          className="pf-c-form__label"
                          component="h5"
                        >
                          <b>
                            Identifier
                          </b>
                        </Text>
                        <Text>
                          <a
                            href="https://nvd.nist.gov/cce/index.cfm"
                            target="_blank"
                          >
                            CCE-80441-9
                          </a>
                        </Text>
                      </GridItem>
                      <GridItem
                        span={10}
                      >
                        <Text
                          className="pf-c-form__label"
                          component="h5"
                        >
                          <b>
                            References
                          </b>
                        </Text>
                        <Text />
                      </GridItem>
                    </Grid>
                  </Stack>
                  <Stack
                    id="rule-rationale-0"
                    style={
                      Object {
                        "marginBottom": "var(--pf-global--spacer--lg)",
                      }
                    }
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Rationale
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      foorationale
                    </StackItem>
                  </Stack>
                </div>
              </React.Fragment>,
            },
          ],
          "parent": 0,
        },
        Object {
          "cells": Array [
            Object {
              "original": "Enable the Docker service",
              "title": <Stack>
                <StackItem>
                  Enable the Docker service
                </StackItem>
                <StackItem>
                  <TextContent>
                    <Text
                      component="small"
                    >
                      CCE-80440-1
                    </Text>
                  </TextContent>
                </StackItem>
              </Stack>,
            },
            Object {
              "original": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "original": "medium",
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "original": true,
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />,
            },
            Object {
              "original": undefined,
              "title": "No",
            },
          ],
          "isOpen": false,
        },
        Object {
          "cells": Array [
            Object {
              "originalIdentifier": "CCE-80440-1",
              "originalReferences": "",
              "title": <React.Fragment>
                <div
                  className="margin-top-lg"
                >
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-description-1"
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Description
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      foodescription
                    </StackItem>
                  </Stack>
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-identifiers-references-1"
                  >
                    <Grid>
                      <GridItem
                        span={2}
                      >
                        <Text
                          className="pf-c-form__label"
                          component="h5"
                        >
                          <b>
                            Identifier
                          </b>
                        </Text>
                        <Text>
                          <a
                            href="https://nvd.nist.gov/cce/index.cfm"
                            target="_blank"
                          >
                            CCE-80440-1
                          </a>
                        </Text>
                      </GridItem>
                      <GridItem
                        span={10}
                      >
                        <Text
                          className="pf-c-form__label"
                          component="h5"
                        >
                          <b>
                            References
                          </b>
                        </Text>
                        <Text />
                      </GridItem>
                    </Grid>
                  </Stack>
                  <Stack
                    id="rule-rationale-1"
                    style={
                      Object {
                        "marginBottom": "var(--pf-global--spacer--lg)",
                      }
                    }
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Rationale
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      foorationale
                    </StackItem>
                  </Stack>
                </div>
              </React.Fragment>,
            },
          ],
          "parent": 2,
        },
        Object {
          "cells": Array [
            Object {
              "original": "Disable At Service (atd)",
              "title": <Stack>
                <StackItem>
                  Disable At Service (atd)
                </StackItem>
                
              </Stack>,
            },
            Object {
              "original": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "original": "medium",
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "original": true,
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />,
            },
            Object {
              "original": false,
              "title": "No",
            },
          ],
          "isOpen": false,
        },
        Object {
          "cells": Array [
            Object {
              "originalIdentifier": "",
              "originalReferences": "",
              "title": <React.Fragment>
                <div
                  className="margin-top-lg"
                >
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-description-2"
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Description
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      The at and batch commands can be used to schedule tasks that are meant to be executed only once. This allows delayed execution in a manner similar to cron, except that it is not recurring. The daemon atd keeps track of tasks scheduled via at and batch, and executes them at the specified time. The atd service can be disabled with the following command: $ sudo systemctl disable atd.service
                    </StackItem>
                  </Stack>
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-identifiers-references-2"
                  >
                    <Grid>
                      
                    </Grid>
                  </Stack>
                  <Stack
                    id="rule-rationale-2"
                    style={
                      Object {
                        "marginBottom": "var(--pf-global--spacer--lg)",
                      }
                    }
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Rationale
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      The atd service could be used by an unsophisticated insider to carry out activities outside of a normal login session, which could complicate accountability. Furthermore, the need to schedule tasks with at or batch is not common.
                    </StackItem>
                  </Stack>
                </div>
              </React.Fragment>,
            },
          ],
          "parent": 4,
        },
        Object {
          "cells": Array [
            Object {
              "original": "Disable Network Router Discovery Daemon (rdisc)",
              "title": <Stack>
                <StackItem>
                  Disable Network Router Discovery Daemon (rdisc)
                </StackItem>
                
              </Stack>,
            },
            Object {
              "original": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "original": "medium",
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "original": true,
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />,
            },
            Object {
              "original": false,
              "title": "No",
            },
          ],
          "isOpen": false,
        },
        Object {
          "cells": Array [
            Object {
              "originalIdentifier": "",
              "originalReferences": "",
              "title": <React.Fragment>
                <div
                  className="margin-top-lg"
                >
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-description-3"
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Description
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      The rdisc service implements the client side of the ICMP Internet Router Discovery Protocol (IRDP), which allows discovery of routers on the local subnet. If a router is discovered then the local routing table is updated with a corresponding default route. By default this daemon is disabled. The rdisc service can be disabled with the following command: $ sudo systemctl disable rdisc.service
                    </StackItem>
                  </Stack>
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-identifiers-references-3"
                  >
                    <Grid>
                      
                    </Grid>
                  </Stack>
                  <Stack
                    id="rule-rationale-3"
                    style={
                      Object {
                        "marginBottom": "var(--pf-global--spacer--lg)",
                      }
                    }
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Rationale
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      General-purpose systems typically have their network and routing information configured statically by a system administrator. Workstations or some special-purpose systems often use DHCP (instead of IRDP) to retrieve dynamic network configuration information.
                    </StackItem>
                  </Stack>
                </div>
              </React.Fragment>,
            },
          ],
          "parent": 6,
        },
        Object {
          "cells": Array [
            Object {
              "original": "Disable Odd Job Daemon (oddjobd)",
              "title": <Stack>
                <StackItem>
                  Disable Odd Job Daemon (oddjobd)
                </StackItem>
                
              </Stack>,
            },
            Object {
              "original": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "original": "medium",
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "original": true,
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />,
            },
            Object {
              "original": false,
              "title": "No",
            },
          ],
          "isOpen": false,
        },
        Object {
          "cells": Array [
            Object {
              "originalIdentifier": "",
              "originalReferences": "",
              "title": <React.Fragment>
                <div
                  className="margin-top-lg"
                >
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-description-4"
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Description
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      The oddjobd service exists to provide an interface and access control mechanism through which specified privileged tasks can run tasks for unprivileged client applications. Communication with oddjobd through the system message bus. The oddjobd service can be disabled with the following command: $ sudo systemctl disable oddjobd.service
                    </StackItem>
                  </Stack>
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-identifiers-references-4"
                  >
                    <Grid>
                      
                    </Grid>
                  </Stack>
                  <Stack
                    id="rule-rationale-4"
                    style={
                      Object {
                        "marginBottom": "var(--pf-global--spacer--lg)",
                      }
                    }
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Rationale
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      The oddjobd service may provide necessary functionality in some environments, and can be disabled if it is not needed. Execution of tasks by privileged programs, on behalf of unprivileged ones, has traditionally been a source of privilege escalation security issues.
                    </StackItem>
                  </Stack>
                </div>
              </React.Fragment>,
            },
          ],
          "parent": 8,
        },
        Object {
          "cells": Array [
            Object {
              "original": "Disable Apache Qpid (qpidd)",
              "title": <Stack>
                <StackItem>
                  Disable Apache Qpid (qpidd)
                </StackItem>
                
              </Stack>,
            },
            Object {
              "original": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "original": "medium",
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "original": true,
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />,
            },
            Object {
              "original": false,
              "title": "No",
            },
          ],
          "isOpen": false,
        },
        Object {
          "cells": Array [
            Object {
              "originalIdentifier": "",
              "originalReferences": "",
              "title": <React.Fragment>
                <div
                  className="margin-top-lg"
                >
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-description-5"
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Description
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      The qpidd service provides high speed, secure, guaranteed delivery services.  It is an implementation of the Advanced Message Queuing Protocol.  By default the qpidd service will bind to port 5672 and listen for connection attempts. The qpidd service can be disabled with the following command: $ sudo systemctl disable qpidd.service
                    </StackItem>
                  </Stack>
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-identifiers-references-5"
                  >
                    <Grid>
                      
                    </Grid>
                  </Stack>
                  <Stack
                    id="rule-rationale-5"
                    style={
                      Object {
                        "marginBottom": "var(--pf-global--spacer--lg)",
                      }
                    }
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Rationale
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      The qpidd service is automatically installed when the "base" package selection is selected during installation. The qpidd service listens for network connections, which increases the attack surface of the system. If the system is not intended to receive AMQP traffic, then the qpidd service is not needed and should be disabled or removed.
                    </StackItem>
                  </Stack>
                </div>
              </React.Fragment>,
            },
          ],
          "parent": 10,
        },
        Object {
          "cells": Array [
            Object {
              "original": "Disable Automatic Bug Reporting Tool (abrtd)",
              "title": <Stack>
                <StackItem>
                  Disable Automatic Bug Reporting Tool (abrtd)
                </StackItem>
                
              </Stack>,
            },
            Object {
              "original": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "original": "medium",
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "original": true,
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />,
            },
            Object {
              "original": false,
              "title": "No",
            },
          ],
          "isOpen": false,
        },
        Object {
          "cells": Array [
            Object {
              "originalIdentifier": "",
              "originalReferences": "",
              "title": <React.Fragment>
                <div
                  className="margin-top-lg"
                >
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-description-6"
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Description
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      The Automatic Bug Reporting Tool (abrtd) daemon collects and reports crash data when an application crash is detected. Using a variety of plugins, abrtd can email crash reports to system administrators, log crash reports to files, or forward crash reports to a centralized issue tracking system such as RHTSupport. The abrtd service can be disabled with the following command: $ sudo systemctl disable abrtd.service
                    </StackItem>
                  </Stack>
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-identifiers-references-6"
                  >
                    <Grid>
                      
                    </Grid>
                  </Stack>
                  <Stack
                    id="rule-rationale-6"
                    style={
                      Object {
                        "marginBottom": "var(--pf-global--spacer--lg)",
                      }
                    }
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Rationale
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      Mishandling crash data could expose sensitive information about vulnerabilities in software executing on the system, as well as sensitive information from within a process's address space or registers.
                    </StackItem>
                  </Stack>
                </div>
              </React.Fragment>,
            },
          ],
          "parent": 12,
        },
        Object {
          "cells": Array [
            Object {
              "original": "Disable ntpdate Service (ntpdate)",
              "title": <Stack>
                <StackItem>
                  Disable ntpdate Service (ntpdate)
                </StackItem>
                
              </Stack>,
            },
            Object {
              "original": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "original": "medium",
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "original": true,
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />,
            },
            Object {
              "original": false,
              "title": "No",
            },
          ],
          "isOpen": false,
        },
        Object {
          "cells": Array [
            Object {
              "originalIdentifier": "",
              "originalReferences": "",
              "title": <React.Fragment>
                <div
                  className="margin-top-lg"
                >
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-description-7"
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Description
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      The ntpdate service sets the local hardware clock by polling NTP servers when the system boots. It synchronizes to the NTP servers listed in /etc/ntp/step-tickers or /etc/ntp.conf and then sets the local hardware clock to the newly synchronized system time. The ntpdate service can be disabled with the following command: $ sudo systemctl disable ntpdate.service
                    </StackItem>
                  </Stack>
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-identifiers-references-7"
                  >
                    <Grid>
                      
                    </Grid>
                  </Stack>
                  <Stack
                    id="rule-rationale-7"
                    style={
                      Object {
                        "marginBottom": "var(--pf-global--spacer--lg)",
                      }
                    }
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Rationale
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      The ntpdate service may only be suitable for systems which are rebooted frequently enough that clock drift does not cause problems between reboots. In any event, the functionality of the ntpdate service is now available in the ntpd program and should be considered deprecated.
                    </StackItem>
                  </Stack>
                </div>
              </React.Fragment>,
            },
          ],
          "parent": 14,
        },
        Object {
          "cells": Array [
            Object {
              "original": "Ensure auditd Collects Information on Kernel Module Loading and Unloading",
              "title": <Stack>
                <StackItem>
                  Ensure auditd Collects Information on Kernel Module Loading and Unloading
                </StackItem>
                
              </Stack>,
            },
            Object {
              "original": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "original": "medium",
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "original": false,
              "title": <ExclamationCircleIcon
                className="ins-u-failed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />,
            },
            Object {
              "original": false,
              "title": "No",
            },
          ],
          "isOpen": false,
        },
        Object {
          "cells": Array [
            Object {
              "originalIdentifier": "",
              "originalReferences": "",
              "title": <React.Fragment>
                <div
                  className="margin-top-lg"
                >
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-description-8"
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Description
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      To capture kernel module loading and unloading events, use following lines, setting ARCH to either b32 for 32-bit system, or having two lines for both b32 and b64 in case your system is 64-bit: -w /usr/sbin/insmod -p x -k modules -w /usr/sbin/rmmod -p x -k modules -w /usr/sbin/modprobe -p x -k modules -a always,exit -F arch=ARCH -S init_module,finit_module,create_module,delete_module -F key=modules The place to add the lines depends on a way auditd daemon is configured. If it is configured to use the augenrules program (the default), add the lines to a file with suffix .rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility, add the lines to file /etc/audit/audit.rules.
                    </StackItem>
                  </Stack>
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-identifiers-references-8"
                  >
                    <Grid>
                      
                    </Grid>
                  </Stack>
                  <Stack
                    id="rule-rationale-8"
                    style={
                      Object {
                        "marginBottom": "var(--pf-global--spacer--lg)",
                      }
                    }
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Rationale
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      The addition/removal of kernel modules can be used to alter the behavior of the kernel and potentially introduce malicious code into kernel space. It is important to have an audit trail of modules that have been introduced into the kernel.
                    </StackItem>
                  </Stack>
                </div>
              </React.Fragment>,
            },
          ],
          "parent": 16,
        },
        Object {
          "cells": Array [
            Object {
              "original": "Record Attempts to Alter Time Through stime",
              "title": <Stack>
                <StackItem>
                  Record Attempts to Alter Time Through stime
                </StackItem>
                
              </Stack>,
            },
            Object {
              "original": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "original": "medium",
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "original": false,
              "title": <ExclamationCircleIcon
                className="ins-u-failed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />,
            },
            Object {
              "original": false,
              "title": "No",
            },
          ],
          "isOpen": false,
        },
        Object {
          "cells": Array [
            Object {
              "originalIdentifier": "",
              "originalReferences": "",
              "title": <React.Fragment>
                <div
                  className="margin-top-lg"
                >
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-description-9"
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Description
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix .rules in the directory /etc/audit/rules.d for both 32 bit and 64 bit systems: -a always,exit -F arch=b32 -S stime -F key=audit_time_rules Since the 64 bit version of the "stime" system call is not defined in the audit lookup table, the corresponding "-F arch=b64" form of this rule is not expected to be defined on 64 bit systems (the aforementioned "-F arch=b32" stime rule form itself is sufficient for both 32 bit and 64 bit systems). If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file for both 32 bit and 64 bit systems: -a always,exit -F arch=b32 -S stime -F key=audit_time_rules Since the 64 bit version of the "stime" system call is not defined in the audit lookup table, the corresponding "-F arch=b64" form of this rule is not expected to be defined on 64 bit systems (the aforementioned "-F arch=b32" stime rule form itself is sufficient for both 32 bit and 64 bit systems). The -k option allows for the specification of a key in string form that can be used for better reporting capability through ausearch and aureport. Multiple system calls can be defined on the same line to save space if desired, but is not required. See an example of multiple combined system calls: -a always,exit -F arch=b64 -S adjtimex,settimeofday -F key=audit_time_rules
                    </StackItem>
                  </Stack>
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-identifiers-references-9"
                  >
                    <Grid>
                      
                    </Grid>
                  </Stack>
                  <Stack
                    id="rule-rationale-9"
                    style={
                      Object {
                        "marginBottom": "var(--pf-global--spacer--lg)",
                      }
                    }
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Rationale
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      Arbitrary changes to the system time can be used to obfuscate nefarious activities in log files, as well as to confuse network services that are highly dependent upon an accurate system time (such as sshd). All changes to the system time should be audited.
                    </StackItem>
                  </Stack>
                </div>
              </React.Fragment>,
            },
          ],
          "parent": 18,
        },
      ]
    }
    sortBy={Object {}}
  >
    <TableHeader />
    <TableBody />
  </Component>
  <TableToolbar
    className="ins-c-inventory__table--toolbar"
    isFooter={true}
  >
    <Component
      dropDirection="up"
      itemCount={52}
      onPerPageSelect={[Function]}
      onSetPage={[Function]}
      page={1}
      perPage={10}
      variant="bottom"
    />
  </TableToolbar>
</Fragment>
`;

exports[`SystemRulesTable component should render a loading table 1`] = `
<Component
  aria-label="Loading table"
  cells={
    Array [
      Object {
        "title": "Rule",
        "transforms": Array [
          [Function],
        ],
      },
      Object {
        "title": "Policy",
        "transforms": Array [
          [Function],
        ],
      },
      Object {
        "title": "Severity",
        "transforms": Array [
          [Function],
        ],
      },
      Object {
        "title": "Passed",
        "transforms": Array [
          [Function],
        ],
      },
      Object {
        "original": "Ansible",
        "title": <React.Fragment>
          <svg
            height="18px"
            id="ansible_icon"
            version="1.1"
            viewBox="0 0 18 18"
            width="18px"
          >
            <path
              className="st0"
              d="M7.965,8.47125 L11.480625,11.25 L9.1575,5.50125 L7.965,8.47125 Z M12.6894375,13.483125 C12.605625,13.483125 12.5263125,13.46625 12.4531875,13.4325 C12.380625,13.39875 12.2900625,13.336875 12.200625,13.258125 L7.56,9.511875 L5.99625,13.415625 L4.6575,13.415625 L8.578125,3.96 C8.634375,3.830625 8.713125,3.735 8.814375,3.6675 C8.915625,3.605625 9.028125,3.571875 9.1575,3.571875 C9.275625,3.571875 9.3825,3.605625 9.48375,3.6675 C9.585,3.729375 9.658125,3.830625 9.703125,3.96 L13.291875,12.571875 C13.314375,12.628125 13.33125,12.684375 13.336875,12.729375 C13.3425,12.774375 13.348125,12.81375 13.348125,12.83625 C13.348125,13.021875 13.28625,13.179375 13.1563125,13.303125 C13.0275,13.426875 12.87,13.483125 12.6894375,13.483125 L12.6894375,13.483125 Z M9,0 C7.756875,0 6.586875,0.23625 5.495625,0.703125 C4.404375,1.17 3.4425,1.81125 2.626875,2.626875 C1.81125,3.4425 1.17,4.39875 0.703125,5.495625 C0.23625,6.5925 0,7.756875 0,9 C0,10.243125 0.23625,11.413125 0.703125,12.504375 C1.17,13.595625 1.81125,14.5575 2.626875,15.3675 C3.4425,16.1825625 4.39875,16.824375 5.49,17.29125 C6.58125,17.758125 7.756875,18 9,18 C10.243125,18 11.413125,17.76375 12.504375,17.296875 C13.595625,16.83 14.5575,16.18875 15.3675,15.373125 C16.1825625,14.5575 16.824375,13.60125 17.29125,12.51 C17.758125,11.41875 18,10.243125 18,9 C18,7.756875 17.76375,6.586875 17.296875,5.495625 C16.83,4.404375 16.18875,3.4425 15.373125,2.6325 C14.5575,1.816875 13.60125,1.175625 12.51,0.70875 C11.41875,0.241875 10.243125,0 9,0 L9,0 Z"
            />
          </svg>
           Ansible
        </React.Fragment>,
        "transforms": Array [
          [Function],
        ],
      },
    ]
  }
  rows={
    Array [
      Object {
        "cells": Array [
          Object {
            "colSpan": 5,
            "title": <RowLoader />,
          },
        ],
      },
      Object {
        "cells": Array [
          Object {
            "colSpan": 5,
            "title": <RowLoader />,
          },
        ],
      },
      Object {
        "cells": Array [
          Object {
            "colSpan": 5,
            "title": <RowLoader />,
          },
        ],
      },
      Object {
        "cells": Array [
          Object {
            "colSpan": 5,
            "title": <RowLoader />,
          },
        ],
      },
      Object {
        "cells": Array [
          Object {
            "colSpan": 5,
            "title": <RowLoader />,
          },
        ],
      },
      Object {
        "cells": Array [
          Object {
            "colSpan": 5,
            "title": <RowLoader />,
          },
        ],
      },
      Object {
        "cells": Array [
          Object {
            "colSpan": 5,
            "title": <RowLoader />,
          },
        ],
      },
      Object {
        "cells": Array [
          Object {
            "colSpan": 5,
            "title": <RowLoader />,
          },
        ],
      },
      Object {
        "cells": Array [
          Object {
            "colSpan": 5,
            "title": <RowLoader />,
          },
        ],
      },
      Object {
        "cells": Array [
          Object {
            "colSpan": 5,
            "title": <RowLoader />,
          },
        ],
      },
    ]
  }
>
  <TableHeader />
  <TableBody />
</Component>
`;

exports[`SystemRulesTable component should render without remediations if prop passed 1`] = `
<Fragment>
  <TableToolbar
    isFooter={false}
  >
    <Level
      gutter="md"
    >
      <LevelItem>
        <InputGroup>
          <RulesComplianceFilter
            availablePolicies={
              Array [
                Object {
                  "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                  "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                },
              ]
            }
            hidePassed={false}
            policy={Array []}
            severity={Array []}
            updateFilter={[Function]}
          />
          <SimpleFilter
            buttonTitle={null}
            className=""
            onButtonClick={[Function]}
            onFilterChange={[Function]}
            onOptionSelect={[Function]}
            placeholder="Search by name, identifer, or reference"
            searchIcon={true}
          />
        </InputGroup>
      </LevelItem>
      <LevelItem>
        52
         results
      </LevelItem>
    </Level>
    <Component
      dropDirection="down"
      itemCount={52}
      onPerPageSelect={[Function]}
      onSetPage={[Function]}
      page={1}
      perPage={10}
    />
  </TableToolbar>
  <Component
    aria-label="Rules table"
    cells={
      Array [
        Object {
          "title": "Rule",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Policy",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Severity",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Passed",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "original": "Ansible",
          "title": <React.Fragment>
            <svg
              height="18px"
              id="ansible_icon"
              version="1.1"
              viewBox="0 0 18 18"
              width="18px"
            >
              <path
                className="st0"
                d="M7.965,8.47125 L11.480625,11.25 L9.1575,5.50125 L7.965,8.47125 Z M12.6894375,13.483125 C12.605625,13.483125 12.5263125,13.46625 12.4531875,13.4325 C12.380625,13.39875 12.2900625,13.336875 12.200625,13.258125 L7.56,9.511875 L5.99625,13.415625 L4.6575,13.415625 L8.578125,3.96 C8.634375,3.830625 8.713125,3.735 8.814375,3.6675 C8.915625,3.605625 9.028125,3.571875 9.1575,3.571875 C9.275625,3.571875 9.3825,3.605625 9.48375,3.6675 C9.585,3.729375 9.658125,3.830625 9.703125,3.96 L13.291875,12.571875 C13.314375,12.628125 13.33125,12.684375 13.336875,12.729375 C13.3425,12.774375 13.348125,12.81375 13.348125,12.83625 C13.348125,13.021875 13.28625,13.179375 13.1563125,13.303125 C13.0275,13.426875 12.87,13.483125 12.6894375,13.483125 L12.6894375,13.483125 Z M9,0 C7.756875,0 6.586875,0.23625 5.495625,0.703125 C4.404375,1.17 3.4425,1.81125 2.626875,2.626875 C1.81125,3.4425 1.17,4.39875 0.703125,5.495625 C0.23625,6.5925 0,7.756875 0,9 C0,10.243125 0.23625,11.413125 0.703125,12.504375 C1.17,13.595625 1.81125,14.5575 2.626875,15.3675 C3.4425,16.1825625 4.39875,16.824375 5.49,17.29125 C6.58125,17.758125 7.756875,18 9,18 C10.243125,18 11.413125,17.76375 12.504375,17.296875 C13.595625,16.83 14.5575,16.18875 15.3675,15.373125 C16.1825625,14.5575 16.824375,13.60125 17.29125,12.51 C17.758125,11.41875 18,10.243125 18,9 C18,7.756875 17.76375,6.586875 17.296875,5.495625 C16.83,4.404375 16.18875,3.4425 15.373125,2.6325 C14.5575,1.816875 13.60125,1.175625 12.51,0.70875 C11.41875,0.241875 10.243125,0 9,0 L9,0 Z"
              />
            </svg>
             Ansible
          </React.Fragment>,
          "transforms": Array [
            [Function],
          ],
        },
      ]
    }
    className="compliance-rules-table"
    onCollapse={[Function]}
    onSort={[Function]}
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "original": "Use direct-lvm with the Device Mapper Storage Driver",
              "title": <Stack>
                <StackItem>
                  Use direct-lvm with the Device Mapper Storage Driver
                </StackItem>
                <StackItem>
                  <TextContent>
                    <Text
                      component="small"
                    >
                      CCE-80441-9
                    </Text>
                  </TextContent>
                </StackItem>
              </Stack>,
            },
            Object {
              "original": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "original": "low",
              "title": <React.Fragment>
                <svg
                  height="1em"
                  role="img"
                  style={
                    Object {
                      "verticalAlign": "-0.125em",
                    }
                  }
                  viewBox="0 0 18 18"
                  width="1em"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z"
                    fill="#3A9CA6"
                    fillRule="evenodd"
                  />
                </svg>
                 Low
              </React.Fragment>,
            },
            Object {
              "original": true,
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />,
            },
            Object {
              "original": undefined,
              "title": "No",
            },
          ],
          "isOpen": false,
        },
        Object {
          "cells": Array [
            Object {
              "originalIdentifier": "CCE-80441-9",
              "originalReferences": "",
              "title": <React.Fragment>
                <div
                  className="margin-top-lg"
                >
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-description-0"
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Description
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      foodescription
                    </StackItem>
                  </Stack>
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-identifiers-references-0"
                  >
                    <Grid>
                      <GridItem
                        span={2}
                      >
                        <Text
                          className="pf-c-form__label"
                          component="h5"
                        >
                          <b>
                            Identifier
                          </b>
                        </Text>
                        <Text>
                          <a
                            href="https://nvd.nist.gov/cce/index.cfm"
                            target="_blank"
                          >
                            CCE-80441-9
                          </a>
                        </Text>
                      </GridItem>
                      <GridItem
                        span={10}
                      >
                        <Text
                          className="pf-c-form__label"
                          component="h5"
                        >
                          <b>
                            References
                          </b>
                        </Text>
                        <Text />
                      </GridItem>
                    </Grid>
                  </Stack>
                  <Stack
                    id="rule-rationale-0"
                    style={
                      Object {
                        "marginBottom": "var(--pf-global--spacer--lg)",
                      }
                    }
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Rationale
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      foorationale
                    </StackItem>
                  </Stack>
                </div>
              </React.Fragment>,
            },
          ],
          "parent": 0,
        },
        Object {
          "cells": Array [
            Object {
              "original": "Enable the Docker service",
              "title": <Stack>
                <StackItem>
                  Enable the Docker service
                </StackItem>
                <StackItem>
                  <TextContent>
                    <Text
                      component="small"
                    >
                      CCE-80440-1
                    </Text>
                  </TextContent>
                </StackItem>
              </Stack>,
            },
            Object {
              "original": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "original": "medium",
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "original": true,
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />,
            },
            Object {
              "original": undefined,
              "title": "No",
            },
          ],
          "isOpen": false,
        },
        Object {
          "cells": Array [
            Object {
              "originalIdentifier": "CCE-80440-1",
              "originalReferences": "",
              "title": <React.Fragment>
                <div
                  className="margin-top-lg"
                >
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-description-1"
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Description
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      foodescription
                    </StackItem>
                  </Stack>
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-identifiers-references-1"
                  >
                    <Grid>
                      <GridItem
                        span={2}
                      >
                        <Text
                          className="pf-c-form__label"
                          component="h5"
                        >
                          <b>
                            Identifier
                          </b>
                        </Text>
                        <Text>
                          <a
                            href="https://nvd.nist.gov/cce/index.cfm"
                            target="_blank"
                          >
                            CCE-80440-1
                          </a>
                        </Text>
                      </GridItem>
                      <GridItem
                        span={10}
                      >
                        <Text
                          className="pf-c-form__label"
                          component="h5"
                        >
                          <b>
                            References
                          </b>
                        </Text>
                        <Text />
                      </GridItem>
                    </Grid>
                  </Stack>
                  <Stack
                    id="rule-rationale-1"
                    style={
                      Object {
                        "marginBottom": "var(--pf-global--spacer--lg)",
                      }
                    }
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Rationale
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      foorationale
                    </StackItem>
                  </Stack>
                </div>
              </React.Fragment>,
            },
          ],
          "parent": 2,
        },
        Object {
          "cells": Array [
            Object {
              "original": "Disable At Service (atd)",
              "title": <Stack>
                <StackItem>
                  Disable At Service (atd)
                </StackItem>
                
              </Stack>,
            },
            Object {
              "original": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "original": "medium",
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "original": true,
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />,
            },
            Object {
              "original": false,
              "title": "No",
            },
          ],
          "isOpen": false,
        },
        Object {
          "cells": Array [
            Object {
              "originalIdentifier": "",
              "originalReferences": "",
              "title": <React.Fragment>
                <div
                  className="margin-top-lg"
                >
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-description-2"
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Description
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      The at and batch commands can be used to schedule tasks that are meant to be executed only once. This allows delayed execution in a manner similar to cron, except that it is not recurring. The daemon atd keeps track of tasks scheduled via at and batch, and executes them at the specified time. The atd service can be disabled with the following command: $ sudo systemctl disable atd.service
                    </StackItem>
                  </Stack>
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-identifiers-references-2"
                  >
                    <Grid>
                      
                    </Grid>
                  </Stack>
                  <Stack
                    id="rule-rationale-2"
                    style={
                      Object {
                        "marginBottom": "var(--pf-global--spacer--lg)",
                      }
                    }
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Rationale
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      The atd service could be used by an unsophisticated insider to carry out activities outside of a normal login session, which could complicate accountability. Furthermore, the need to schedule tasks with at or batch is not common.
                    </StackItem>
                  </Stack>
                </div>
              </React.Fragment>,
            },
          ],
          "parent": 4,
        },
        Object {
          "cells": Array [
            Object {
              "original": "Disable Network Router Discovery Daemon (rdisc)",
              "title": <Stack>
                <StackItem>
                  Disable Network Router Discovery Daemon (rdisc)
                </StackItem>
                
              </Stack>,
            },
            Object {
              "original": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "original": "medium",
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "original": true,
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />,
            },
            Object {
              "original": false,
              "title": "No",
            },
          ],
          "isOpen": false,
        },
        Object {
          "cells": Array [
            Object {
              "originalIdentifier": "",
              "originalReferences": "",
              "title": <React.Fragment>
                <div
                  className="margin-top-lg"
                >
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-description-3"
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Description
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      The rdisc service implements the client side of the ICMP Internet Router Discovery Protocol (IRDP), which allows discovery of routers on the local subnet. If a router is discovered then the local routing table is updated with a corresponding default route. By default this daemon is disabled. The rdisc service can be disabled with the following command: $ sudo systemctl disable rdisc.service
                    </StackItem>
                  </Stack>
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-identifiers-references-3"
                  >
                    <Grid>
                      
                    </Grid>
                  </Stack>
                  <Stack
                    id="rule-rationale-3"
                    style={
                      Object {
                        "marginBottom": "var(--pf-global--spacer--lg)",
                      }
                    }
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Rationale
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      General-purpose systems typically have their network and routing information configured statically by a system administrator. Workstations or some special-purpose systems often use DHCP (instead of IRDP) to retrieve dynamic network configuration information.
                    </StackItem>
                  </Stack>
                </div>
              </React.Fragment>,
            },
          ],
          "parent": 6,
        },
        Object {
          "cells": Array [
            Object {
              "original": "Disable Odd Job Daemon (oddjobd)",
              "title": <Stack>
                <StackItem>
                  Disable Odd Job Daemon (oddjobd)
                </StackItem>
                
              </Stack>,
            },
            Object {
              "original": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "original": "medium",
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "original": true,
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />,
            },
            Object {
              "original": false,
              "title": "No",
            },
          ],
          "isOpen": false,
        },
        Object {
          "cells": Array [
            Object {
              "originalIdentifier": "",
              "originalReferences": "",
              "title": <React.Fragment>
                <div
                  className="margin-top-lg"
                >
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-description-4"
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Description
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      The oddjobd service exists to provide an interface and access control mechanism through which specified privileged tasks can run tasks for unprivileged client applications. Communication with oddjobd through the system message bus. The oddjobd service can be disabled with the following command: $ sudo systemctl disable oddjobd.service
                    </StackItem>
                  </Stack>
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-identifiers-references-4"
                  >
                    <Grid>
                      
                    </Grid>
                  </Stack>
                  <Stack
                    id="rule-rationale-4"
                    style={
                      Object {
                        "marginBottom": "var(--pf-global--spacer--lg)",
                      }
                    }
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Rationale
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      The oddjobd service may provide necessary functionality in some environments, and can be disabled if it is not needed. Execution of tasks by privileged programs, on behalf of unprivileged ones, has traditionally been a source of privilege escalation security issues.
                    </StackItem>
                  </Stack>
                </div>
              </React.Fragment>,
            },
          ],
          "parent": 8,
        },
        Object {
          "cells": Array [
            Object {
              "original": "Disable Apache Qpid (qpidd)",
              "title": <Stack>
                <StackItem>
                  Disable Apache Qpid (qpidd)
                </StackItem>
                
              </Stack>,
            },
            Object {
              "original": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "original": "medium",
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "original": true,
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />,
            },
            Object {
              "original": false,
              "title": "No",
            },
          ],
          "isOpen": false,
        },
        Object {
          "cells": Array [
            Object {
              "originalIdentifier": "",
              "originalReferences": "",
              "title": <React.Fragment>
                <div
                  className="margin-top-lg"
                >
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-description-5"
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Description
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      The qpidd service provides high speed, secure, guaranteed delivery services.  It is an implementation of the Advanced Message Queuing Protocol.  By default the qpidd service will bind to port 5672 and listen for connection attempts. The qpidd service can be disabled with the following command: $ sudo systemctl disable qpidd.service
                    </StackItem>
                  </Stack>
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-identifiers-references-5"
                  >
                    <Grid>
                      
                    </Grid>
                  </Stack>
                  <Stack
                    id="rule-rationale-5"
                    style={
                      Object {
                        "marginBottom": "var(--pf-global--spacer--lg)",
                      }
                    }
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Rationale
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      The qpidd service is automatically installed when the "base" package selection is selected during installation. The qpidd service listens for network connections, which increases the attack surface of the system. If the system is not intended to receive AMQP traffic, then the qpidd service is not needed and should be disabled or removed.
                    </StackItem>
                  </Stack>
                </div>
              </React.Fragment>,
            },
          ],
          "parent": 10,
        },
        Object {
          "cells": Array [
            Object {
              "original": "Disable Automatic Bug Reporting Tool (abrtd)",
              "title": <Stack>
                <StackItem>
                  Disable Automatic Bug Reporting Tool (abrtd)
                </StackItem>
                
              </Stack>,
            },
            Object {
              "original": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "original": "medium",
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "original": true,
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />,
            },
            Object {
              "original": false,
              "title": "No",
            },
          ],
          "isOpen": false,
        },
        Object {
          "cells": Array [
            Object {
              "originalIdentifier": "",
              "originalReferences": "",
              "title": <React.Fragment>
                <div
                  className="margin-top-lg"
                >
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-description-6"
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Description
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      The Automatic Bug Reporting Tool (abrtd) daemon collects and reports crash data when an application crash is detected. Using a variety of plugins, abrtd can email crash reports to system administrators, log crash reports to files, or forward crash reports to a centralized issue tracking system such as RHTSupport. The abrtd service can be disabled with the following command: $ sudo systemctl disable abrtd.service
                    </StackItem>
                  </Stack>
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-identifiers-references-6"
                  >
                    <Grid>
                      
                    </Grid>
                  </Stack>
                  <Stack
                    id="rule-rationale-6"
                    style={
                      Object {
                        "marginBottom": "var(--pf-global--spacer--lg)",
                      }
                    }
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Rationale
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      Mishandling crash data could expose sensitive information about vulnerabilities in software executing on the system, as well as sensitive information from within a process's address space or registers.
                    </StackItem>
                  </Stack>
                </div>
              </React.Fragment>,
            },
          ],
          "parent": 12,
        },
        Object {
          "cells": Array [
            Object {
              "original": "Disable ntpdate Service (ntpdate)",
              "title": <Stack>
                <StackItem>
                  Disable ntpdate Service (ntpdate)
                </StackItem>
                
              </Stack>,
            },
            Object {
              "original": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "original": "medium",
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "original": true,
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />,
            },
            Object {
              "original": false,
              "title": "No",
            },
          ],
          "isOpen": false,
        },
        Object {
          "cells": Array [
            Object {
              "originalIdentifier": "",
              "originalReferences": "",
              "title": <React.Fragment>
                <div
                  className="margin-top-lg"
                >
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-description-7"
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Description
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      The ntpdate service sets the local hardware clock by polling NTP servers when the system boots. It synchronizes to the NTP servers listed in /etc/ntp/step-tickers or /etc/ntp.conf and then sets the local hardware clock to the newly synchronized system time. The ntpdate service can be disabled with the following command: $ sudo systemctl disable ntpdate.service
                    </StackItem>
                  </Stack>
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-identifiers-references-7"
                  >
                    <Grid>
                      
                    </Grid>
                  </Stack>
                  <Stack
                    id="rule-rationale-7"
                    style={
                      Object {
                        "marginBottom": "var(--pf-global--spacer--lg)",
                      }
                    }
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Rationale
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      The ntpdate service may only be suitable for systems which are rebooted frequently enough that clock drift does not cause problems between reboots. In any event, the functionality of the ntpdate service is now available in the ntpd program and should be considered deprecated.
                    </StackItem>
                  </Stack>
                </div>
              </React.Fragment>,
            },
          ],
          "parent": 14,
        },
        Object {
          "cells": Array [
            Object {
              "original": "Ensure auditd Collects Information on Kernel Module Loading and Unloading",
              "title": <Stack>
                <StackItem>
                  Ensure auditd Collects Information on Kernel Module Loading and Unloading
                </StackItem>
                
              </Stack>,
            },
            Object {
              "original": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "original": "medium",
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "original": false,
              "title": <ExclamationCircleIcon
                className="ins-u-failed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />,
            },
            Object {
              "original": false,
              "title": "No",
            },
          ],
          "isOpen": false,
        },
        Object {
          "cells": Array [
            Object {
              "originalIdentifier": "",
              "originalReferences": "",
              "title": <React.Fragment>
                <div
                  className="margin-top-lg"
                >
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-description-8"
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Description
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      To capture kernel module loading and unloading events, use following lines, setting ARCH to either b32 for 32-bit system, or having two lines for both b32 and b64 in case your system is 64-bit: -w /usr/sbin/insmod -p x -k modules -w /usr/sbin/rmmod -p x -k modules -w /usr/sbin/modprobe -p x -k modules -a always,exit -F arch=ARCH -S init_module,finit_module,create_module,delete_module -F key=modules The place to add the lines depends on a way auditd daemon is configured. If it is configured to use the augenrules program (the default), add the lines to a file with suffix .rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility, add the lines to file /etc/audit/audit.rules.
                    </StackItem>
                  </Stack>
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-identifiers-references-8"
                  >
                    <Grid>
                      
                    </Grid>
                  </Stack>
                  <Stack
                    id="rule-rationale-8"
                    style={
                      Object {
                        "marginBottom": "var(--pf-global--spacer--lg)",
                      }
                    }
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Rationale
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      The addition/removal of kernel modules can be used to alter the behavior of the kernel and potentially introduce malicious code into kernel space. It is important to have an audit trail of modules that have been introduced into the kernel.
                    </StackItem>
                  </Stack>
                </div>
              </React.Fragment>,
            },
          ],
          "parent": 16,
        },
        Object {
          "cells": Array [
            Object {
              "original": "Record Attempts to Alter Time Through stime",
              "title": <Stack>
                <StackItem>
                  Record Attempts to Alter Time Through stime
                </StackItem>
                
              </Stack>,
            },
            Object {
              "original": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "original": "medium",
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "original": false,
              "title": <ExclamationCircleIcon
                className="ins-u-failed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />,
            },
            Object {
              "original": false,
              "title": "No",
            },
          ],
          "isOpen": false,
        },
        Object {
          "cells": Array [
            Object {
              "originalIdentifier": "",
              "originalReferences": "",
              "title": <React.Fragment>
                <div
                  className="margin-top-lg"
                >
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-description-9"
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Description
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix .rules in the directory /etc/audit/rules.d for both 32 bit and 64 bit systems: -a always,exit -F arch=b32 -S stime -F key=audit_time_rules Since the 64 bit version of the "stime" system call is not defined in the audit lookup table, the corresponding "-F arch=b64" form of this rule is not expected to be defined on 64 bit systems (the aforementioned "-F arch=b32" stime rule form itself is sufficient for both 32 bit and 64 bit systems). If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file for both 32 bit and 64 bit systems: -a always,exit -F arch=b32 -S stime -F key=audit_time_rules Since the 64 bit version of the "stime" system call is not defined in the audit lookup table, the corresponding "-F arch=b64" form of this rule is not expected to be defined on 64 bit systems (the aforementioned "-F arch=b32" stime rule form itself is sufficient for both 32 bit and 64 bit systems). The -k option allows for the specification of a key in string form that can be used for better reporting capability through ausearch and aureport. Multiple system calls can be defined on the same line to save space if desired, but is not required. See an example of multiple combined system calls: -a always,exit -F arch=b64 -S adjtimex,settimeofday -F key=audit_time_rules
                    </StackItem>
                  </Stack>
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-identifiers-references-9"
                  >
                    <Grid>
                      
                    </Grid>
                  </Stack>
                  <Stack
                    id="rule-rationale-9"
                    style={
                      Object {
                        "marginBottom": "var(--pf-global--spacer--lg)",
                      }
                    }
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        className="pf-c-form__label"
                        component="h5"
                      >
                        <b>
                          Rationale
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      Arbitrary changes to the system time can be used to obfuscate nefarious activities in log files, as well as to confuse network services that are highly dependent upon an accurate system time (such as sshd). All changes to the system time should be audited.
                    </StackItem>
                  </Stack>
                </div>
              </React.Fragment>,
            },
          ],
          "parent": 18,
        },
      ]
    }
    sortBy={Object {}}
  >
    <TableHeader />
    <TableBody />
  </Component>
  <TableToolbar
    className="ins-c-inventory__table--toolbar"
    isFooter={true}
  >
    <Component
      dropDirection="up"
      itemCount={52}
      onPerPageSelect={[Function]}
      onSetPage={[Function]}
      page={1}
      perPage={10}
      variant="bottom"
    />
  </TableToolbar>
</Fragment>
`;
