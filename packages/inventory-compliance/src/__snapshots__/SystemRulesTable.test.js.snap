// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SystemRulesTable component should render 1`] = `
<Fragment>
  <PrimaryToolbar
    activeFiltersConfig={
      Object {
        "filters": Array [],
        "onDelete": [Function],
      }
    }
    filterConfig={
      Object {
        "hideLabel": true,
        "items": Array [
          Object {
            "filterValues": Object {
              "onChange": [Function],
              "value": "",
            },
            "id": "name",
            "label": "Name",
            "type": "text",
          },
          Object {
            "filterValues": Object {
              "items": Array [
                Object {
                  "label": <React.Fragment>
                    <ExclamationCircleIcon
                      className="ins-u-failed"
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     High
                  </React.Fragment>,
                  "value": "high",
                },
                Object {
                  "label": <React.Fragment>
                    <ExclamationTriangleIcon
                      className="ins-u-warning"
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     Medium
                  </React.Fragment>,
                  "value": "medium",
                },
                Object {
                  "label": <React.Fragment>
                    <svg
                      height="1em"
                      role="img"
                      style={
                        Object {
                          "verticalAlign": "-0.125em",
                        }
                      }
                      viewBox="0 0 18 18"
                      width="1em"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z"
                        fill="#3A9CA6"
                        fillRule="evenodd"
                      />
                    </svg>
                     Low
                  </React.Fragment>,
                  "value": "low",
                },
                Object {
                  "label": <React.Fragment>
                    <QuestionCircleIcon
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     Unknown
                  </React.Fragment>,
                  "value": "unknown",
                },
              ],
              "onChange": [Function],
              "value": Array [],
            },
            "id": "severity",
            "label": "Severity",
            "type": "checkbox",
          },
          Object {
            "filterValues": Object {
              "items": Array [
                Object {
                  "label": "Show passed rules",
                  "value": "passed",
                },
                Object {
                  "label": "Hide passed rules",
                  "value": "failed",
                },
              ],
              "onChange": [Function],
              "value": undefined,
            },
            "id": "passed",
            "label": "Passed",
            "type": "radio",
          },
        ],
      }
    }
    pagination={
      Object {
        "dropDirection": "down",
        "itemCount": 52,
        "onPerPageSelect": [Function],
        "onSetPage": [Function],
        "page": 1,
        "perPage": 10,
      }
    }
    toggleIsExpanded={[Function]}
  >
    <Component>
      <Connect(ComplianceRemediationButton)
        allSystems={
          Array [
            Object {
              "id": "aa9c4497-5707-4233-9e9b-1fded5423ef3",
              "profiles": Array [
                Object {
                  "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                  "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                  "rules": Array [
                    Object {
                      "compliant": true,
                      "description": "foodescription",
                      "identifier": "{\\"label\\":\\"CCE-80441-9\\",\\"system\\":\\"https://nvd.nist.gov/cce/index.cfm\\"}",
                      "rationale": "foorationale",
                      "refId": "xccdf_org.ssgproject.content_rule_docker_storage_configured",
                      "references": "[]",
                      "severity": "low",
                      "title": "Use direct-lvm with the Device Mapper Storage Driver",
                    },
                    Object {
                      "compliant": true,
                      "description": "foodescription",
                      "identifier": "{\\"label\\":\\"CCE-80440-1\\",\\"system\\":\\"https://nvd.nist.gov/cce/index.cfm\\"}",
                      "rationale": "foorationale",
                      "refId": "xccdf_org.ssgproject.content_rule_service_docker_enabled",
                      "references": "[]",
                      "severity": "medium",
                      "title": "Enable the Docker service",
                    },
                    Object {
                      "compliant": true,
                      "description": "The at and batch commands can be used to schedule tasks that are meant to be executed",
                      "identifier": null,
                      "rationale": "The atd service could be used by an unsophisticated insider to carry out activities ",
                      "refId": "xccdf_org.ssgproject.content_rule_service_atd_disabled",
                      "remediationAvailable": false,
                      "severity": "medium",
                      "title": "Disable At Service (atd)",
                    },
                  ],
                },
              ],
              "ruleObjectsFailed": Array [],
            },
          ]
        }
        selectedRules={Array []}
      />
    </Component>
    <Component>
      52
       results
    </Component>
  </PrimaryToolbar>
  <Table
    aria-label="Rules table"
    borders={true}
    canSelectAll={true}
    cells={
      Array [
        Object {
          "title": "Rule",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Policy",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Severity",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Passed",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "original": "Ansible",
          "title": <React.Fragment>
            <svg
              height="18px"
              id="ansible_icon"
              version="1.1"
              viewBox="0 0 18 18"
              width="18px"
            >
              <path
                className="st0"
                d="M7.965,8.47125 L11.480625,11.25 L9.1575,5.50125 L7.965,8.47125 Z M12.6894375,13.483125 C12.605625,13.483125 12.5263125,13.46625 12.4531875,13.4325 C12.380625,13.39875 12.2900625,13.336875 12.200625,13.258125 L7.56,9.511875 L5.99625,13.415625 L4.6575,13.415625 L8.578125,3.96 C8.634375,3.830625 8.713125,3.735 8.814375,3.6675 C8.915625,3.605625 9.028125,3.571875 9.1575,3.571875 C9.275625,3.571875 9.3825,3.605625 9.48375,3.6675 C9.585,3.729375 9.658125,3.830625 9.703125,3.96 L13.291875,12.571875 C13.314375,12.628125 13.33125,12.684375 13.336875,12.729375 C13.3425,12.774375 13.348125,12.81375 13.348125,12.83625 C13.348125,13.021875 13.28625,13.179375 13.1563125,13.303125 C13.0275,13.426875 12.87,13.483125 12.6894375,13.483125 L12.6894375,13.483125 Z M9,0 C7.756875,0 6.586875,0.23625 5.495625,0.703125 C4.404375,1.17 3.4425,1.81125 2.626875,2.626875 C1.81125,3.4425 1.17,4.39875 0.703125,5.495625 C0.23625,6.5925 0,7.756875 0,9 C0,10.243125 0.23625,11.413125 0.703125,12.504375 C1.17,13.595625 1.81125,14.5575 2.626875,15.3675 C3.4425,16.1825625 4.39875,16.824375 5.49,17.29125 C6.58125,17.758125 7.756875,18 9,18 C10.243125,18 11.413125,17.76375 12.504375,17.296875 C13.595625,16.83 14.5575,16.18875 15.3675,15.373125 C16.1825625,14.5575 16.824375,13.60125 17.29125,12.51 C17.758125,11.41875 18,10.243125 18,9 C18,7.756875 17.76375,6.586875 17.296875,5.495625 C16.83,4.404375 16.18875,3.4425 15.373125,2.6325 C14.5575,1.816875 13.60125,1.175625 12.51,0.70875 C11.41875,0.241875 10.243125,0 9,0 L9,0 Z"
              />
            </svg>
             Ansible
          </React.Fragment>,
          "transforms": Array [
            [Function],
          ],
        },
      ]
    }
    className="compliance-rules-table"
    contentId="expanded-content"
    dropdownDirection="down"
    dropdownPosition="right"
    expandId="expandable-toggle"
    gridBreakPoint="grid-md"
    onCollapse={[Function]}
    onSelect={[Function]}
    onSort={[Function]}
    role="grid"
    rowLabeledBy="simple-node"
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Verify that All World-Writable Directories Have Sticky Bits Set"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_dir_perms_world_writable_sticky_bits",
          "rowKey": "xccdf_org.ssgproject.content_rule_dir_perms_world_writable_sticky_bits-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "When the so-called 'sticky bit' is set on a directory, only the owner of a given file may remove that file from the directory. Without the sticky bit, any user with write access to a directory may remove any file in the directory. Setting the sticky bit prevents users from removing each other's files. In cases where there is no reason for a directory to be world-writable, a better solution is to remove that permission rather than to set the sticky bit. However, if a directory is used by a particular application, consult that application's documentation instead of blindly changing modes. To set the sticky bit on a world-writable directory DIR, run the following command: $ sudo chmod +t DIR",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "Failing to set the sticky bit on public directories allows unauthorized users to delete files in the directory structure. The only authorized public directories are those temporary directories supplied with the system, or those designed to be temporary file repositories. The setting is normally reserved for directories used by the system, by users for temporary file storage (such as /tmp), and for directories requiring global read/write access.",
                    "refId": "xccdf_org.ssgproject.content_rule_dir_perms_world_writable_sticky_bits",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_dir_perms_world_writable_sticky_bits-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Verify that All World-Writable Directories Have Sticky Bits Set",
                  }
                }
              />,
            },
          ],
          "parent": 0,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Verify File Hashes with RPM"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationCircleIcon
                  className="ins-u-failed"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 High
              </React.Fragment>,
            },
            Object {
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_rpm_verify_hashes",
          "rowKey": "xccdf_org.ssgproject.content_rule_rpm_verify_hashes-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "Without cryptographic integrity protections, system executables and files can be altered by unauthorized users without detection. The RPM package management system can check the hashes of installed software packages, including many that are important to system security. To verify that the cryptographic hash of system files and commands match vendor values, run the following command to list which files on the system have hashes that differ from what is expected by the RPM database: $ rpm -Va | grep '^..5' A \\"c\\" in the second column indicates that a file is a configuration file, which may appropriately be expected to change.  If the file was not expected to change, investigate the cause of the change using audit logs or other means. The package can then be reinstalled to restore the file. Run the following command to determine which package owns the file: $ rpm -qf FILENAME The package can be reinstalled from a yum repository using the command: $ sudo yum reinstall PACKAGENAME Alternatively, the package can be reinstalled from trusted media using the command: $ sudo rpm -Uvh PACKAGENAME",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The hashes of important files like system executables should match the information given by the RPM database. Executables with erroneous hashes could be a sign of nefarious activity on the system.",
                    "refId": "xccdf_org.ssgproject.content_rule_rpm_verify_hashes",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_rpm_verify_hashes-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "high",
                    "title": "Verify File Hashes with RPM",
                  }
                }
              />,
            },
          ],
          "parent": 2,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Verify and Correct File Permissions with RPM"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationCircleIcon
                  className="ins-u-failed"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 High
              </React.Fragment>,
            },
            Object {
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_rpm_verify_permissions",
          "rowKey": "xccdf_org.ssgproject.content_rule_rpm_verify_permissions-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "The RPM package management system can check file access permissions of installed software packages, including many that are important to system security. Verify that the file permissions of system files and commands match vendor values. Check the file permissions with the following command: $ sudo rpm -Va | awk '{ if (substr($0,2,1)==\\"M\\") print $NF }' Output indicates files that do not match vendor defaults. After locating a file with incorrect permissions, run the following command to determine which package owns it: $ rpm -qf FILENAME Next, run the following command to reset its permissions to the correct values: $ sudo rpm --setperms PACKAGENAME",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "Permissions on system binaries and configuration files that are too generous could allow an unauthorized user to gain privileges that they should not have. The permissions set by the vendor should be maintained. Any deviations from this baseline should be investigated.",
                    "refId": "xccdf_org.ssgproject.content_rule_rpm_verify_permissions",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_rpm_verify_permissions-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "high",
                    "title": "Verify and Correct File Permissions with RPM",
                  }
                }
              />,
            },
          ],
          "parent": 4,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={
                  Object {
                    "label": "CCE-80441-9",
                    "system": "https://nvd.nist.gov/cce/index.cfm",
                  }
                }
                title="Use direct-lvm with the Device Mapper Storage Driver"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <svg
                  height="1em"
                  role="img"
                  style={
                    Object {
                      "verticalAlign": "-0.125em",
                    }
                  }
                  viewBox="0 0 18 18"
                  width="1em"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z"
                    fill="#3A9CA6"
                    fillRule="evenodd"
                  />
                </svg>
                 Low
              </React.Fragment>,
            },
            Object {
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_docker_storage_configured",
          "rowKey": "xccdf_org.ssgproject.content_rule_docker_storage_configured-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "foodescription",
                    "identifier": Object {
                      "label": "CCE-80441-9",
                      "system": "https://nvd.nist.gov/cce/index.cfm",
                    },
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "foorationale",
                    "refId": "xccdf_org.ssgproject.content_rule_docker_storage_configured",
                    "references": Array [],
                    "rowKey": "xccdf_org.ssgproject.content_rule_docker_storage_configured-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "low",
                    "title": "Use direct-lvm with the Device Mapper Storage Driver",
                  }
                }
              />,
            },
          ],
          "parent": 6,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Record Events that Modify User/Group Information"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <ExclamationCircleIcon
                className="ins-u-failed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification",
          "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": false,
                    "description": "If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix .rules in the directory /etc/audit/rules.d, in order to capture events that modify account changes: -w /etc/group -p wa -k audit_rules_usergroup_modification -w /etc/passwd -p wa -k audit_rules_usergroup_modification -w /etc/gshadow -p wa -k audit_rules_usergroup_modification -w /etc/shadow -p wa -k audit_rules_usergroup_modification -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file, in order to capture events that modify account changes: -w /etc/group -p wa -k audit_rules_usergroup_modification -w /etc/passwd -p wa -k audit_rules_usergroup_modification -w /etc/gshadow -p wa -k audit_rules_usergroup_modification -w /etc/shadow -p wa -k audit_rules_usergroup_modification -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "In addition to auditing new user and group accounts, these watches will alert the system administrator(s) to any modifications. Any unexpected users, groups, or modifications should be investigated for legitimacy.",
                    "refId": "xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Record Events that Modify User/Group Information",
                  }
                }
              />,
            },
          ],
          "parent": 8,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Record Events that Modify the System's Network Environment"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <ExclamationCircleIcon
                className="ins-u-failed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_audit_rules_networkconfig_modification",
          "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_networkconfig_modification-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": false,
                    "description": "If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix .rules in the directory /etc/audit/rules.d, setting ARCH to either b32 or b64 as appropriate for your system: -a always,exit -F arch=ARCH -S sethostname,setdomainname -F key=audit_rules_networkconfig_modification -w /etc/issue -p wa -k audit_rules_networkconfig_modification -w /etc/issue.net -p wa -k audit_rules_networkconfig_modification -w /etc/hosts -p wa -k audit_rules_networkconfig_modification -w /etc/sysconfig/network -p wa -k audit_rules_networkconfig_modification If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file, setting ARCH to either b32 or b64 as appropriate for your system: -a always,exit -F arch=ARCH -S sethostname,setdomainname -F key=audit_rules_networkconfig_modification -w /etc/issue -p wa -k audit_rules_networkconfig_modification -w /etc/issue.net -p wa -k audit_rules_networkconfig_modification -w /etc/hosts -p wa -k audit_rules_networkconfig_modification -w /etc/sysconfig/network -p wa -k audit_rules_networkconfig_modification",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The network environment should not be modified by anything other than administrator action. Any change to network parameters should be audited.",
                    "refId": "xccdf_org.ssgproject.content_rule_audit_rules_networkconfig_modification",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_networkconfig_modification-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Record Events that Modify the System's Network Environment",
                  }
                }
              />,
            },
          ],
          "parent": 10,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Record Events that Modify the System's Mandatory Access Controls"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <ExclamationCircleIcon
                className="ins-u-failed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_audit_rules_mac_modification",
          "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_mac_modification-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": false,
                    "description": "If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix .rules in the directory /etc/audit/rules.d: -w /etc/selinux/ -p wa -k MAC-policy If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file: -w /etc/selinux/ -p wa -k MAC-policy",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The system's mandatory access policy (SELinux) should not be arbitrarily changed by anything other than administrator action. All changes to MAC policy should be audited.",
                    "refId": "xccdf_org.ssgproject.content_rule_audit_rules_mac_modification",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_mac_modification-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Record Events that Modify the System's Mandatory Access Controls",
                  }
                }
              />,
            },
          ],
          "parent": 12,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Record Events that Modify the System's Discretionary Access Controls - setxattr"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <ExclamationCircleIcon
                className="ins-u-failed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_setxattr",
          "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_setxattr-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": false,
                    "description": "At a minimum, the audit system should collect file permission changes for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix .rules in the directory /etc/audit/rules.d: -a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file: -a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.",
                    "refId": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_setxattr",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_setxattr-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Record Events that Modify the System's Discretionary Access Controls - setxattr",
                  }
                }
              />,
            },
          ],
          "parent": 14,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Record Events that Modify the System's Discretionary Access Controls - removexattr"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <ExclamationCircleIcon
                className="ins-u-failed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_removexattr",
          "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_removexattr-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": false,
                    "description": "At a minimum, the audit system should collect file permission changes for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix .rules in the directory /etc/audit/rules.d: -a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file: -a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.",
                    "refId": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_removexattr",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_removexattr-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Record Events that Modify the System's Discretionary Access Controls - removexattr",
                  }
                }
              />,
            },
          ],
          "parent": 16,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Record Events that Modify the System's Discretionary Access Controls - lsetxattr"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <ExclamationCircleIcon
                className="ins-u-failed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_lsetxattr",
          "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_lsetxattr-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": false,
                    "description": "At a minimum, the audit system should collect file permission changes for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix .rules in the directory /etc/audit/rules.d: -a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file: -a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.",
                    "refId": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_lsetxattr",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_lsetxattr-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Record Events that Modify the System's Discretionary Access Controls - lsetxattr",
                  }
                }
              />,
            },
          ],
          "parent": 18,
        },
      ]
    }
    sortBy={Object {}}
    variant={null}
  >
    <Component />
    <Component />
  </Table>
  <TableToolbar
    className="ins-c-inventory__table--toolbar"
    isFooter={true}
  >
    <Pagination
      className=""
      defaultToFullPage={false}
      dropDirection="up"
      firstPage={1}
      isCompact={false}
      isDisabled={false}
      itemCount={52}
      itemsEnd={null}
      itemsStart={null}
      offset={0}
      onFirstClick={[Function]}
      onLastClick={[Function]}
      onNextClick={[Function]}
      onPageInput={[Function]}
      onPerPageSelect={[Function]}
      onPreviousClick={[Function]}
      onSetPage={[Function]}
      ouiaId={null}
      page={1}
      perPage={10}
      perPageOptions={
        Array [
          Object {
            "title": "10",
            "value": 10,
          },
          Object {
            "title": "20",
            "value": 20,
          },
          Object {
            "title": "50",
            "value": 50,
          },
          Object {
            "title": "100",
            "value": 100,
          },
        ]
      }
      titles={
        Object {
          "currPage": "Current page",
          "items": "",
          "itemsPerPage": "Items per page",
          "optionsToggle": "Items per page",
          "page": "",
          "paginationTitle": "Pagination",
          "perPageSuffix": "per page",
          "toFirstPage": "Go to first page",
          "toLastPage": "Go to last page",
          "toNextPage": "Go to next page",
          "toPreviousPage": "Go to previous page",
        }
      }
      toggleTemplate={[Function]}
      variant="bottom"
      widgetId="pagination-options-menu"
    />
  </TableToolbar>
</Fragment>
`;

exports[`SystemRulesTable component should render a loading table 1`] = `
<RuleLoadingTable
  columns={
    Array [
      Object {
        "title": "Rule",
        "transforms": Array [
          [Function],
        ],
      },
      Object {
        "title": "Policy",
        "transforms": Array [
          [Function],
        ],
      },
      Object {
        "title": "Severity",
        "transforms": Array [
          [Function],
        ],
      },
      Object {
        "title": "Passed",
        "transforms": Array [
          [Function],
        ],
      },
      Object {
        "original": "Ansible",
        "title": <React.Fragment>
          <svg
            height="18px"
            id="ansible_icon"
            version="1.1"
            viewBox="0 0 18 18"
            width="18px"
          >
            <path
              className="st0"
              d="M7.965,8.47125 L11.480625,11.25 L9.1575,5.50125 L7.965,8.47125 Z M12.6894375,13.483125 C12.605625,13.483125 12.5263125,13.46625 12.4531875,13.4325 C12.380625,13.39875 12.2900625,13.336875 12.200625,13.258125 L7.56,9.511875 L5.99625,13.415625 L4.6575,13.415625 L8.578125,3.96 C8.634375,3.830625 8.713125,3.735 8.814375,3.6675 C8.915625,3.605625 9.028125,3.571875 9.1575,3.571875 C9.275625,3.571875 9.3825,3.605625 9.48375,3.6675 C9.585,3.729375 9.658125,3.830625 9.703125,3.96 L13.291875,12.571875 C13.314375,12.628125 13.33125,12.684375 13.336875,12.729375 C13.3425,12.774375 13.348125,12.81375 13.348125,12.83625 C13.348125,13.021875 13.28625,13.179375 13.1563125,13.303125 C13.0275,13.426875 12.87,13.483125 12.6894375,13.483125 L12.6894375,13.483125 Z M9,0 C7.756875,0 6.586875,0.23625 5.495625,0.703125 C4.404375,1.17 3.4425,1.81125 2.626875,2.626875 C1.81125,3.4425 1.17,4.39875 0.703125,5.495625 C0.23625,6.5925 0,7.756875 0,9 C0,10.243125 0.23625,11.413125 0.703125,12.504375 C1.17,13.595625 1.81125,14.5575 2.626875,15.3675 C3.4425,16.1825625 4.39875,16.824375 5.49,17.29125 C6.58125,17.758125 7.756875,18 9,18 C10.243125,18 11.413125,17.76375 12.504375,17.296875 C13.595625,16.83 14.5575,16.18875 15.3675,15.373125 C16.1825625,14.5575 16.824375,13.60125 17.29125,12.51 C17.758125,11.41875 18,10.243125 18,9 C18,7.756875 17.76375,6.586875 17.296875,5.495625 C16.83,4.404375 16.18875,3.4425 15.373125,2.6325 C14.5575,1.816875 13.60125,1.175625 12.51,0.70875 C11.41875,0.241875 10.243125,0 9,0 L9,0 Z"
            />
          </svg>
           Ansible
        </React.Fragment>,
        "transforms": Array [
          [Function],
        ],
      },
    ]
  }
/>
`;

exports[`SystemRulesTable component should render filtered and search mixed results with the right parent 1`] = `
<Fragment>
  <PrimaryToolbar
    activeFiltersConfig={
      Object {
        "filters": Array [
          Object {
            "category": "Name",
            "chips": Array [
              Object {
                "name": "Docker",
              },
            ],
          },
          Object {
            "category": "Severity",
            "chips": Array [
              Object {
                "name": <React.Fragment>
                  <svg
                    height="1em"
                    role="img"
                    style={
                      Object {
                        "verticalAlign": "-0.125em",
                      }
                    }
                    viewBox="0 0 18 18"
                    width="1em"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z"
                      fill="#3A9CA6"
                      fillRule="evenodd"
                    />
                  </svg>
                   Low
                </React.Fragment>,
              },
            ],
          },
        ],
        "onDelete": [Function],
      }
    }
    filterConfig={
      Object {
        "hideLabel": true,
        "items": Array [
          Object {
            "filterValues": Object {
              "onChange": [Function],
              "value": "Docker",
            },
            "id": "name",
            "label": "Name",
            "type": "text",
          },
          Object {
            "filterValues": Object {
              "items": Array [
                Object {
                  "label": <React.Fragment>
                    <ExclamationCircleIcon
                      className="ins-u-failed"
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     High
                  </React.Fragment>,
                  "value": "high",
                },
                Object {
                  "label": <React.Fragment>
                    <ExclamationTriangleIcon
                      className="ins-u-warning"
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     Medium
                  </React.Fragment>,
                  "value": "medium",
                },
                Object {
                  "label": <React.Fragment>
                    <svg
                      height="1em"
                      role="img"
                      style={
                        Object {
                          "verticalAlign": "-0.125em",
                        }
                      }
                      viewBox="0 0 18 18"
                      width="1em"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z"
                        fill="#3A9CA6"
                        fillRule="evenodd"
                      />
                    </svg>
                     Low
                  </React.Fragment>,
                  "value": "low",
                },
                Object {
                  "label": <React.Fragment>
                    <QuestionCircleIcon
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     Unknown
                  </React.Fragment>,
                  "value": "unknown",
                },
              ],
              "onChange": [Function],
              "value": Array [
                "low",
              ],
            },
            "id": "severity",
            "label": "Severity",
            "type": "checkbox",
          },
          Object {
            "filterValues": Object {
              "items": Array [
                Object {
                  "label": "Show passed rules",
                  "value": "passed",
                },
                Object {
                  "label": "Hide passed rules",
                  "value": "failed",
                },
              ],
              "onChange": [Function],
              "value": undefined,
            },
            "id": "passed",
            "label": "Passed",
            "type": "radio",
          },
        ],
      }
    }
    pagination={
      Object {
        "dropDirection": "down",
        "itemCount": 0,
        "onPerPageSelect": [Function],
        "onSetPage": [Function],
        "page": 1,
        "perPage": 10,
      }
    }
    toggleIsExpanded={[Function]}
  >
    <Component>
      <Connect(ComplianceRemediationButton)
        allSystems={
          Array [
            Object {
              "id": "aa9c4497-5707-4233-9e9b-1fded5423ef3",
              "profiles": Array [
                Object {
                  "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                  "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                  "rules": Array [
                    Object {
                      "compliant": true,
                      "description": "foodescription",
                      "identifier": "{\\"label\\":\\"CCE-80441-9\\",\\"system\\":\\"https://nvd.nist.gov/cce/index.cfm\\"}",
                      "rationale": "foorationale",
                      "refId": "xccdf_org.ssgproject.content_rule_docker_storage_configured",
                      "references": "[]",
                      "severity": "low",
                      "title": "Use direct-lvm with the Device Mapper Storage Driver",
                    },
                    Object {
                      "compliant": true,
                      "description": "foodescription",
                      "identifier": "{\\"label\\":\\"CCE-80440-1\\",\\"system\\":\\"https://nvd.nist.gov/cce/index.cfm\\"}",
                      "rationale": "foorationale",
                      "refId": "xccdf_org.ssgproject.content_rule_service_docker_enabled",
                      "references": "[]",
                      "severity": "medium",
                      "title": "Enable the Docker service",
                    },
                    Object {
                      "compliant": true,
                      "description": "The at and batch commands can be used to schedule tasks that are meant to be executed",
                      "identifier": null,
                      "rationale": "The atd service could be used by an unsophisticated insider to carry out activities ",
                      "refId": "xccdf_org.ssgproject.content_rule_service_atd_disabled",
                      "remediationAvailable": false,
                      "severity": "medium",
                      "title": "Disable At Service (atd)",
                    },
                  ],
                },
              ],
              "ruleObjectsFailed": Array [],
            },
          ]
        }
        selectedRules={Array []}
      />
    </Component>
    <Component>
      0
       results
    </Component>
  </PrimaryToolbar>
  <Table
    aria-label="Rules table"
    borders={true}
    canSelectAll={true}
    cells={
      Array [
        Object {
          "title": "Rule",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Policy",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Severity",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Passed",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "original": "Ansible",
          "title": <React.Fragment>
            <svg
              height="18px"
              id="ansible_icon"
              version="1.1"
              viewBox="0 0 18 18"
              width="18px"
            >
              <path
                className="st0"
                d="M7.965,8.47125 L11.480625,11.25 L9.1575,5.50125 L7.965,8.47125 Z M12.6894375,13.483125 C12.605625,13.483125 12.5263125,13.46625 12.4531875,13.4325 C12.380625,13.39875 12.2900625,13.336875 12.200625,13.258125 L7.56,9.511875 L5.99625,13.415625 L4.6575,13.415625 L8.578125,3.96 C8.634375,3.830625 8.713125,3.735 8.814375,3.6675 C8.915625,3.605625 9.028125,3.571875 9.1575,3.571875 C9.275625,3.571875 9.3825,3.605625 9.48375,3.6675 C9.585,3.729375 9.658125,3.830625 9.703125,3.96 L13.291875,12.571875 C13.314375,12.628125 13.33125,12.684375 13.336875,12.729375 C13.3425,12.774375 13.348125,12.81375 13.348125,12.83625 C13.348125,13.021875 13.28625,13.179375 13.1563125,13.303125 C13.0275,13.426875 12.87,13.483125 12.6894375,13.483125 L12.6894375,13.483125 Z M9,0 C7.756875,0 6.586875,0.23625 5.495625,0.703125 C4.404375,1.17 3.4425,1.81125 2.626875,2.626875 C1.81125,3.4425 1.17,4.39875 0.703125,5.495625 C0.23625,6.5925 0,7.756875 0,9 C0,10.243125 0.23625,11.413125 0.703125,12.504375 C1.17,13.595625 1.81125,14.5575 2.626875,15.3675 C3.4425,16.1825625 4.39875,16.824375 5.49,17.29125 C6.58125,17.758125 7.756875,18 9,18 C10.243125,18 11.413125,17.76375 12.504375,17.296875 C13.595625,16.83 14.5575,16.18875 15.3675,15.373125 C16.1825625,14.5575 16.824375,13.60125 17.29125,12.51 C17.758125,11.41875 18,10.243125 18,9 C18,7.756875 17.76375,6.586875 17.296875,5.495625 C16.83,4.404375 16.18875,3.4425 15.373125,2.6325 C14.5575,1.816875 13.60125,1.175625 12.51,0.70875 C11.41875,0.241875 10.243125,0 9,0 L9,0 Z"
              />
            </svg>
             Ansible
          </React.Fragment>,
          "transforms": Array [
            [Function],
          ],
        },
      ]
    }
    className="compliance-rules-table"
    contentId="expanded-content"
    dropdownDirection="down"
    dropdownPosition="right"
    expandId="expandable-toggle"
    gridBreakPoint="grid-md"
    onCollapse={[Function]}
    onSort={[Function]}
    role="grid"
    rowLabeledBy="simple-node"
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "props": Object {
                "colSpan": 5,
              },
              "title": <EmptyTable>
                <Unknown>
                  <Unknown
                    variant="full"
                  >
                    <Unknown
                      headingLevel="h5"
                      size="lg"
                    >
                      No matching rules found
                    </Unknown>
                    <Unknown>
                      This filter criteria matches no rules. 
                      <br />
                       Try changing your filter settings.
                    </Unknown>
                  </Unknown>
                </Unknown>
              </EmptyTable>,
            },
          ],
        },
      ]
    }
    sortBy={Object {}}
    variant={null}
  >
    <Component />
    <Component />
  </Table>
  <TableToolbar
    className="ins-c-inventory__table--toolbar"
    isFooter={true}
  >
    <Pagination
      className=""
      defaultToFullPage={false}
      dropDirection="up"
      firstPage={1}
      isCompact={false}
      isDisabled={false}
      itemCount={0}
      itemsEnd={null}
      itemsStart={null}
      offset={0}
      onFirstClick={[Function]}
      onLastClick={[Function]}
      onNextClick={[Function]}
      onPageInput={[Function]}
      onPerPageSelect={[Function]}
      onPreviousClick={[Function]}
      onSetPage={[Function]}
      ouiaId={null}
      page={1}
      perPage={10}
      perPageOptions={
        Array [
          Object {
            "title": "10",
            "value": 10,
          },
          Object {
            "title": "20",
            "value": 20,
          },
          Object {
            "title": "50",
            "value": 50,
          },
          Object {
            "title": "100",
            "value": 100,
          },
        ]
      }
      titles={
        Object {
          "currPage": "Current page",
          "items": "",
          "itemsPerPage": "Items per page",
          "optionsToggle": "Items per page",
          "page": "",
          "paginationTitle": "Pagination",
          "perPageSuffix": "per page",
          "toFirstPage": "Go to first page",
          "toLastPage": "Go to last page",
          "toNextPage": "Go to next page",
          "toPreviousPage": "Go to previous page",
        }
      }
      toggleTemplate={[Function]}
      variant="bottom"
      widgetId="pagination-options-menu"
    />
  </TableToolbar>
</Fragment>
`;

exports[`SystemRulesTable component should render search results by rule name 1`] = `
<Fragment>
  <PrimaryToolbar
    activeFiltersConfig={
      Object {
        "filters": Array [
          Object {
            "category": "Name",
            "chips": Array [
              Object {
                "name": "Docker",
              },
            ],
          },
        ],
        "onDelete": [Function],
      }
    }
    filterConfig={
      Object {
        "hideLabel": true,
        "items": Array [
          Object {
            "filterValues": Object {
              "onChange": [Function],
              "value": "Docker",
            },
            "id": "name",
            "label": "Name",
            "type": "text",
          },
          Object {
            "filterValues": Object {
              "items": Array [
                Object {
                  "label": <React.Fragment>
                    <ExclamationCircleIcon
                      className="ins-u-failed"
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     High
                  </React.Fragment>,
                  "value": "high",
                },
                Object {
                  "label": <React.Fragment>
                    <ExclamationTriangleIcon
                      className="ins-u-warning"
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     Medium
                  </React.Fragment>,
                  "value": "medium",
                },
                Object {
                  "label": <React.Fragment>
                    <svg
                      height="1em"
                      role="img"
                      style={
                        Object {
                          "verticalAlign": "-0.125em",
                        }
                      }
                      viewBox="0 0 18 18"
                      width="1em"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z"
                        fill="#3A9CA6"
                        fillRule="evenodd"
                      />
                    </svg>
                     Low
                  </React.Fragment>,
                  "value": "low",
                },
                Object {
                  "label": <React.Fragment>
                    <QuestionCircleIcon
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     Unknown
                  </React.Fragment>,
                  "value": "unknown",
                },
              ],
              "onChange": [Function],
              "value": Array [],
            },
            "id": "severity",
            "label": "Severity",
            "type": "checkbox",
          },
          Object {
            "filterValues": Object {
              "items": Array [
                Object {
                  "label": "Show passed rules",
                  "value": "passed",
                },
                Object {
                  "label": "Hide passed rules",
                  "value": "failed",
                },
              ],
              "onChange": [Function],
              "value": undefined,
            },
            "id": "passed",
            "label": "Passed",
            "type": "radio",
          },
        ],
      }
    }
    pagination={
      Object {
        "dropDirection": "down",
        "itemCount": 1,
        "onPerPageSelect": [Function],
        "onSetPage": [Function],
        "page": 1,
        "perPage": 10,
      }
    }
    toggleIsExpanded={[Function]}
  >
    <Component>
      <Connect(ComplianceRemediationButton)
        allSystems={
          Array [
            Object {
              "id": "aa9c4497-5707-4233-9e9b-1fded5423ef3",
              "profiles": Array [
                Object {
                  "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                  "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                  "rules": Array [
                    Object {
                      "compliant": true,
                      "description": "foodescription",
                      "identifier": "{\\"label\\":\\"CCE-80441-9\\",\\"system\\":\\"https://nvd.nist.gov/cce/index.cfm\\"}",
                      "rationale": "foorationale",
                      "refId": "xccdf_org.ssgproject.content_rule_docker_storage_configured",
                      "references": "[]",
                      "severity": "low",
                      "title": "Use direct-lvm with the Device Mapper Storage Driver",
                    },
                    Object {
                      "compliant": true,
                      "description": "foodescription",
                      "identifier": "{\\"label\\":\\"CCE-80440-1\\",\\"system\\":\\"https://nvd.nist.gov/cce/index.cfm\\"}",
                      "rationale": "foorationale",
                      "refId": "xccdf_org.ssgproject.content_rule_service_docker_enabled",
                      "references": "[]",
                      "severity": "medium",
                      "title": "Enable the Docker service",
                    },
                    Object {
                      "compliant": true,
                      "description": "The at and batch commands can be used to schedule tasks that are meant to be executed",
                      "identifier": null,
                      "rationale": "The atd service could be used by an unsophisticated insider to carry out activities ",
                      "refId": "xccdf_org.ssgproject.content_rule_service_atd_disabled",
                      "remediationAvailable": false,
                      "severity": "medium",
                      "title": "Disable At Service (atd)",
                    },
                  ],
                },
              ],
              "ruleObjectsFailed": Array [],
            },
          ]
        }
        selectedRules={Array []}
      />
    </Component>
    <Component>
      1
       results
    </Component>
  </PrimaryToolbar>
  <Table
    aria-label="Rules table"
    borders={true}
    canSelectAll={true}
    cells={
      Array [
        Object {
          "title": "Rule",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Policy",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Severity",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Passed",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "original": "Ansible",
          "title": <React.Fragment>
            <svg
              height="18px"
              id="ansible_icon"
              version="1.1"
              viewBox="0 0 18 18"
              width="18px"
            >
              <path
                className="st0"
                d="M7.965,8.47125 L11.480625,11.25 L9.1575,5.50125 L7.965,8.47125 Z M12.6894375,13.483125 C12.605625,13.483125 12.5263125,13.46625 12.4531875,13.4325 C12.380625,13.39875 12.2900625,13.336875 12.200625,13.258125 L7.56,9.511875 L5.99625,13.415625 L4.6575,13.415625 L8.578125,3.96 C8.634375,3.830625 8.713125,3.735 8.814375,3.6675 C8.915625,3.605625 9.028125,3.571875 9.1575,3.571875 C9.275625,3.571875 9.3825,3.605625 9.48375,3.6675 C9.585,3.729375 9.658125,3.830625 9.703125,3.96 L13.291875,12.571875 C13.314375,12.628125 13.33125,12.684375 13.336875,12.729375 C13.3425,12.774375 13.348125,12.81375 13.348125,12.83625 C13.348125,13.021875 13.28625,13.179375 13.1563125,13.303125 C13.0275,13.426875 12.87,13.483125 12.6894375,13.483125 L12.6894375,13.483125 Z M9,0 C7.756875,0 6.586875,0.23625 5.495625,0.703125 C4.404375,1.17 3.4425,1.81125 2.626875,2.626875 C1.81125,3.4425 1.17,4.39875 0.703125,5.495625 C0.23625,6.5925 0,7.756875 0,9 C0,10.243125 0.23625,11.413125 0.703125,12.504375 C1.17,13.595625 1.81125,14.5575 2.626875,15.3675 C3.4425,16.1825625 4.39875,16.824375 5.49,17.29125 C6.58125,17.758125 7.756875,18 9,18 C10.243125,18 11.413125,17.76375 12.504375,17.296875 C13.595625,16.83 14.5575,16.18875 15.3675,15.373125 C16.1825625,14.5575 16.824375,13.60125 17.29125,12.51 C17.758125,11.41875 18,10.243125 18,9 C18,7.756875 17.76375,6.586875 17.296875,5.495625 C16.83,4.404375 16.18875,3.4425 15.373125,2.6325 C14.5575,1.816875 13.60125,1.175625 12.51,0.70875 C11.41875,0.241875 10.243125,0 9,0 L9,0 Z"
              />
            </svg>
             Ansible
          </React.Fragment>,
          "transforms": Array [
            [Function],
          ],
        },
      ]
    }
    className="compliance-rules-table"
    contentId="expanded-content"
    dropdownDirection="down"
    dropdownPosition="right"
    expandId="expandable-toggle"
    gridBreakPoint="grid-md"
    onCollapse={[Function]}
    onSelect={[Function]}
    onSort={[Function]}
    role="grid"
    rowLabeledBy="simple-node"
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={
                  Object {
                    "label": "CCE-80440-1",
                    "system": "https://nvd.nist.gov/cce/index.cfm",
                  }
                }
                title="Enable the Docker service"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_service_docker_enabled",
          "rowKey": "xccdf_org.ssgproject.content_rule_service_docker_enabled-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "foodescription",
                    "identifier": Object {
                      "label": "CCE-80440-1",
                      "system": "https://nvd.nist.gov/cce/index.cfm",
                    },
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "foorationale",
                    "refId": "xccdf_org.ssgproject.content_rule_service_docker_enabled",
                    "references": Array [],
                    "rowKey": "xccdf_org.ssgproject.content_rule_service_docker_enabled-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Enable the Docker service",
                  }
                }
              />,
            },
          ],
          "parent": 0,
        },
      ]
    }
    sortBy={Object {}}
    variant={null}
  >
    <Component />
    <Component />
  </Table>
  <TableToolbar
    className="ins-c-inventory__table--toolbar"
    isFooter={true}
  >
    <Pagination
      className=""
      defaultToFullPage={false}
      dropDirection="up"
      firstPage={1}
      isCompact={false}
      isDisabled={false}
      itemCount={1}
      itemsEnd={null}
      itemsStart={null}
      offset={0}
      onFirstClick={[Function]}
      onLastClick={[Function]}
      onNextClick={[Function]}
      onPageInput={[Function]}
      onPerPageSelect={[Function]}
      onPreviousClick={[Function]}
      onSetPage={[Function]}
      ouiaId={null}
      page={1}
      perPage={10}
      perPageOptions={
        Array [
          Object {
            "title": "10",
            "value": 10,
          },
          Object {
            "title": "20",
            "value": 20,
          },
          Object {
            "title": "50",
            "value": 50,
          },
          Object {
            "title": "100",
            "value": 100,
          },
        ]
      }
      titles={
        Object {
          "currPage": "Current page",
          "items": "",
          "itemsPerPage": "Items per page",
          "optionsToggle": "Items per page",
          "page": "",
          "paginationTitle": "Pagination",
          "perPageSuffix": "per page",
          "toFirstPage": "Go to first page",
          "toLastPage": "Go to last page",
          "toNextPage": "Go to next page",
          "toPreviousPage": "Go to previous page",
        }
      }
      toggleTemplate={[Function]}
      variant="bottom"
      widgetId="pagination-options-menu"
    />
  </TableToolbar>
</Fragment>
`;

exports[`SystemRulesTable component should render search results on any page, returning to page 1 1`] = `
<Fragment>
  <PrimaryToolbar
    activeFiltersConfig={
      Object {
        "filters": Array [
          Object {
            "category": "Name",
            "chips": Array [
              Object {
                "name": "Docker",
              },
            ],
          },
        ],
        "onDelete": [Function],
      }
    }
    filterConfig={
      Object {
        "hideLabel": true,
        "items": Array [
          Object {
            "filterValues": Object {
              "onChange": [Function],
              "value": "Docker",
            },
            "id": "name",
            "label": "Name",
            "type": "text",
          },
          Object {
            "filterValues": Object {
              "items": Array [
                Object {
                  "label": <React.Fragment>
                    <ExclamationCircleIcon
                      className="ins-u-failed"
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     High
                  </React.Fragment>,
                  "value": "high",
                },
                Object {
                  "label": <React.Fragment>
                    <ExclamationTriangleIcon
                      className="ins-u-warning"
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     Medium
                  </React.Fragment>,
                  "value": "medium",
                },
                Object {
                  "label": <React.Fragment>
                    <svg
                      height="1em"
                      role="img"
                      style={
                        Object {
                          "verticalAlign": "-0.125em",
                        }
                      }
                      viewBox="0 0 18 18"
                      width="1em"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z"
                        fill="#3A9CA6"
                        fillRule="evenodd"
                      />
                    </svg>
                     Low
                  </React.Fragment>,
                  "value": "low",
                },
                Object {
                  "label": <React.Fragment>
                    <QuestionCircleIcon
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     Unknown
                  </React.Fragment>,
                  "value": "unknown",
                },
              ],
              "onChange": [Function],
              "value": Array [],
            },
            "id": "severity",
            "label": "Severity",
            "type": "checkbox",
          },
          Object {
            "filterValues": Object {
              "items": Array [
                Object {
                  "label": "Show passed rules",
                  "value": "passed",
                },
                Object {
                  "label": "Hide passed rules",
                  "value": "failed",
                },
              ],
              "onChange": [Function],
              "value": undefined,
            },
            "id": "passed",
            "label": "Passed",
            "type": "radio",
          },
        ],
      }
    }
    pagination={
      Object {
        "dropDirection": "down",
        "itemCount": 1,
        "onPerPageSelect": [Function],
        "onSetPage": [Function],
        "page": 1,
        "perPage": 10,
      }
    }
    toggleIsExpanded={[Function]}
  >
    <Component>
      <Connect(ComplianceRemediationButton)
        allSystems={
          Array [
            Object {
              "id": "aa9c4497-5707-4233-9e9b-1fded5423ef3",
              "profiles": Array [
                Object {
                  "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                  "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                  "rules": Array [
                    Object {
                      "compliant": true,
                      "description": "foodescription",
                      "identifier": "{\\"label\\":\\"CCE-80441-9\\",\\"system\\":\\"https://nvd.nist.gov/cce/index.cfm\\"}",
                      "rationale": "foorationale",
                      "refId": "xccdf_org.ssgproject.content_rule_docker_storage_configured",
                      "references": "[]",
                      "severity": "low",
                      "title": "Use direct-lvm with the Device Mapper Storage Driver",
                    },
                    Object {
                      "compliant": true,
                      "description": "foodescription",
                      "identifier": "{\\"label\\":\\"CCE-80440-1\\",\\"system\\":\\"https://nvd.nist.gov/cce/index.cfm\\"}",
                      "rationale": "foorationale",
                      "refId": "xccdf_org.ssgproject.content_rule_service_docker_enabled",
                      "references": "[]",
                      "severity": "medium",
                      "title": "Enable the Docker service",
                    },
                    Object {
                      "compliant": true,
                      "description": "The at and batch commands can be used to schedule tasks that are meant to be executed",
                      "identifier": null,
                      "rationale": "The atd service could be used by an unsophisticated insider to carry out activities ",
                      "refId": "xccdf_org.ssgproject.content_rule_service_atd_disabled",
                      "remediationAvailable": false,
                      "severity": "medium",
                      "title": "Disable At Service (atd)",
                    },
                  ],
                },
              ],
              "ruleObjectsFailed": Array [],
            },
          ]
        }
        selectedRules={Array []}
      />
    </Component>
    <Component>
      1
       results
    </Component>
  </PrimaryToolbar>
  <Table
    aria-label="Rules table"
    borders={true}
    canSelectAll={true}
    cells={
      Array [
        Object {
          "title": "Rule",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Policy",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Severity",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Passed",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "original": "Ansible",
          "title": <React.Fragment>
            <svg
              height="18px"
              id="ansible_icon"
              version="1.1"
              viewBox="0 0 18 18"
              width="18px"
            >
              <path
                className="st0"
                d="M7.965,8.47125 L11.480625,11.25 L9.1575,5.50125 L7.965,8.47125 Z M12.6894375,13.483125 C12.605625,13.483125 12.5263125,13.46625 12.4531875,13.4325 C12.380625,13.39875 12.2900625,13.336875 12.200625,13.258125 L7.56,9.511875 L5.99625,13.415625 L4.6575,13.415625 L8.578125,3.96 C8.634375,3.830625 8.713125,3.735 8.814375,3.6675 C8.915625,3.605625 9.028125,3.571875 9.1575,3.571875 C9.275625,3.571875 9.3825,3.605625 9.48375,3.6675 C9.585,3.729375 9.658125,3.830625 9.703125,3.96 L13.291875,12.571875 C13.314375,12.628125 13.33125,12.684375 13.336875,12.729375 C13.3425,12.774375 13.348125,12.81375 13.348125,12.83625 C13.348125,13.021875 13.28625,13.179375 13.1563125,13.303125 C13.0275,13.426875 12.87,13.483125 12.6894375,13.483125 L12.6894375,13.483125 Z M9,0 C7.756875,0 6.586875,0.23625 5.495625,0.703125 C4.404375,1.17 3.4425,1.81125 2.626875,2.626875 C1.81125,3.4425 1.17,4.39875 0.703125,5.495625 C0.23625,6.5925 0,7.756875 0,9 C0,10.243125 0.23625,11.413125 0.703125,12.504375 C1.17,13.595625 1.81125,14.5575 2.626875,15.3675 C3.4425,16.1825625 4.39875,16.824375 5.49,17.29125 C6.58125,17.758125 7.756875,18 9,18 C10.243125,18 11.413125,17.76375 12.504375,17.296875 C13.595625,16.83 14.5575,16.18875 15.3675,15.373125 C16.1825625,14.5575 16.824375,13.60125 17.29125,12.51 C17.758125,11.41875 18,10.243125 18,9 C18,7.756875 17.76375,6.586875 17.296875,5.495625 C16.83,4.404375 16.18875,3.4425 15.373125,2.6325 C14.5575,1.816875 13.60125,1.175625 12.51,0.70875 C11.41875,0.241875 10.243125,0 9,0 L9,0 Z"
              />
            </svg>
             Ansible
          </React.Fragment>,
          "transforms": Array [
            [Function],
          ],
        },
      ]
    }
    className="compliance-rules-table"
    contentId="expanded-content"
    dropdownDirection="down"
    dropdownPosition="right"
    expandId="expandable-toggle"
    gridBreakPoint="grid-md"
    onCollapse={[Function]}
    onSelect={[Function]}
    onSort={[Function]}
    role="grid"
    rowLabeledBy="simple-node"
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={
                  Object {
                    "label": "CCE-80440-1",
                    "system": "https://nvd.nist.gov/cce/index.cfm",
                  }
                }
                title="Enable the Docker service"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_service_docker_enabled",
          "rowKey": "xccdf_org.ssgproject.content_rule_service_docker_enabled-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "foodescription",
                    "identifier": Object {
                      "label": "CCE-80440-1",
                      "system": "https://nvd.nist.gov/cce/index.cfm",
                    },
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "foorationale",
                    "refId": "xccdf_org.ssgproject.content_rule_service_docker_enabled",
                    "references": Array [],
                    "rowKey": "xccdf_org.ssgproject.content_rule_service_docker_enabled-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Enable the Docker service",
                  }
                }
              />,
            },
          ],
          "parent": 0,
        },
      ]
    }
    sortBy={Object {}}
    variant={null}
  >
    <Component />
    <Component />
  </Table>
  <TableToolbar
    className="ins-c-inventory__table--toolbar"
    isFooter={true}
  >
    <Pagination
      className=""
      defaultToFullPage={false}
      dropDirection="up"
      firstPage={1}
      isCompact={false}
      isDisabled={false}
      itemCount={1}
      itemsEnd={null}
      itemsStart={null}
      offset={0}
      onFirstClick={[Function]}
      onLastClick={[Function]}
      onNextClick={[Function]}
      onPageInput={[Function]}
      onPerPageSelect={[Function]}
      onPreviousClick={[Function]}
      onSetPage={[Function]}
      ouiaId={null}
      page={1}
      perPage={10}
      perPageOptions={
        Array [
          Object {
            "title": "10",
            "value": 10,
          },
          Object {
            "title": "20",
            "value": 20,
          },
          Object {
            "title": "50",
            "value": 50,
          },
          Object {
            "title": "100",
            "value": 100,
          },
        ]
      }
      titles={
        Object {
          "currPage": "Current page",
          "items": "",
          "itemsPerPage": "Items per page",
          "optionsToggle": "Items per page",
          "page": "",
          "paginationTitle": "Pagination",
          "perPageSuffix": "per page",
          "toFirstPage": "Go to first page",
          "toLastPage": "Go to last page",
          "toNextPage": "Go to next page",
          "toPreviousPage": "Go to previous page",
        }
      }
      toggleTemplate={[Function]}
      variant="bottom"
      widgetId="pagination-options-menu"
    />
  </TableToolbar>
</Fragment>
`;

exports[`SystemRulesTable component should render sorted rows 1`] = `
<Fragment>
  <PrimaryToolbar
    activeFiltersConfig={
      Object {
        "filters": Array [],
        "onDelete": [Function],
      }
    }
    filterConfig={
      Object {
        "hideLabel": true,
        "items": Array [
          Object {
            "filterValues": Object {
              "onChange": [Function],
              "value": "",
            },
            "id": "name",
            "label": "Name",
            "type": "text",
          },
          Object {
            "filterValues": Object {
              "items": Array [
                Object {
                  "label": <React.Fragment>
                    <ExclamationCircleIcon
                      className="ins-u-failed"
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     High
                  </React.Fragment>,
                  "value": "high",
                },
                Object {
                  "label": <React.Fragment>
                    <ExclamationTriangleIcon
                      className="ins-u-warning"
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     Medium
                  </React.Fragment>,
                  "value": "medium",
                },
                Object {
                  "label": <React.Fragment>
                    <svg
                      height="1em"
                      role="img"
                      style={
                        Object {
                          "verticalAlign": "-0.125em",
                        }
                      }
                      viewBox="0 0 18 18"
                      width="1em"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z"
                        fill="#3A9CA6"
                        fillRule="evenodd"
                      />
                    </svg>
                     Low
                  </React.Fragment>,
                  "value": "low",
                },
                Object {
                  "label": <React.Fragment>
                    <QuestionCircleIcon
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     Unknown
                  </React.Fragment>,
                  "value": "unknown",
                },
              ],
              "onChange": [Function],
              "value": Array [],
            },
            "id": "severity",
            "label": "Severity",
            "type": "checkbox",
          },
          Object {
            "filterValues": Object {
              "items": Array [
                Object {
                  "label": "Show passed rules",
                  "value": "passed",
                },
                Object {
                  "label": "Hide passed rules",
                  "value": "failed",
                },
              ],
              "onChange": [Function],
              "value": undefined,
            },
            "id": "passed",
            "label": "Passed",
            "type": "radio",
          },
        ],
      }
    }
    pagination={
      Object {
        "dropDirection": "down",
        "itemCount": 52,
        "onPerPageSelect": [Function],
        "onSetPage": [Function],
        "page": 1,
        "perPage": 10,
      }
    }
    toggleIsExpanded={[Function]}
  >
    <Component>
      <Connect(ComplianceRemediationButton)
        allSystems={
          Array [
            Object {
              "id": "aa9c4497-5707-4233-9e9b-1fded5423ef3",
              "profiles": Array [
                Object {
                  "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                  "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                  "rules": Array [
                    Object {
                      "compliant": true,
                      "description": "foodescription",
                      "identifier": "{\\"label\\":\\"CCE-80441-9\\",\\"system\\":\\"https://nvd.nist.gov/cce/index.cfm\\"}",
                      "rationale": "foorationale",
                      "refId": "xccdf_org.ssgproject.content_rule_docker_storage_configured",
                      "references": "[]",
                      "severity": "low",
                      "title": "Use direct-lvm with the Device Mapper Storage Driver",
                    },
                    Object {
                      "compliant": true,
                      "description": "foodescription",
                      "identifier": "{\\"label\\":\\"CCE-80440-1\\",\\"system\\":\\"https://nvd.nist.gov/cce/index.cfm\\"}",
                      "rationale": "foorationale",
                      "refId": "xccdf_org.ssgproject.content_rule_service_docker_enabled",
                      "references": "[]",
                      "severity": "medium",
                      "title": "Enable the Docker service",
                    },
                    Object {
                      "compliant": true,
                      "description": "The at and batch commands can be used to schedule tasks that are meant to be executed",
                      "identifier": null,
                      "rationale": "The atd service could be used by an unsophisticated insider to carry out activities ",
                      "refId": "xccdf_org.ssgproject.content_rule_service_atd_disabled",
                      "remediationAvailable": false,
                      "severity": "medium",
                      "title": "Disable At Service (atd)",
                    },
                  ],
                },
              ],
              "ruleObjectsFailed": Array [],
            },
          ]
        }
        selectedRules={Array []}
      />
    </Component>
    <Component>
      52
       results
    </Component>
  </PrimaryToolbar>
  <Table
    aria-label="Rules table"
    borders={true}
    canSelectAll={true}
    cells={
      Array [
        Object {
          "title": "Rule",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Policy",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Severity",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Passed",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "original": "Ansible",
          "title": <React.Fragment>
            <svg
              height="18px"
              id="ansible_icon"
              version="1.1"
              viewBox="0 0 18 18"
              width="18px"
            >
              <path
                className="st0"
                d="M7.965,8.47125 L11.480625,11.25 L9.1575,5.50125 L7.965,8.47125 Z M12.6894375,13.483125 C12.605625,13.483125 12.5263125,13.46625 12.4531875,13.4325 C12.380625,13.39875 12.2900625,13.336875 12.200625,13.258125 L7.56,9.511875 L5.99625,13.415625 L4.6575,13.415625 L8.578125,3.96 C8.634375,3.830625 8.713125,3.735 8.814375,3.6675 C8.915625,3.605625 9.028125,3.571875 9.1575,3.571875 C9.275625,3.571875 9.3825,3.605625 9.48375,3.6675 C9.585,3.729375 9.658125,3.830625 9.703125,3.96 L13.291875,12.571875 C13.314375,12.628125 13.33125,12.684375 13.336875,12.729375 C13.3425,12.774375 13.348125,12.81375 13.348125,12.83625 C13.348125,13.021875 13.28625,13.179375 13.1563125,13.303125 C13.0275,13.426875 12.87,13.483125 12.6894375,13.483125 L12.6894375,13.483125 Z M9,0 C7.756875,0 6.586875,0.23625 5.495625,0.703125 C4.404375,1.17 3.4425,1.81125 2.626875,2.626875 C1.81125,3.4425 1.17,4.39875 0.703125,5.495625 C0.23625,6.5925 0,7.756875 0,9 C0,10.243125 0.23625,11.413125 0.703125,12.504375 C1.17,13.595625 1.81125,14.5575 2.626875,15.3675 C3.4425,16.1825625 4.39875,16.824375 5.49,17.29125 C6.58125,17.758125 7.756875,18 9,18 C10.243125,18 11.413125,17.76375 12.504375,17.296875 C13.595625,16.83 14.5575,16.18875 15.3675,15.373125 C16.1825625,14.5575 16.824375,13.60125 17.29125,12.51 C17.758125,11.41875 18,10.243125 18,9 C18,7.756875 17.76375,6.586875 17.296875,5.495625 C16.83,4.404375 16.18875,3.4425 15.373125,2.6325 C14.5575,1.816875 13.60125,1.175625 12.51,0.70875 C11.41875,0.241875 10.243125,0 9,0 L9,0 Z"
              />
            </svg>
             Ansible
          </React.Fragment>,
          "transforms": Array [
            [Function],
          ],
        },
      ]
    }
    className="compliance-rules-table"
    contentId="expanded-content"
    dropdownDirection="down"
    dropdownPosition="right"
    expandId="expandable-toggle"
    gridBreakPoint="grid-md"
    onCollapse={[Function]}
    onSelect={[Function]}
    onSort={[Function]}
    role="grid"
    rowLabeledBy="simple-node"
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Verify that All World-Writable Directories Have Sticky Bits Set"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_dir_perms_world_writable_sticky_bits",
          "rowKey": "xccdf_org.ssgproject.content_rule_dir_perms_world_writable_sticky_bits-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "When the so-called 'sticky bit' is set on a directory, only the owner of a given file may remove that file from the directory. Without the sticky bit, any user with write access to a directory may remove any file in the directory. Setting the sticky bit prevents users from removing each other's files. In cases where there is no reason for a directory to be world-writable, a better solution is to remove that permission rather than to set the sticky bit. However, if a directory is used by a particular application, consult that application's documentation instead of blindly changing modes. To set the sticky bit on a world-writable directory DIR, run the following command: $ sudo chmod +t DIR",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "Failing to set the sticky bit on public directories allows unauthorized users to delete files in the directory structure. The only authorized public directories are those temporary directories supplied with the system, or those designed to be temporary file repositories. The setting is normally reserved for directories used by the system, by users for temporary file storage (such as /tmp), and for directories requiring global read/write access.",
                    "refId": "xccdf_org.ssgproject.content_rule_dir_perms_world_writable_sticky_bits",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_dir_perms_world_writable_sticky_bits-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Verify that All World-Writable Directories Have Sticky Bits Set",
                  }
                }
              />,
            },
          ],
          "parent": 0,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Verify File Hashes with RPM"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationCircleIcon
                  className="ins-u-failed"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 High
              </React.Fragment>,
            },
            Object {
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_rpm_verify_hashes",
          "rowKey": "xccdf_org.ssgproject.content_rule_rpm_verify_hashes-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "Without cryptographic integrity protections, system executables and files can be altered by unauthorized users without detection. The RPM package management system can check the hashes of installed software packages, including many that are important to system security. To verify that the cryptographic hash of system files and commands match vendor values, run the following command to list which files on the system have hashes that differ from what is expected by the RPM database: $ rpm -Va | grep '^..5' A \\"c\\" in the second column indicates that a file is a configuration file, which may appropriately be expected to change.  If the file was not expected to change, investigate the cause of the change using audit logs or other means. The package can then be reinstalled to restore the file. Run the following command to determine which package owns the file: $ rpm -qf FILENAME The package can be reinstalled from a yum repository using the command: $ sudo yum reinstall PACKAGENAME Alternatively, the package can be reinstalled from trusted media using the command: $ sudo rpm -Uvh PACKAGENAME",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The hashes of important files like system executables should match the information given by the RPM database. Executables with erroneous hashes could be a sign of nefarious activity on the system.",
                    "refId": "xccdf_org.ssgproject.content_rule_rpm_verify_hashes",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_rpm_verify_hashes-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "high",
                    "title": "Verify File Hashes with RPM",
                  }
                }
              />,
            },
          ],
          "parent": 2,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Verify and Correct File Permissions with RPM"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationCircleIcon
                  className="ins-u-failed"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 High
              </React.Fragment>,
            },
            Object {
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_rpm_verify_permissions",
          "rowKey": "xccdf_org.ssgproject.content_rule_rpm_verify_permissions-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "The RPM package management system can check file access permissions of installed software packages, including many that are important to system security. Verify that the file permissions of system files and commands match vendor values. Check the file permissions with the following command: $ sudo rpm -Va | awk '{ if (substr($0,2,1)==\\"M\\") print $NF }' Output indicates files that do not match vendor defaults. After locating a file with incorrect permissions, run the following command to determine which package owns it: $ rpm -qf FILENAME Next, run the following command to reset its permissions to the correct values: $ sudo rpm --setperms PACKAGENAME",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "Permissions on system binaries and configuration files that are too generous could allow an unauthorized user to gain privileges that they should not have. The permissions set by the vendor should be maintained. Any deviations from this baseline should be investigated.",
                    "refId": "xccdf_org.ssgproject.content_rule_rpm_verify_permissions",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_rpm_verify_permissions-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "high",
                    "title": "Verify and Correct File Permissions with RPM",
                  }
                }
              />,
            },
          ],
          "parent": 4,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={
                  Object {
                    "label": "CCE-80441-9",
                    "system": "https://nvd.nist.gov/cce/index.cfm",
                  }
                }
                title="Use direct-lvm with the Device Mapper Storage Driver"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <svg
                  height="1em"
                  role="img"
                  style={
                    Object {
                      "verticalAlign": "-0.125em",
                    }
                  }
                  viewBox="0 0 18 18"
                  width="1em"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z"
                    fill="#3A9CA6"
                    fillRule="evenodd"
                  />
                </svg>
                 Low
              </React.Fragment>,
            },
            Object {
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_docker_storage_configured",
          "rowKey": "xccdf_org.ssgproject.content_rule_docker_storage_configured-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "foodescription",
                    "identifier": Object {
                      "label": "CCE-80441-9",
                      "system": "https://nvd.nist.gov/cce/index.cfm",
                    },
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "foorationale",
                    "refId": "xccdf_org.ssgproject.content_rule_docker_storage_configured",
                    "references": Array [],
                    "rowKey": "xccdf_org.ssgproject.content_rule_docker_storage_configured-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "low",
                    "title": "Use direct-lvm with the Device Mapper Storage Driver",
                  }
                }
              />,
            },
          ],
          "parent": 6,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Record Events that Modify User/Group Information"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <ExclamationCircleIcon
                className="ins-u-failed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification",
          "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": false,
                    "description": "If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix .rules in the directory /etc/audit/rules.d, in order to capture events that modify account changes: -w /etc/group -p wa -k audit_rules_usergroup_modification -w /etc/passwd -p wa -k audit_rules_usergroup_modification -w /etc/gshadow -p wa -k audit_rules_usergroup_modification -w /etc/shadow -p wa -k audit_rules_usergroup_modification -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file, in order to capture events that modify account changes: -w /etc/group -p wa -k audit_rules_usergroup_modification -w /etc/passwd -p wa -k audit_rules_usergroup_modification -w /etc/gshadow -p wa -k audit_rules_usergroup_modification -w /etc/shadow -p wa -k audit_rules_usergroup_modification -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "In addition to auditing new user and group accounts, these watches will alert the system administrator(s) to any modifications. Any unexpected users, groups, or modifications should be investigated for legitimacy.",
                    "refId": "xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Record Events that Modify User/Group Information",
                  }
                }
              />,
            },
          ],
          "parent": 8,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Record Events that Modify the System's Network Environment"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <ExclamationCircleIcon
                className="ins-u-failed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_audit_rules_networkconfig_modification",
          "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_networkconfig_modification-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": false,
                    "description": "If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix .rules in the directory /etc/audit/rules.d, setting ARCH to either b32 or b64 as appropriate for your system: -a always,exit -F arch=ARCH -S sethostname,setdomainname -F key=audit_rules_networkconfig_modification -w /etc/issue -p wa -k audit_rules_networkconfig_modification -w /etc/issue.net -p wa -k audit_rules_networkconfig_modification -w /etc/hosts -p wa -k audit_rules_networkconfig_modification -w /etc/sysconfig/network -p wa -k audit_rules_networkconfig_modification If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file, setting ARCH to either b32 or b64 as appropriate for your system: -a always,exit -F arch=ARCH -S sethostname,setdomainname -F key=audit_rules_networkconfig_modification -w /etc/issue -p wa -k audit_rules_networkconfig_modification -w /etc/issue.net -p wa -k audit_rules_networkconfig_modification -w /etc/hosts -p wa -k audit_rules_networkconfig_modification -w /etc/sysconfig/network -p wa -k audit_rules_networkconfig_modification",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The network environment should not be modified by anything other than administrator action. Any change to network parameters should be audited.",
                    "refId": "xccdf_org.ssgproject.content_rule_audit_rules_networkconfig_modification",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_networkconfig_modification-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Record Events that Modify the System's Network Environment",
                  }
                }
              />,
            },
          ],
          "parent": 10,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Record Events that Modify the System's Mandatory Access Controls"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <ExclamationCircleIcon
                className="ins-u-failed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_audit_rules_mac_modification",
          "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_mac_modification-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": false,
                    "description": "If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix .rules in the directory /etc/audit/rules.d: -w /etc/selinux/ -p wa -k MAC-policy If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file: -w /etc/selinux/ -p wa -k MAC-policy",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The system's mandatory access policy (SELinux) should not be arbitrarily changed by anything other than administrator action. All changes to MAC policy should be audited.",
                    "refId": "xccdf_org.ssgproject.content_rule_audit_rules_mac_modification",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_mac_modification-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Record Events that Modify the System's Mandatory Access Controls",
                  }
                }
              />,
            },
          ],
          "parent": 12,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Record Events that Modify the System's Discretionary Access Controls - setxattr"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <ExclamationCircleIcon
                className="ins-u-failed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_setxattr",
          "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_setxattr-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": false,
                    "description": "At a minimum, the audit system should collect file permission changes for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix .rules in the directory /etc/audit/rules.d: -a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file: -a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.",
                    "refId": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_setxattr",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_setxattr-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Record Events that Modify the System's Discretionary Access Controls - setxattr",
                  }
                }
              />,
            },
          ],
          "parent": 14,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Record Events that Modify the System's Discretionary Access Controls - removexattr"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <ExclamationCircleIcon
                className="ins-u-failed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_removexattr",
          "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_removexattr-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": false,
                    "description": "At a minimum, the audit system should collect file permission changes for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix .rules in the directory /etc/audit/rules.d: -a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file: -a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.",
                    "refId": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_removexattr",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_removexattr-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Record Events that Modify the System's Discretionary Access Controls - removexattr",
                  }
                }
              />,
            },
          ],
          "parent": 16,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Record Events that Modify the System's Discretionary Access Controls - lsetxattr"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <ExclamationCircleIcon
                className="ins-u-failed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_lsetxattr",
          "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_lsetxattr-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": false,
                    "description": "At a minimum, the audit system should collect file permission changes for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix .rules in the directory /etc/audit/rules.d: -a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file: -a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.",
                    "refId": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_lsetxattr",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_lsetxattr-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Record Events that Modify the System's Discretionary Access Controls - lsetxattr",
                  }
                }
              />,
            },
          ],
          "parent": 18,
        },
      ]
    }
    sortBy={Object {}}
    variant={null}
  >
    <Component />
    <Component />
  </Table>
  <TableToolbar
    className="ins-c-inventory__table--toolbar"
    isFooter={true}
  >
    <Pagination
      className=""
      defaultToFullPage={false}
      dropDirection="up"
      firstPage={1}
      isCompact={false}
      isDisabled={false}
      itemCount={52}
      itemsEnd={null}
      itemsStart={null}
      offset={0}
      onFirstClick={[Function]}
      onLastClick={[Function]}
      onNextClick={[Function]}
      onPageInput={[Function]}
      onPerPageSelect={[Function]}
      onPreviousClick={[Function]}
      onSetPage={[Function]}
      ouiaId={null}
      page={1}
      perPage={10}
      perPageOptions={
        Array [
          Object {
            "title": "10",
            "value": 10,
          },
          Object {
            "title": "20",
            "value": 20,
          },
          Object {
            "title": "50",
            "value": 50,
          },
          Object {
            "title": "100",
            "value": 100,
          },
        ]
      }
      titles={
        Object {
          "currPage": "Current page",
          "items": "",
          "itemsPerPage": "Items per page",
          "optionsToggle": "Items per page",
          "page": "",
          "paginationTitle": "Pagination",
          "perPageSuffix": "per page",
          "toFirstPage": "Go to first page",
          "toLastPage": "Go to last page",
          "toNextPage": "Go to next page",
          "toPreviousPage": "Go to previous page",
        }
      }
      toggleTemplate={[Function]}
      variant="bottom"
      widgetId="pagination-options-menu"
    />
  </TableToolbar>
</Fragment>
`;

exports[`SystemRulesTable component should render sorted rows 2`] = `
<Fragment>
  <PrimaryToolbar
    activeFiltersConfig={
      Object {
        "filters": Array [],
        "onDelete": [Function],
      }
    }
    filterConfig={
      Object {
        "hideLabel": true,
        "items": Array [
          Object {
            "filterValues": Object {
              "onChange": [Function],
              "value": "",
            },
            "id": "name",
            "label": "Name",
            "type": "text",
          },
          Object {
            "filterValues": Object {
              "items": Array [
                Object {
                  "label": <React.Fragment>
                    <ExclamationCircleIcon
                      className="ins-u-failed"
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     High
                  </React.Fragment>,
                  "value": "high",
                },
                Object {
                  "label": <React.Fragment>
                    <ExclamationTriangleIcon
                      className="ins-u-warning"
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     Medium
                  </React.Fragment>,
                  "value": "medium",
                },
                Object {
                  "label": <React.Fragment>
                    <svg
                      height="1em"
                      role="img"
                      style={
                        Object {
                          "verticalAlign": "-0.125em",
                        }
                      }
                      viewBox="0 0 18 18"
                      width="1em"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z"
                        fill="#3A9CA6"
                        fillRule="evenodd"
                      />
                    </svg>
                     Low
                  </React.Fragment>,
                  "value": "low",
                },
                Object {
                  "label": <React.Fragment>
                    <QuestionCircleIcon
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     Unknown
                  </React.Fragment>,
                  "value": "unknown",
                },
              ],
              "onChange": [Function],
              "value": Array [],
            },
            "id": "severity",
            "label": "Severity",
            "type": "checkbox",
          },
          Object {
            "filterValues": Object {
              "items": Array [
                Object {
                  "label": "Show passed rules",
                  "value": "passed",
                },
                Object {
                  "label": "Hide passed rules",
                  "value": "failed",
                },
              ],
              "onChange": [Function],
              "value": undefined,
            },
            "id": "passed",
            "label": "Passed",
            "type": "radio",
          },
        ],
      }
    }
    pagination={
      Object {
        "dropDirection": "down",
        "itemCount": 52,
        "onPerPageSelect": [Function],
        "onSetPage": [Function],
        "page": 1,
        "perPage": 10,
      }
    }
    toggleIsExpanded={[Function]}
  >
    <Component>
      <Connect(ComplianceRemediationButton)
        allSystems={
          Array [
            Object {
              "id": "aa9c4497-5707-4233-9e9b-1fded5423ef3",
              "profiles": Array [
                Object {
                  "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                  "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                  "rules": Array [
                    Object {
                      "compliant": true,
                      "description": "foodescription",
                      "identifier": "{\\"label\\":\\"CCE-80441-9\\",\\"system\\":\\"https://nvd.nist.gov/cce/index.cfm\\"}",
                      "rationale": "foorationale",
                      "refId": "xccdf_org.ssgproject.content_rule_docker_storage_configured",
                      "references": "[]",
                      "severity": "low",
                      "title": "Use direct-lvm with the Device Mapper Storage Driver",
                    },
                    Object {
                      "compliant": true,
                      "description": "foodescription",
                      "identifier": "{\\"label\\":\\"CCE-80440-1\\",\\"system\\":\\"https://nvd.nist.gov/cce/index.cfm\\"}",
                      "rationale": "foorationale",
                      "refId": "xccdf_org.ssgproject.content_rule_service_docker_enabled",
                      "references": "[]",
                      "severity": "medium",
                      "title": "Enable the Docker service",
                    },
                    Object {
                      "compliant": true,
                      "description": "The at and batch commands can be used to schedule tasks that are meant to be executed",
                      "identifier": null,
                      "rationale": "The atd service could be used by an unsophisticated insider to carry out activities ",
                      "refId": "xccdf_org.ssgproject.content_rule_service_atd_disabled",
                      "remediationAvailable": false,
                      "severity": "medium",
                      "title": "Disable At Service (atd)",
                    },
                  ],
                },
              ],
              "ruleObjectsFailed": Array [],
            },
          ]
        }
        selectedRules={Array []}
      />
    </Component>
    <Component>
      52
       results
    </Component>
  </PrimaryToolbar>
  <Table
    aria-label="Rules table"
    borders={true}
    canSelectAll={true}
    cells={
      Array [
        Object {
          "title": "Rule",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Policy",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Severity",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Passed",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "original": "Ansible",
          "title": <React.Fragment>
            <svg
              height="18px"
              id="ansible_icon"
              version="1.1"
              viewBox="0 0 18 18"
              width="18px"
            >
              <path
                className="st0"
                d="M7.965,8.47125 L11.480625,11.25 L9.1575,5.50125 L7.965,8.47125 Z M12.6894375,13.483125 C12.605625,13.483125 12.5263125,13.46625 12.4531875,13.4325 C12.380625,13.39875 12.2900625,13.336875 12.200625,13.258125 L7.56,9.511875 L5.99625,13.415625 L4.6575,13.415625 L8.578125,3.96 C8.634375,3.830625 8.713125,3.735 8.814375,3.6675 C8.915625,3.605625 9.028125,3.571875 9.1575,3.571875 C9.275625,3.571875 9.3825,3.605625 9.48375,3.6675 C9.585,3.729375 9.658125,3.830625 9.703125,3.96 L13.291875,12.571875 C13.314375,12.628125 13.33125,12.684375 13.336875,12.729375 C13.3425,12.774375 13.348125,12.81375 13.348125,12.83625 C13.348125,13.021875 13.28625,13.179375 13.1563125,13.303125 C13.0275,13.426875 12.87,13.483125 12.6894375,13.483125 L12.6894375,13.483125 Z M9,0 C7.756875,0 6.586875,0.23625 5.495625,0.703125 C4.404375,1.17 3.4425,1.81125 2.626875,2.626875 C1.81125,3.4425 1.17,4.39875 0.703125,5.495625 C0.23625,6.5925 0,7.756875 0,9 C0,10.243125 0.23625,11.413125 0.703125,12.504375 C1.17,13.595625 1.81125,14.5575 2.626875,15.3675 C3.4425,16.1825625 4.39875,16.824375 5.49,17.29125 C6.58125,17.758125 7.756875,18 9,18 C10.243125,18 11.413125,17.76375 12.504375,17.296875 C13.595625,16.83 14.5575,16.18875 15.3675,15.373125 C16.1825625,14.5575 16.824375,13.60125 17.29125,12.51 C17.758125,11.41875 18,10.243125 18,9 C18,7.756875 17.76375,6.586875 17.296875,5.495625 C16.83,4.404375 16.18875,3.4425 15.373125,2.6325 C14.5575,1.816875 13.60125,1.175625 12.51,0.70875 C11.41875,0.241875 10.243125,0 9,0 L9,0 Z"
              />
            </svg>
             Ansible
          </React.Fragment>,
          "transforms": Array [
            [Function],
          ],
        },
      ]
    }
    className="compliance-rules-table"
    contentId="expanded-content"
    dropdownDirection="down"
    dropdownPosition="right"
    expandId="expandable-toggle"
    gridBreakPoint="grid-md"
    onCollapse={[Function]}
    onSelect={[Function]}
    onSort={[Function]}
    role="grid"
    rowLabeledBy="simple-node"
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Add nodev Option to /dev/shm"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_mount_option_dev_shm_nodev",
          "rowKey": "xccdf_org.ssgproject.content_rule_mount_option_dev_shm_nodev-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "The nodev mount option can be used to prevent creation of device files in /dev/shm. Legitimate character and block devices should not exist within temporary directories like /dev/shm. Add the nodev option to the fourth column of /etc/fstab for the line which controls mounting of /dev/shm.",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The only legitimate location for device files is the /dev directory located on the root partition. The only exception to this is chroot jails.",
                    "refId": "xccdf_org.ssgproject.content_rule_mount_option_dev_shm_nodev",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_mount_option_dev_shm_nodev-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Add nodev Option to /dev/shm",
                  }
                }
              />,
            },
          ],
          "parent": 0,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Add nosuid Option to /dev/shm"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_mount_option_dev_shm_nosuid",
          "rowKey": "xccdf_org.ssgproject.content_rule_mount_option_dev_shm_nosuid-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "The nosuid mount option can be used to prevent execution of setuid programs in /dev/shm.  The SUID and SGID permissions should not be required in these world-writable directories. Add the nosuid option to the fourth column of /etc/fstab for the line which controls mounting of /dev/shm.",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The presence of SUID and SGID executables should be tightly controlled. Users should not be able to execute SUID or SGID binaries from temporary storage partitions.",
                    "refId": "xccdf_org.ssgproject.content_rule_mount_option_dev_shm_nosuid",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_mount_option_dev_shm_nosuid-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Add nosuid Option to /dev/shm",
                  }
                }
              />,
            },
          ],
          "parent": 2,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Disable Apache Qpid (qpidd)"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_service_qpidd_disabled",
          "rowKey": "xccdf_org.ssgproject.content_rule_service_qpidd_disabled-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "The qpidd service provides high speed, secure, guaranteed delivery services.  It is an implementation of the Advanced Message Queuing Protocol.  By default the qpidd service will bind to port 5672 and listen for connection attempts. The qpidd service can be disabled with the following command: $ sudo systemctl disable qpidd.service",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The qpidd service is automatically installed when the \\"base\\" package selection is selected during installation. The qpidd service listens for network connections, which increases the attack surface of the system. If the system is not intended to receive AMQP traffic, then the qpidd service is not needed and should be disabled or removed.",
                    "refId": "xccdf_org.ssgproject.content_rule_service_qpidd_disabled",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_service_qpidd_disabled-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Disable Apache Qpid (qpidd)",
                  }
                }
              />,
            },
          ],
          "parent": 4,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Disable At Service (atd)"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_service_atd_disabled",
          "rowKey": "xccdf_org.ssgproject.content_rule_service_atd_disabled-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "The at and batch commands can be used to schedule tasks that are meant to be executed only once. This allows delayed execution in a manner similar to cron, except that it is not recurring. The daemon atd keeps track of tasks scheduled via at and batch, and executes them at the specified time. The atd service can be disabled with the following command: $ sudo systemctl disable atd.service",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The atd service could be used by an unsophisticated insider to carry out activities outside of a normal login session, which could complicate accountability. Furthermore, the need to schedule tasks with at or batch is not common.",
                    "refId": "xccdf_org.ssgproject.content_rule_service_atd_disabled",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_service_atd_disabled-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Disable At Service (atd)",
                  }
                }
              />,
            },
          ],
          "parent": 6,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Disable Automatic Bug Reporting Tool (abrtd)"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_service_abrtd_disabled",
          "rowKey": "xccdf_org.ssgproject.content_rule_service_abrtd_disabled-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "The Automatic Bug Reporting Tool (abrtd) daemon collects and reports crash data when an application crash is detected. Using a variety of plugins, abrtd can email crash reports to system administrators, log crash reports to files, or forward crash reports to a centralized issue tracking system such as RHTSupport. The abrtd service can be disabled with the following command: $ sudo systemctl disable abrtd.service",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "Mishandling crash data could expose sensitive information about vulnerabilities in software executing on the system, as well as sensitive information from within a process's address space or registers.",
                    "refId": "xccdf_org.ssgproject.content_rule_service_abrtd_disabled",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_service_abrtd_disabled-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Disable Automatic Bug Reporting Tool (abrtd)",
                  }
                }
              />,
            },
          ],
          "parent": 8,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Disable Network Router Discovery Daemon (rdisc)"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_service_rdisc_disabled",
          "rowKey": "xccdf_org.ssgproject.content_rule_service_rdisc_disabled-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "The rdisc service implements the client side of the ICMP Internet Router Discovery Protocol (IRDP), which allows discovery of routers on the local subnet. If a router is discovered then the local routing table is updated with a corresponding default route. By default this daemon is disabled. The rdisc service can be disabled with the following command: $ sudo systemctl disable rdisc.service",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "General-purpose systems typically have their network and routing information configured statically by a system administrator. Workstations or some special-purpose systems often use DHCP (instead of IRDP) to retrieve dynamic network configuration information.",
                    "refId": "xccdf_org.ssgproject.content_rule_service_rdisc_disabled",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_service_rdisc_disabled-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Disable Network Router Discovery Daemon (rdisc)",
                  }
                }
              />,
            },
          ],
          "parent": 10,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Disable ntpdate Service (ntpdate)"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_service_ntpdate_disabled",
          "rowKey": "xccdf_org.ssgproject.content_rule_service_ntpdate_disabled-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "The ntpdate service sets the local hardware clock by polling NTP servers when the system boots. It synchronizes to the NTP servers listed in /etc/ntp/step-tickers or /etc/ntp.conf and then sets the local hardware clock to the newly synchronized system time. The ntpdate service can be disabled with the following command: $ sudo systemctl disable ntpdate.service",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The ntpdate service may only be suitable for systems which are rebooted frequently enough that clock drift does not cause problems between reboots. In any event, the functionality of the ntpdate service is now available in the ntpd program and should be considered deprecated.",
                    "refId": "xccdf_org.ssgproject.content_rule_service_ntpdate_disabled",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_service_ntpdate_disabled-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Disable ntpdate Service (ntpdate)",
                  }
                }
              />,
            },
          ],
          "parent": 12,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Disable Odd Job Daemon (oddjobd)"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_service_oddjobd_disabled",
          "rowKey": "xccdf_org.ssgproject.content_rule_service_oddjobd_disabled-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "The oddjobd service exists to provide an interface and access control mechanism through which specified privileged tasks can run tasks for unprivileged client applications. Communication with oddjobd through the system message bus. The oddjobd service can be disabled with the following command: $ sudo systemctl disable oddjobd.service",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The oddjobd service may provide necessary functionality in some environments, and can be disabled if it is not needed. Execution of tasks by privileged programs, on behalf of unprivileged ones, has traditionally been a source of privilege escalation security issues.",
                    "refId": "xccdf_org.ssgproject.content_rule_service_oddjobd_disabled",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_service_oddjobd_disabled-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Disable Odd Job Daemon (oddjobd)",
                  }
                }
              />,
            },
          ],
          "parent": 14,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Disable the Automounter"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_service_autofs_disabled",
          "rowKey": "xccdf_org.ssgproject.content_rule_service_autofs_disabled-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "The autofs daemon mounts and unmounts filesystems, such as user home directories shared via NFS, on demand. In addition, autofs can be used to handle removable media, and the default configuration provides the cdrom device as /misc/cd. However, this method of providing access to removable media is not common, so autofs can almost always be disabled if NFS is not in use. Even if NFS is required, it may be possible to configure filesystem mounts statically by editing /etc/fstab rather than relying on the automounter. The autofs service can be disabled with the following command: $ sudo systemctl disable autofs.service",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "Disabling the automounter permits the administrator to statically control filesystem mounting through /etc/fstab. Additionally, automatically mounting filesystems permits easy introduction of unknown devices, thereby facilitating malicious activity.",
                    "refId": "xccdf_org.ssgproject.content_rule_service_autofs_disabled",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_service_autofs_disabled-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Disable the Automounter",
                  }
                }
              />,
            },
          ],
          "parent": 16,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Enable rsyslog Service"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_service_rsyslog_enabled",
          "rowKey": "xccdf_org.ssgproject.content_rule_service_rsyslog_enabled-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "The rsyslog service provides syslog-style logging by default on Red Hat Enterprise Linux 7. The rsyslog service can be enabled with the following command: $ sudo systemctl enable rsyslog.service",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The rsyslog service must be running in order to provide logging services, which are essential to system administration.",
                    "refId": "xccdf_org.ssgproject.content_rule_service_rsyslog_enabled",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_service_rsyslog_enabled-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Enable rsyslog Service",
                  }
                }
              />,
            },
          ],
          "parent": 18,
        },
      ]
    }
    sortBy={
      Object {
        "direction": "asc",
        "index": 2,
        "property": "rule",
      }
    }
    variant={null}
  >
    <Component />
    <Component />
  </Table>
  <TableToolbar
    className="ins-c-inventory__table--toolbar"
    isFooter={true}
  >
    <Pagination
      className=""
      defaultToFullPage={false}
      dropDirection="up"
      firstPage={1}
      isCompact={false}
      isDisabled={false}
      itemCount={52}
      itemsEnd={null}
      itemsStart={null}
      offset={0}
      onFirstClick={[Function]}
      onLastClick={[Function]}
      onNextClick={[Function]}
      onPageInput={[Function]}
      onPerPageSelect={[Function]}
      onPreviousClick={[Function]}
      onSetPage={[Function]}
      ouiaId={null}
      page={1}
      perPage={10}
      perPageOptions={
        Array [
          Object {
            "title": "10",
            "value": 10,
          },
          Object {
            "title": "20",
            "value": 20,
          },
          Object {
            "title": "50",
            "value": 50,
          },
          Object {
            "title": "100",
            "value": 100,
          },
        ]
      }
      titles={
        Object {
          "currPage": "Current page",
          "items": "",
          "itemsPerPage": "Items per page",
          "optionsToggle": "Items per page",
          "page": "",
          "paginationTitle": "Pagination",
          "perPageSuffix": "per page",
          "toFirstPage": "Go to first page",
          "toLastPage": "Go to last page",
          "toNextPage": "Go to next page",
          "toPreviousPage": "Go to previous page",
        }
      }
      toggleTemplate={[Function]}
      variant="bottom"
      widgetId="pagination-options-menu"
    />
  </TableToolbar>
</Fragment>
`;

exports[`SystemRulesTable component should render without remediations if prop passed 1`] = `
<Fragment>
  <PrimaryToolbar
    activeFiltersConfig={
      Object {
        "filters": Array [],
        "onDelete": [Function],
      }
    }
    filterConfig={
      Object {
        "hideLabel": true,
        "items": Array [
          Object {
            "filterValues": Object {
              "onChange": [Function],
              "value": "",
            },
            "id": "name",
            "label": "Name",
            "type": "text",
          },
          Object {
            "filterValues": Object {
              "items": Array [
                Object {
                  "label": <React.Fragment>
                    <ExclamationCircleIcon
                      className="ins-u-failed"
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     High
                  </React.Fragment>,
                  "value": "high",
                },
                Object {
                  "label": <React.Fragment>
                    <ExclamationTriangleIcon
                      className="ins-u-warning"
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     Medium
                  </React.Fragment>,
                  "value": "medium",
                },
                Object {
                  "label": <React.Fragment>
                    <svg
                      height="1em"
                      role="img"
                      style={
                        Object {
                          "verticalAlign": "-0.125em",
                        }
                      }
                      viewBox="0 0 18 18"
                      width="1em"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z"
                        fill="#3A9CA6"
                        fillRule="evenodd"
                      />
                    </svg>
                     Low
                  </React.Fragment>,
                  "value": "low",
                },
                Object {
                  "label": <React.Fragment>
                    <QuestionCircleIcon
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     Unknown
                  </React.Fragment>,
                  "value": "unknown",
                },
              ],
              "onChange": [Function],
              "value": Array [],
            },
            "id": "severity",
            "label": "Severity",
            "type": "checkbox",
          },
          Object {
            "filterValues": Object {
              "items": Array [
                Object {
                  "label": "Show passed rules",
                  "value": "passed",
                },
                Object {
                  "label": "Hide passed rules",
                  "value": "failed",
                },
              ],
              "onChange": [Function],
              "value": undefined,
            },
            "id": "passed",
            "label": "Passed",
            "type": "radio",
          },
        ],
      }
    }
    pagination={
      Object {
        "dropDirection": "down",
        "itemCount": 52,
        "onPerPageSelect": [Function],
        "onSetPage": [Function],
        "page": 1,
        "perPage": 10,
      }
    }
    toggleIsExpanded={[Function]}
  >
    <Component>
      52
       results
    </Component>
  </PrimaryToolbar>
  <Table
    aria-label="Rules table"
    borders={true}
    canSelectAll={true}
    cells={
      Array [
        Object {
          "title": "Rule",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Policy",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Severity",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Passed",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "original": "Ansible",
          "title": <React.Fragment>
            <svg
              height="18px"
              id="ansible_icon"
              version="1.1"
              viewBox="0 0 18 18"
              width="18px"
            >
              <path
                className="st0"
                d="M7.965,8.47125 L11.480625,11.25 L9.1575,5.50125 L7.965,8.47125 Z M12.6894375,13.483125 C12.605625,13.483125 12.5263125,13.46625 12.4531875,13.4325 C12.380625,13.39875 12.2900625,13.336875 12.200625,13.258125 L7.56,9.511875 L5.99625,13.415625 L4.6575,13.415625 L8.578125,3.96 C8.634375,3.830625 8.713125,3.735 8.814375,3.6675 C8.915625,3.605625 9.028125,3.571875 9.1575,3.571875 C9.275625,3.571875 9.3825,3.605625 9.48375,3.6675 C9.585,3.729375 9.658125,3.830625 9.703125,3.96 L13.291875,12.571875 C13.314375,12.628125 13.33125,12.684375 13.336875,12.729375 C13.3425,12.774375 13.348125,12.81375 13.348125,12.83625 C13.348125,13.021875 13.28625,13.179375 13.1563125,13.303125 C13.0275,13.426875 12.87,13.483125 12.6894375,13.483125 L12.6894375,13.483125 Z M9,0 C7.756875,0 6.586875,0.23625 5.495625,0.703125 C4.404375,1.17 3.4425,1.81125 2.626875,2.626875 C1.81125,3.4425 1.17,4.39875 0.703125,5.495625 C0.23625,6.5925 0,7.756875 0,9 C0,10.243125 0.23625,11.413125 0.703125,12.504375 C1.17,13.595625 1.81125,14.5575 2.626875,15.3675 C3.4425,16.1825625 4.39875,16.824375 5.49,17.29125 C6.58125,17.758125 7.756875,18 9,18 C10.243125,18 11.413125,17.76375 12.504375,17.296875 C13.595625,16.83 14.5575,16.18875 15.3675,15.373125 C16.1825625,14.5575 16.824375,13.60125 17.29125,12.51 C17.758125,11.41875 18,10.243125 18,9 C18,7.756875 17.76375,6.586875 17.296875,5.495625 C16.83,4.404375 16.18875,3.4425 15.373125,2.6325 C14.5575,1.816875 13.60125,1.175625 12.51,0.70875 C11.41875,0.241875 10.243125,0 9,0 L9,0 Z"
              />
            </svg>
             Ansible
          </React.Fragment>,
          "transforms": Array [
            [Function],
          ],
        },
      ]
    }
    className="compliance-rules-table"
    contentId="expanded-content"
    dropdownDirection="down"
    dropdownPosition="right"
    expandId="expandable-toggle"
    gridBreakPoint="grid-md"
    onCollapse={[Function]}
    onSort={[Function]}
    role="grid"
    rowLabeledBy="simple-node"
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Verify that All World-Writable Directories Have Sticky Bits Set"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_dir_perms_world_writable_sticky_bits",
          "rowKey": "xccdf_org.ssgproject.content_rule_dir_perms_world_writable_sticky_bits-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "When the so-called 'sticky bit' is set on a directory, only the owner of a given file may remove that file from the directory. Without the sticky bit, any user with write access to a directory may remove any file in the directory. Setting the sticky bit prevents users from removing each other's files. In cases where there is no reason for a directory to be world-writable, a better solution is to remove that permission rather than to set the sticky bit. However, if a directory is used by a particular application, consult that application's documentation instead of blindly changing modes. To set the sticky bit on a world-writable directory DIR, run the following command: $ sudo chmod +t DIR",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "Failing to set the sticky bit on public directories allows unauthorized users to delete files in the directory structure. The only authorized public directories are those temporary directories supplied with the system, or those designed to be temporary file repositories. The setting is normally reserved for directories used by the system, by users for temporary file storage (such as /tmp), and for directories requiring global read/write access.",
                    "refId": "xccdf_org.ssgproject.content_rule_dir_perms_world_writable_sticky_bits",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_dir_perms_world_writable_sticky_bits-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Verify that All World-Writable Directories Have Sticky Bits Set",
                  }
                }
              />,
            },
          ],
          "parent": 0,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Verify File Hashes with RPM"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationCircleIcon
                  className="ins-u-failed"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 High
              </React.Fragment>,
            },
            Object {
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_rpm_verify_hashes",
          "rowKey": "xccdf_org.ssgproject.content_rule_rpm_verify_hashes-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "Without cryptographic integrity protections, system executables and files can be altered by unauthorized users without detection. The RPM package management system can check the hashes of installed software packages, including many that are important to system security. To verify that the cryptographic hash of system files and commands match vendor values, run the following command to list which files on the system have hashes that differ from what is expected by the RPM database: $ rpm -Va | grep '^..5' A \\"c\\" in the second column indicates that a file is a configuration file, which may appropriately be expected to change.  If the file was not expected to change, investigate the cause of the change using audit logs or other means. The package can then be reinstalled to restore the file. Run the following command to determine which package owns the file: $ rpm -qf FILENAME The package can be reinstalled from a yum repository using the command: $ sudo yum reinstall PACKAGENAME Alternatively, the package can be reinstalled from trusted media using the command: $ sudo rpm -Uvh PACKAGENAME",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The hashes of important files like system executables should match the information given by the RPM database. Executables with erroneous hashes could be a sign of nefarious activity on the system.",
                    "refId": "xccdf_org.ssgproject.content_rule_rpm_verify_hashes",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_rpm_verify_hashes-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "high",
                    "title": "Verify File Hashes with RPM",
                  }
                }
              />,
            },
          ],
          "parent": 2,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Verify and Correct File Permissions with RPM"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationCircleIcon
                  className="ins-u-failed"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 High
              </React.Fragment>,
            },
            Object {
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_rpm_verify_permissions",
          "rowKey": "xccdf_org.ssgproject.content_rule_rpm_verify_permissions-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "The RPM package management system can check file access permissions of installed software packages, including many that are important to system security. Verify that the file permissions of system files and commands match vendor values. Check the file permissions with the following command: $ sudo rpm -Va | awk '{ if (substr($0,2,1)==\\"M\\") print $NF }' Output indicates files that do not match vendor defaults. After locating a file with incorrect permissions, run the following command to determine which package owns it: $ rpm -qf FILENAME Next, run the following command to reset its permissions to the correct values: $ sudo rpm --setperms PACKAGENAME",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "Permissions on system binaries and configuration files that are too generous could allow an unauthorized user to gain privileges that they should not have. The permissions set by the vendor should be maintained. Any deviations from this baseline should be investigated.",
                    "refId": "xccdf_org.ssgproject.content_rule_rpm_verify_permissions",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_rpm_verify_permissions-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "high",
                    "title": "Verify and Correct File Permissions with RPM",
                  }
                }
              />,
            },
          ],
          "parent": 4,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={
                  Object {
                    "label": "CCE-80441-9",
                    "system": "https://nvd.nist.gov/cce/index.cfm",
                  }
                }
                title="Use direct-lvm with the Device Mapper Storage Driver"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <svg
                  height="1em"
                  role="img"
                  style={
                    Object {
                      "verticalAlign": "-0.125em",
                    }
                  }
                  viewBox="0 0 18 18"
                  width="1em"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z"
                    fill="#3A9CA6"
                    fillRule="evenodd"
                  />
                </svg>
                 Low
              </React.Fragment>,
            },
            Object {
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_docker_storage_configured",
          "rowKey": "xccdf_org.ssgproject.content_rule_docker_storage_configured-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "foodescription",
                    "identifier": Object {
                      "label": "CCE-80441-9",
                      "system": "https://nvd.nist.gov/cce/index.cfm",
                    },
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "foorationale",
                    "refId": "xccdf_org.ssgproject.content_rule_docker_storage_configured",
                    "references": Array [],
                    "rowKey": "xccdf_org.ssgproject.content_rule_docker_storage_configured-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "low",
                    "title": "Use direct-lvm with the Device Mapper Storage Driver",
                  }
                }
              />,
            },
          ],
          "parent": 6,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Record Events that Modify User/Group Information"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <ExclamationCircleIcon
                className="ins-u-failed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification",
          "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": false,
                    "description": "If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix .rules in the directory /etc/audit/rules.d, in order to capture events that modify account changes: -w /etc/group -p wa -k audit_rules_usergroup_modification -w /etc/passwd -p wa -k audit_rules_usergroup_modification -w /etc/gshadow -p wa -k audit_rules_usergroup_modification -w /etc/shadow -p wa -k audit_rules_usergroup_modification -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file, in order to capture events that modify account changes: -w /etc/group -p wa -k audit_rules_usergroup_modification -w /etc/passwd -p wa -k audit_rules_usergroup_modification -w /etc/gshadow -p wa -k audit_rules_usergroup_modification -w /etc/shadow -p wa -k audit_rules_usergroup_modification -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "In addition to auditing new user and group accounts, these watches will alert the system administrator(s) to any modifications. Any unexpected users, groups, or modifications should be investigated for legitimacy.",
                    "refId": "xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Record Events that Modify User/Group Information",
                  }
                }
              />,
            },
          ],
          "parent": 8,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Record Events that Modify the System's Network Environment"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <ExclamationCircleIcon
                className="ins-u-failed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_audit_rules_networkconfig_modification",
          "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_networkconfig_modification-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": false,
                    "description": "If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix .rules in the directory /etc/audit/rules.d, setting ARCH to either b32 or b64 as appropriate for your system: -a always,exit -F arch=ARCH -S sethostname,setdomainname -F key=audit_rules_networkconfig_modification -w /etc/issue -p wa -k audit_rules_networkconfig_modification -w /etc/issue.net -p wa -k audit_rules_networkconfig_modification -w /etc/hosts -p wa -k audit_rules_networkconfig_modification -w /etc/sysconfig/network -p wa -k audit_rules_networkconfig_modification If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file, setting ARCH to either b32 or b64 as appropriate for your system: -a always,exit -F arch=ARCH -S sethostname,setdomainname -F key=audit_rules_networkconfig_modification -w /etc/issue -p wa -k audit_rules_networkconfig_modification -w /etc/issue.net -p wa -k audit_rules_networkconfig_modification -w /etc/hosts -p wa -k audit_rules_networkconfig_modification -w /etc/sysconfig/network -p wa -k audit_rules_networkconfig_modification",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The network environment should not be modified by anything other than administrator action. Any change to network parameters should be audited.",
                    "refId": "xccdf_org.ssgproject.content_rule_audit_rules_networkconfig_modification",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_networkconfig_modification-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Record Events that Modify the System's Network Environment",
                  }
                }
              />,
            },
          ],
          "parent": 10,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Record Events that Modify the System's Mandatory Access Controls"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <ExclamationCircleIcon
                className="ins-u-failed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_audit_rules_mac_modification",
          "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_mac_modification-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": false,
                    "description": "If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix .rules in the directory /etc/audit/rules.d: -w /etc/selinux/ -p wa -k MAC-policy If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file: -w /etc/selinux/ -p wa -k MAC-policy",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The system's mandatory access policy (SELinux) should not be arbitrarily changed by anything other than administrator action. All changes to MAC policy should be audited.",
                    "refId": "xccdf_org.ssgproject.content_rule_audit_rules_mac_modification",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_mac_modification-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Record Events that Modify the System's Mandatory Access Controls",
                  }
                }
              />,
            },
          ],
          "parent": 12,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Record Events that Modify the System's Discretionary Access Controls - setxattr"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <ExclamationCircleIcon
                className="ins-u-failed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_setxattr",
          "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_setxattr-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": false,
                    "description": "At a minimum, the audit system should collect file permission changes for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix .rules in the directory /etc/audit/rules.d: -a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file: -a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.",
                    "refId": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_setxattr",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_setxattr-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Record Events that Modify the System's Discretionary Access Controls - setxattr",
                  }
                }
              />,
            },
          ],
          "parent": 14,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Record Events that Modify the System's Discretionary Access Controls - removexattr"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <ExclamationCircleIcon
                className="ins-u-failed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_removexattr",
          "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_removexattr-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": false,
                    "description": "At a minimum, the audit system should collect file permission changes for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix .rules in the directory /etc/audit/rules.d: -a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file: -a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.",
                    "refId": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_removexattr",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_removexattr-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Record Events that Modify the System's Discretionary Access Controls - removexattr",
                  }
                }
              />,
            },
          ],
          "parent": 16,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Record Events that Modify the System's Discretionary Access Controls - lsetxattr"
              />,
            },
            Object {
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": <ExclamationCircleIcon
                className="ins-u-failed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              />,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_lsetxattr",
          "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_lsetxattr-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": false,
                    "description": "At a minimum, the audit system should collect file permission changes for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix .rules in the directory /etc/audit/rules.d: -a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file: -a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.",
                    "refId": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_lsetxattr",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_lsetxattr-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Record Events that Modify the System's Discretionary Access Controls - lsetxattr",
                  }
                }
              />,
            },
          ],
          "parent": 18,
        },
      ]
    }
    sortBy={Object {}}
    variant={null}
  >
    <Component />
    <Component />
  </Table>
  <TableToolbar
    className="ins-c-inventory__table--toolbar"
    isFooter={true}
  >
    <Pagination
      className=""
      defaultToFullPage={false}
      dropDirection="up"
      firstPage={1}
      isCompact={false}
      isDisabled={false}
      itemCount={52}
      itemsEnd={null}
      itemsStart={null}
      offset={0}
      onFirstClick={[Function]}
      onLastClick={[Function]}
      onNextClick={[Function]}
      onPageInput={[Function]}
      onPerPageSelect={[Function]}
      onPreviousClick={[Function]}
      onSetPage={[Function]}
      ouiaId={null}
      page={1}
      perPage={10}
      perPageOptions={
        Array [
          Object {
            "title": "10",
            "value": 10,
          },
          Object {
            "title": "20",
            "value": 20,
          },
          Object {
            "title": "50",
            "value": 50,
          },
          Object {
            "title": "100",
            "value": 100,
          },
        ]
      }
      titles={
        Object {
          "currPage": "Current page",
          "items": "",
          "itemsPerPage": "Items per page",
          "optionsToggle": "Items per page",
          "page": "",
          "paginationTitle": "Pagination",
          "perPageSuffix": "per page",
          "toFirstPage": "Go to first page",
          "toLastPage": "Go to last page",
          "toNextPage": "Go to next page",
          "toPreviousPage": "Go to previous page",
        }
      }
      toggleTemplate={[Function]}
      variant="bottom"
      widgetId="pagination-options-menu"
    />
  </TableToolbar>
</Fragment>
`;

exports[`SystemRulesTable component tailoring rules should be able to filter by selected/unselected rules if tailoring is enabled 1`] = `
<Fragment>
  <PrimaryToolbar
    activeFiltersConfig={
      Object {
        "filters": Array [
          Object {
            "category": "Selected",
            "chips": Array [
              Object {
                "name": "Show selected rules",
              },
            ],
          },
        ],
        "onDelete": [Function],
      }
    }
    filterConfig={
      Object {
        "hideLabel": true,
        "items": Array [
          Object {
            "filterValues": Object {
              "onChange": [Function],
              "value": "",
            },
            "id": "name",
            "label": "Name",
            "type": "text",
          },
          Object {
            "filterValues": Object {
              "items": Array [
                Object {
                  "label": <React.Fragment>
                    <ExclamationCircleIcon
                      className="ins-u-failed"
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     High
                  </React.Fragment>,
                  "value": "high",
                },
                Object {
                  "label": <React.Fragment>
                    <ExclamationTriangleIcon
                      className="ins-u-warning"
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     Medium
                  </React.Fragment>,
                  "value": "medium",
                },
                Object {
                  "label": <React.Fragment>
                    <svg
                      height="1em"
                      role="img"
                      style={
                        Object {
                          "verticalAlign": "-0.125em",
                        }
                      }
                      viewBox="0 0 18 18"
                      width="1em"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z"
                        fill="#3A9CA6"
                        fillRule="evenodd"
                      />
                    </svg>
                     Low
                  </React.Fragment>,
                  "value": "low",
                },
                Object {
                  "label": <React.Fragment>
                    <QuestionCircleIcon
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     Unknown
                  </React.Fragment>,
                  "value": "unknown",
                },
              ],
              "onChange": [Function],
              "value": Array [],
            },
            "id": "severity",
            "label": "Severity",
            "type": "checkbox",
          },
          Object {
            "filterValues": Object {
              "items": Array [
                Object {
                  "label": "Show selected rules",
                  "value": "selected",
                },
              ],
              "onChange": [Function],
              "value": Array [
                "selected",
              ],
            },
            "id": "selected",
            "label": "Selected",
            "type": "checkbox",
          },
        ],
      }
    }
    pagination={
      Object {
        "dropDirection": "down",
        "itemCount": 0,
        "onPerPageSelect": [Function],
        "onSetPage": [Function],
        "page": 1,
        "perPage": 10,
      }
    }
    toggleIsExpanded={[Function]}
  >
    <Component>
      <Connect(ComplianceRemediationButton)
        allSystems={
          Array [
            Object {
              "id": "aa9c4497-5707-4233-9e9b-1fded5423ef3",
              "profiles": Array [
                Object {
                  "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                  "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                  "rules": Array [
                    Object {
                      "compliant": true,
                      "description": "foodescription",
                      "identifier": "{\\"label\\":\\"CCE-80441-9\\",\\"system\\":\\"https://nvd.nist.gov/cce/index.cfm\\"}",
                      "rationale": "foorationale",
                      "refId": "xccdf_org.ssgproject.content_rule_docker_storage_configured",
                      "references": "[]",
                      "severity": "low",
                      "title": "Use direct-lvm with the Device Mapper Storage Driver",
                    },
                    Object {
                      "compliant": true,
                      "description": "foodescription",
                      "identifier": "{\\"label\\":\\"CCE-80440-1\\",\\"system\\":\\"https://nvd.nist.gov/cce/index.cfm\\"}",
                      "rationale": "foorationale",
                      "refId": "xccdf_org.ssgproject.content_rule_service_docker_enabled",
                      "references": "[]",
                      "severity": "medium",
                      "title": "Enable the Docker service",
                    },
                    Object {
                      "compliant": true,
                      "description": "The at and batch commands can be used to schedule tasks that are meant to be executed",
                      "identifier": null,
                      "rationale": "The atd service could be used by an unsophisticated insider to carry out activities ",
                      "refId": "xccdf_org.ssgproject.content_rule_service_atd_disabled",
                      "remediationAvailable": false,
                      "severity": "medium",
                      "title": "Disable At Service (atd)",
                    },
                  ],
                },
              ],
              "ruleObjectsFailed": Array [],
            },
          ]
        }
        selectedRules={Array []}
      />
    </Component>
    <Component>
      0
       results
    </Component>
  </PrimaryToolbar>
  <Table
    aria-label="Rules table"
    borders={true}
    canSelectAll={true}
    cells={
      Array [
        Object {
          "title": "Rule",
        },
        Object {
          "title": "Severity",
        },
        Object {
          "original": "Ansible",
          "title": <React.Fragment>
            <svg
              height="18px"
              id="ansible_icon"
              version="1.1"
              viewBox="0 0 18 18"
              width="18px"
            >
              <path
                className="st0"
                d="M7.965,8.47125 L11.480625,11.25 L9.1575,5.50125 L7.965,8.47125 Z M12.6894375,13.483125 C12.605625,13.483125 12.5263125,13.46625 12.4531875,13.4325 C12.380625,13.39875 12.2900625,13.336875 12.200625,13.258125 L7.56,9.511875 L5.99625,13.415625 L4.6575,13.415625 L8.578125,3.96 C8.634375,3.830625 8.713125,3.735 8.814375,3.6675 C8.915625,3.605625 9.028125,3.571875 9.1575,3.571875 C9.275625,3.571875 9.3825,3.605625 9.48375,3.6675 C9.585,3.729375 9.658125,3.830625 9.703125,3.96 L13.291875,12.571875 C13.314375,12.628125 13.33125,12.684375 13.336875,12.729375 C13.3425,12.774375 13.348125,12.81375 13.348125,12.83625 C13.348125,13.021875 13.28625,13.179375 13.1563125,13.303125 C13.0275,13.426875 12.87,13.483125 12.6894375,13.483125 L12.6894375,13.483125 Z M9,0 C7.756875,0 6.586875,0.23625 5.495625,0.703125 C4.404375,1.17 3.4425,1.81125 2.626875,2.626875 C1.81125,3.4425 1.17,4.39875 0.703125,5.495625 C0.23625,6.5925 0,7.756875 0,9 C0,10.243125 0.23625,11.413125 0.703125,12.504375 C1.17,13.595625 1.81125,14.5575 2.626875,15.3675 C3.4425,16.1825625 4.39875,16.824375 5.49,17.29125 C6.58125,17.758125 7.756875,18 9,18 C10.243125,18 11.413125,17.76375 12.504375,17.296875 C13.595625,16.83 14.5575,16.18875 15.3675,15.373125 C16.1825625,14.5575 16.824375,13.60125 17.29125,12.51 C17.758125,11.41875 18,10.243125 18,9 C18,7.756875 17.76375,6.586875 17.296875,5.495625 C16.83,4.404375 16.18875,3.4425 15.373125,2.6325 C14.5575,1.816875 13.60125,1.175625 12.51,0.70875 C11.41875,0.241875 10.243125,0 9,0 L9,0 Z"
              />
            </svg>
             Ansible
          </React.Fragment>,
        },
      ]
    }
    className="compliance-rules-table"
    contentId="expanded-content"
    dropdownDirection="down"
    dropdownPosition="right"
    expandId="expandable-toggle"
    gridBreakPoint="grid-md"
    onCollapse={[Function]}
    onSort={[Function]}
    role="grid"
    rowLabeledBy="simple-node"
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "props": Object {
                "colSpan": 5,
              },
              "title": <EmptyTable>
                <Unknown>
                  <Unknown
                    variant="full"
                  >
                    <Unknown
                      headingLevel="h5"
                      size="lg"
                    >
                      No matching rules found
                    </Unknown>
                    <Unknown>
                      This filter criteria matches no rules. 
                      <br />
                       Try changing your filter settings.
                    </Unknown>
                  </Unknown>
                </Unknown>
              </EmptyTable>,
            },
          ],
        },
      ]
    }
    sortBy={Object {}}
    variant={null}
  >
    <Component />
    <Component />
  </Table>
  <TableToolbar
    className="ins-c-inventory__table--toolbar"
    isFooter={true}
  >
    <Pagination
      className=""
      defaultToFullPage={false}
      dropDirection="up"
      firstPage={1}
      isCompact={false}
      isDisabled={false}
      itemCount={0}
      itemsEnd={null}
      itemsStart={null}
      offset={0}
      onFirstClick={[Function]}
      onLastClick={[Function]}
      onNextClick={[Function]}
      onPageInput={[Function]}
      onPerPageSelect={[Function]}
      onPreviousClick={[Function]}
      onSetPage={[Function]}
      ouiaId={null}
      page={1}
      perPage={10}
      perPageOptions={
        Array [
          Object {
            "title": "10",
            "value": 10,
          },
          Object {
            "title": "20",
            "value": 20,
          },
          Object {
            "title": "50",
            "value": 50,
          },
          Object {
            "title": "100",
            "value": 100,
          },
        ]
      }
      titles={
        Object {
          "currPage": "Current page",
          "items": "",
          "itemsPerPage": "Items per page",
          "optionsToggle": "Items per page",
          "page": "",
          "paginationTitle": "Pagination",
          "perPageSuffix": "per page",
          "toFirstPage": "Go to first page",
          "toLastPage": "Go to last page",
          "toNextPage": "Go to next page",
          "toPreviousPage": "Go to previous page",
        }
      }
      toggleTemplate={[Function]}
      variant="bottom"
      widgetId="pagination-options-menu"
    />
  </TableToolbar>
</Fragment>
`;

exports[`SystemRulesTable component tailoring rules should be able to filter by selected/unselected rules if tailoring is enabled 2`] = `
<Fragment>
  <PrimaryToolbar
    activeFiltersConfig={
      Object {
        "filters": Array [],
        "onDelete": [Function],
      }
    }
    filterConfig={
      Object {
        "hideLabel": true,
        "items": Array [
          Object {
            "filterValues": Object {
              "onChange": [Function],
              "value": "",
            },
            "id": "name",
            "label": "Name",
            "type": "text",
          },
          Object {
            "filterValues": Object {
              "items": Array [
                Object {
                  "label": <React.Fragment>
                    <ExclamationCircleIcon
                      className="ins-u-failed"
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     High
                  </React.Fragment>,
                  "value": "high",
                },
                Object {
                  "label": <React.Fragment>
                    <ExclamationTriangleIcon
                      className="ins-u-warning"
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     Medium
                  </React.Fragment>,
                  "value": "medium",
                },
                Object {
                  "label": <React.Fragment>
                    <svg
                      height="1em"
                      role="img"
                      style={
                        Object {
                          "verticalAlign": "-0.125em",
                        }
                      }
                      viewBox="0 0 18 18"
                      width="1em"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z"
                        fill="#3A9CA6"
                        fillRule="evenodd"
                      />
                    </svg>
                     Low
                  </React.Fragment>,
                  "value": "low",
                },
                Object {
                  "label": <React.Fragment>
                    <QuestionCircleIcon
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     Unknown
                  </React.Fragment>,
                  "value": "unknown",
                },
              ],
              "onChange": [Function],
              "value": Array [],
            },
            "id": "severity",
            "label": "Severity",
            "type": "checkbox",
          },
          Object {
            "filterValues": Object {
              "items": Array [
                Object {
                  "label": "Show selected rules",
                  "value": "selected",
                },
              ],
              "onChange": [Function],
              "value": undefined,
            },
            "id": "selected",
            "label": "Selected",
            "type": "checkbox",
          },
        ],
      }
    }
    pagination={
      Object {
        "dropDirection": "down",
        "itemCount": 52,
        "onPerPageSelect": [Function],
        "onSetPage": [Function],
        "page": 1,
        "perPage": 10,
      }
    }
    toggleIsExpanded={[Function]}
  >
    <Component>
      <Connect(ComplianceRemediationButton)
        allSystems={
          Array [
            Object {
              "id": "aa9c4497-5707-4233-9e9b-1fded5423ef3",
              "profiles": Array [
                Object {
                  "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                  "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                  "rules": Array [
                    Object {
                      "compliant": true,
                      "description": "foodescription",
                      "identifier": "{\\"label\\":\\"CCE-80441-9\\",\\"system\\":\\"https://nvd.nist.gov/cce/index.cfm\\"}",
                      "rationale": "foorationale",
                      "refId": "xccdf_org.ssgproject.content_rule_docker_storage_configured",
                      "references": "[]",
                      "severity": "low",
                      "title": "Use direct-lvm with the Device Mapper Storage Driver",
                    },
                    Object {
                      "compliant": true,
                      "description": "foodescription",
                      "identifier": "{\\"label\\":\\"CCE-80440-1\\",\\"system\\":\\"https://nvd.nist.gov/cce/index.cfm\\"}",
                      "rationale": "foorationale",
                      "refId": "xccdf_org.ssgproject.content_rule_service_docker_enabled",
                      "references": "[]",
                      "severity": "medium",
                      "title": "Enable the Docker service",
                    },
                    Object {
                      "compliant": true,
                      "description": "The at and batch commands can be used to schedule tasks that are meant to be executed",
                      "identifier": null,
                      "rationale": "The atd service could be used by an unsophisticated insider to carry out activities ",
                      "refId": "xccdf_org.ssgproject.content_rule_service_atd_disabled",
                      "remediationAvailable": false,
                      "severity": "medium",
                      "title": "Disable At Service (atd)",
                    },
                  ],
                },
              ],
              "ruleObjectsFailed": Array [],
            },
          ]
        }
        selectedRules={Array []}
      />
    </Component>
    <Component>
      52
       results
    </Component>
  </PrimaryToolbar>
  <Table
    aria-label="Rules table"
    borders={true}
    canSelectAll={true}
    cells={
      Array [
        Object {
          "title": "Rule",
        },
        Object {
          "title": "Severity",
        },
        Object {
          "original": "Ansible",
          "title": <React.Fragment>
            <svg
              height="18px"
              id="ansible_icon"
              version="1.1"
              viewBox="0 0 18 18"
              width="18px"
            >
              <path
                className="st0"
                d="M7.965,8.47125 L11.480625,11.25 L9.1575,5.50125 L7.965,8.47125 Z M12.6894375,13.483125 C12.605625,13.483125 12.5263125,13.46625 12.4531875,13.4325 C12.380625,13.39875 12.2900625,13.336875 12.200625,13.258125 L7.56,9.511875 L5.99625,13.415625 L4.6575,13.415625 L8.578125,3.96 C8.634375,3.830625 8.713125,3.735 8.814375,3.6675 C8.915625,3.605625 9.028125,3.571875 9.1575,3.571875 C9.275625,3.571875 9.3825,3.605625 9.48375,3.6675 C9.585,3.729375 9.658125,3.830625 9.703125,3.96 L13.291875,12.571875 C13.314375,12.628125 13.33125,12.684375 13.336875,12.729375 C13.3425,12.774375 13.348125,12.81375 13.348125,12.83625 C13.348125,13.021875 13.28625,13.179375 13.1563125,13.303125 C13.0275,13.426875 12.87,13.483125 12.6894375,13.483125 L12.6894375,13.483125 Z M9,0 C7.756875,0 6.586875,0.23625 5.495625,0.703125 C4.404375,1.17 3.4425,1.81125 2.626875,2.626875 C1.81125,3.4425 1.17,4.39875 0.703125,5.495625 C0.23625,6.5925 0,7.756875 0,9 C0,10.243125 0.23625,11.413125 0.703125,12.504375 C1.17,13.595625 1.81125,14.5575 2.626875,15.3675 C3.4425,16.1825625 4.39875,16.824375 5.49,17.29125 C6.58125,17.758125 7.756875,18 9,18 C10.243125,18 11.413125,17.76375 12.504375,17.296875 C13.595625,16.83 14.5575,16.18875 15.3675,15.373125 C16.1825625,14.5575 16.824375,13.60125 17.29125,12.51 C17.758125,11.41875 18,10.243125 18,9 C18,7.756875 17.76375,6.586875 17.296875,5.495625 C16.83,4.404375 16.18875,3.4425 15.373125,2.6325 C14.5575,1.816875 13.60125,1.175625 12.51,0.70875 C11.41875,0.241875 10.243125,0 9,0 L9,0 Z"
              />
            </svg>
             Ansible
          </React.Fragment>,
        },
      ]
    }
    className="compliance-rules-table"
    contentId="expanded-content"
    dropdownDirection="down"
    dropdownPosition="right"
    expandId="expandable-toggle"
    gridBreakPoint="grid-md"
    onCollapse={[Function]}
    onSelect={[Function]}
    onSort={[Function]}
    role="grid"
    rowLabeledBy="simple-node"
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Verify that All World-Writable Directories Have Sticky Bits Set"
              />,
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_dir_perms_world_writable_sticky_bits",
          "rowKey": "xccdf_org.ssgproject.content_rule_dir_perms_world_writable_sticky_bits-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "When the so-called 'sticky bit' is set on a directory, only the owner of a given file may remove that file from the directory. Without the sticky bit, any user with write access to a directory may remove any file in the directory. Setting the sticky bit prevents users from removing each other's files. In cases where there is no reason for a directory to be world-writable, a better solution is to remove that permission rather than to set the sticky bit. However, if a directory is used by a particular application, consult that application's documentation instead of blindly changing modes. To set the sticky bit on a world-writable directory DIR, run the following command: $ sudo chmod +t DIR",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "Failing to set the sticky bit on public directories allows unauthorized users to delete files in the directory structure. The only authorized public directories are those temporary directories supplied with the system, or those designed to be temporary file repositories. The setting is normally reserved for directories used by the system, by users for temporary file storage (such as /tmp), and for directories requiring global read/write access.",
                    "refId": "xccdf_org.ssgproject.content_rule_dir_perms_world_writable_sticky_bits",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_dir_perms_world_writable_sticky_bits-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Verify that All World-Writable Directories Have Sticky Bits Set",
                  }
                }
              />,
            },
          ],
          "parent": 0,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Verify File Hashes with RPM"
              />,
            },
            Object {
              "title": <React.Fragment>
                <ExclamationCircleIcon
                  className="ins-u-failed"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 High
              </React.Fragment>,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_rpm_verify_hashes",
          "rowKey": "xccdf_org.ssgproject.content_rule_rpm_verify_hashes-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "Without cryptographic integrity protections, system executables and files can be altered by unauthorized users without detection. The RPM package management system can check the hashes of installed software packages, including many that are important to system security. To verify that the cryptographic hash of system files and commands match vendor values, run the following command to list which files on the system have hashes that differ from what is expected by the RPM database: $ rpm -Va | grep '^..5' A \\"c\\" in the second column indicates that a file is a configuration file, which may appropriately be expected to change.  If the file was not expected to change, investigate the cause of the change using audit logs or other means. The package can then be reinstalled to restore the file. Run the following command to determine which package owns the file: $ rpm -qf FILENAME The package can be reinstalled from a yum repository using the command: $ sudo yum reinstall PACKAGENAME Alternatively, the package can be reinstalled from trusted media using the command: $ sudo rpm -Uvh PACKAGENAME",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The hashes of important files like system executables should match the information given by the RPM database. Executables with erroneous hashes could be a sign of nefarious activity on the system.",
                    "refId": "xccdf_org.ssgproject.content_rule_rpm_verify_hashes",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_rpm_verify_hashes-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "high",
                    "title": "Verify File Hashes with RPM",
                  }
                }
              />,
            },
          ],
          "parent": 2,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Verify and Correct File Permissions with RPM"
              />,
            },
            Object {
              "title": <React.Fragment>
                <ExclamationCircleIcon
                  className="ins-u-failed"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 High
              </React.Fragment>,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_rpm_verify_permissions",
          "rowKey": "xccdf_org.ssgproject.content_rule_rpm_verify_permissions-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "The RPM package management system can check file access permissions of installed software packages, including many that are important to system security. Verify that the file permissions of system files and commands match vendor values. Check the file permissions with the following command: $ sudo rpm -Va | awk '{ if (substr($0,2,1)==\\"M\\") print $NF }' Output indicates files that do not match vendor defaults. After locating a file with incorrect permissions, run the following command to determine which package owns it: $ rpm -qf FILENAME Next, run the following command to reset its permissions to the correct values: $ sudo rpm --setperms PACKAGENAME",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "Permissions on system binaries and configuration files that are too generous could allow an unauthorized user to gain privileges that they should not have. The permissions set by the vendor should be maintained. Any deviations from this baseline should be investigated.",
                    "refId": "xccdf_org.ssgproject.content_rule_rpm_verify_permissions",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_rpm_verify_permissions-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "high",
                    "title": "Verify and Correct File Permissions with RPM",
                  }
                }
              />,
            },
          ],
          "parent": 4,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={
                  Object {
                    "label": "CCE-80441-9",
                    "system": "https://nvd.nist.gov/cce/index.cfm",
                  }
                }
                title="Use direct-lvm with the Device Mapper Storage Driver"
              />,
            },
            Object {
              "title": <React.Fragment>
                <svg
                  height="1em"
                  role="img"
                  style={
                    Object {
                      "verticalAlign": "-0.125em",
                    }
                  }
                  viewBox="0 0 18 18"
                  width="1em"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z"
                    fill="#3A9CA6"
                    fillRule="evenodd"
                  />
                </svg>
                 Low
              </React.Fragment>,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_docker_storage_configured",
          "rowKey": "xccdf_org.ssgproject.content_rule_docker_storage_configured-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": true,
                    "description": "foodescription",
                    "identifier": Object {
                      "label": "CCE-80441-9",
                      "system": "https://nvd.nist.gov/cce/index.cfm",
                    },
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "foorationale",
                    "refId": "xccdf_org.ssgproject.content_rule_docker_storage_configured",
                    "references": Array [],
                    "rowKey": "xccdf_org.ssgproject.content_rule_docker_storage_configured-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "low",
                    "title": "Use direct-lvm with the Device Mapper Storage Driver",
                  }
                }
              />,
            },
          ],
          "parent": 6,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Record Events that Modify User/Group Information"
              />,
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification",
          "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": false,
                    "description": "If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix .rules in the directory /etc/audit/rules.d, in order to capture events that modify account changes: -w /etc/group -p wa -k audit_rules_usergroup_modification -w /etc/passwd -p wa -k audit_rules_usergroup_modification -w /etc/gshadow -p wa -k audit_rules_usergroup_modification -w /etc/shadow -p wa -k audit_rules_usergroup_modification -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file, in order to capture events that modify account changes: -w /etc/group -p wa -k audit_rules_usergroup_modification -w /etc/passwd -p wa -k audit_rules_usergroup_modification -w /etc/gshadow -p wa -k audit_rules_usergroup_modification -w /etc/shadow -p wa -k audit_rules_usergroup_modification -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "In addition to auditing new user and group accounts, these watches will alert the system administrator(s) to any modifications. Any unexpected users, groups, or modifications should be investigated for legitimacy.",
                    "refId": "xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Record Events that Modify User/Group Information",
                  }
                }
              />,
            },
          ],
          "parent": 8,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Record Events that Modify the System's Network Environment"
              />,
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_audit_rules_networkconfig_modification",
          "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_networkconfig_modification-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": false,
                    "description": "If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following lines to a file with suffix .rules in the directory /etc/audit/rules.d, setting ARCH to either b32 or b64 as appropriate for your system: -a always,exit -F arch=ARCH -S sethostname,setdomainname -F key=audit_rules_networkconfig_modification -w /etc/issue -p wa -k audit_rules_networkconfig_modification -w /etc/issue.net -p wa -k audit_rules_networkconfig_modification -w /etc/hosts -p wa -k audit_rules_networkconfig_modification -w /etc/sysconfig/network -p wa -k audit_rules_networkconfig_modification If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following lines to /etc/audit/audit.rules file, setting ARCH to either b32 or b64 as appropriate for your system: -a always,exit -F arch=ARCH -S sethostname,setdomainname -F key=audit_rules_networkconfig_modification -w /etc/issue -p wa -k audit_rules_networkconfig_modification -w /etc/issue.net -p wa -k audit_rules_networkconfig_modification -w /etc/hosts -p wa -k audit_rules_networkconfig_modification -w /etc/sysconfig/network -p wa -k audit_rules_networkconfig_modification",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The network environment should not be modified by anything other than administrator action. Any change to network parameters should be audited.",
                    "refId": "xccdf_org.ssgproject.content_rule_audit_rules_networkconfig_modification",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_networkconfig_modification-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Record Events that Modify the System's Network Environment",
                  }
                }
              />,
            },
          ],
          "parent": 10,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Record Events that Modify the System's Mandatory Access Controls"
              />,
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_audit_rules_mac_modification",
          "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_mac_modification-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": false,
                    "description": "If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix .rules in the directory /etc/audit/rules.d: -w /etc/selinux/ -p wa -k MAC-policy If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file: -w /etc/selinux/ -p wa -k MAC-policy",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The system's mandatory access policy (SELinux) should not be arbitrarily changed by anything other than administrator action. All changes to MAC policy should be audited.",
                    "refId": "xccdf_org.ssgproject.content_rule_audit_rules_mac_modification",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_mac_modification-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Record Events that Modify the System's Mandatory Access Controls",
                  }
                }
              />,
            },
          ],
          "parent": 12,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Record Events that Modify the System's Discretionary Access Controls - setxattr"
              />,
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_setxattr",
          "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_setxattr-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": false,
                    "description": "At a minimum, the audit system should collect file permission changes for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix .rules in the directory /etc/audit/rules.d: -a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file: -a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.",
                    "refId": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_setxattr",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_setxattr-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Record Events that Modify the System's Discretionary Access Controls - setxattr",
                  }
                }
              />,
            },
          ],
          "parent": 14,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Record Events that Modify the System's Discretionary Access Controls - removexattr"
              />,
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_removexattr",
          "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_removexattr-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": false,
                    "description": "At a minimum, the audit system should collect file permission changes for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix .rules in the directory /etc/audit/rules.d: -a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file: -a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.",
                    "refId": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_removexattr",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_removexattr-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Record Events that Modify the System's Discretionary Access Controls - removexattr",
                  }
                }
              />,
            },
          ],
          "parent": 16,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleTitle
                identifier={null}
                title="Record Events that Modify the System's Discretionary Access Controls - lsetxattr"
              />,
            },
            Object {
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "title": "No",
            },
          ],
          "isOpen": false,
          "refId": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_lsetxattr",
          "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_lsetxattr-xccdf_org.ssgproject.content_profile_pci-dss",
          "selected": false,
        },
        Object {
          "cells": Array [
            Object {
              "title": <RuleChildRow
                rule={
                  Object {
                    "compliant": false,
                    "description": "At a minimum, the audit system should collect file permission changes for all users and root. If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the following line to a file with suffix .rules in the directory /etc/audit/rules.d: -a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the following line to /etc/audit/audit.rules file: -a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod If the system is 64 bit then also add the following line: -a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod",
                    "identifier": null,
                    "isOpen": false,
                    "isSelected": false,
                    "policies": Array [
                      Object {
                        "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                        "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                      },
                    ],
                    "rationale": "The changing of file permissions could indicate that a user is attempting to gain access to information that would otherwise be disallowed. Auditing DAC modifications can facilitate the identification of patterns of abuse among both authorized and unauthorized users.",
                    "refId": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_lsetxattr",
                    "references": Array [],
                    "remediationAvailable": false,
                    "rowKey": "xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_lsetxattr-xccdf_org.ssgproject.content_profile_pci-dss",
                    "severity": "medium",
                    "title": "Record Events that Modify the System's Discretionary Access Controls - lsetxattr",
                  }
                }
              />,
            },
          ],
          "parent": 18,
        },
      ]
    }
    sortBy={Object {}}
    variant={null}
  >
    <Component />
    <Component />
  </Table>
  <TableToolbar
    className="ins-c-inventory__table--toolbar"
    isFooter={true}
  >
    <Pagination
      className=""
      defaultToFullPage={false}
      dropDirection="up"
      firstPage={1}
      isCompact={false}
      isDisabled={false}
      itemCount={52}
      itemsEnd={null}
      itemsStart={null}
      offset={0}
      onFirstClick={[Function]}
      onLastClick={[Function]}
      onNextClick={[Function]}
      onPageInput={[Function]}
      onPerPageSelect={[Function]}
      onPreviousClick={[Function]}
      onSetPage={[Function]}
      ouiaId={null}
      page={1}
      perPage={10}
      perPageOptions={
        Array [
          Object {
            "title": "10",
            "value": 10,
          },
          Object {
            "title": "20",
            "value": 20,
          },
          Object {
            "title": "50",
            "value": 50,
          },
          Object {
            "title": "100",
            "value": 100,
          },
        ]
      }
      titles={
        Object {
          "currPage": "Current page",
          "items": "",
          "itemsPerPage": "Items per page",
          "optionsToggle": "Items per page",
          "page": "",
          "paginationTitle": "Pagination",
          "perPageSuffix": "per page",
          "toFirstPage": "Go to first page",
          "toLastPage": "Go to last page",
          "toNextPage": "Go to next page",
          "toPreviousPage": "Go to previous page",
        }
      }
      toggleTemplate={[Function]}
      variant="bottom"
      widgetId="pagination-options-menu"
    />
  </TableToolbar>
</Fragment>
`;

exports[`SystemRulesTable component tailoring rules should be able to show all selected rules if tailoring is enabled 1`] = `
<Fragment>
  <PrimaryToolbar
    activeFiltersConfig={
      Object {
        "filters": Array [
          Object {
            "category": "Selected",
            "chips": Array [
              Object {
                "name": "Show selected rules",
              },
            ],
          },
        ],
        "onDelete": [Function],
      }
    }
    filterConfig={
      Object {
        "hideLabel": true,
        "items": Array [
          Object {
            "filterValues": Object {
              "onChange": [Function],
              "value": "",
            },
            "id": "name",
            "label": "Name",
            "type": "text",
          },
          Object {
            "filterValues": Object {
              "items": Array [
                Object {
                  "label": <React.Fragment>
                    <ExclamationCircleIcon
                      className="ins-u-failed"
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     High
                  </React.Fragment>,
                  "value": "high",
                },
                Object {
                  "label": <React.Fragment>
                    <ExclamationTriangleIcon
                      className="ins-u-warning"
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     Medium
                  </React.Fragment>,
                  "value": "medium",
                },
                Object {
                  "label": <React.Fragment>
                    <svg
                      height="1em"
                      role="img"
                      style={
                        Object {
                          "verticalAlign": "-0.125em",
                        }
                      }
                      viewBox="0 0 18 18"
                      width="1em"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z"
                        fill="#3A9CA6"
                        fillRule="evenodd"
                      />
                    </svg>
                     Low
                  </React.Fragment>,
                  "value": "low",
                },
                Object {
                  "label": <React.Fragment>
                    <QuestionCircleIcon
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    />
                     Unknown
                  </React.Fragment>,
                  "value": "unknown",
                },
              ],
              "onChange": [Function],
              "value": Array [],
            },
            "id": "severity",
            "label": "Severity",
            "type": "checkbox",
          },
          Object {
            "filterValues": Object {
              "items": Array [
                Object {
                  "label": "Show selected rules",
                  "value": "selected",
                },
              ],
              "onChange": [Function],
              "value": Array [
                "selected",
              ],
            },
            "id": "selected",
            "label": "Selected",
            "type": "checkbox",
          },
        ],
      }
    }
    pagination={
      Object {
        "dropDirection": "down",
        "itemCount": 0,
        "onPerPageSelect": [Function],
        "onSetPage": [Function],
        "page": 1,
        "perPage": 10,
      }
    }
    toggleIsExpanded={[Function]}
  >
    <Component>
      <Connect(ComplianceRemediationButton)
        allSystems={
          Array [
            Object {
              "id": "aa9c4497-5707-4233-9e9b-1fded5423ef3",
              "profiles": Array [
                Object {
                  "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                  "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                  "rules": Array [
                    Object {
                      "compliant": true,
                      "description": "foodescription",
                      "identifier": "{\\"label\\":\\"CCE-80441-9\\",\\"system\\":\\"https://nvd.nist.gov/cce/index.cfm\\"}",
                      "rationale": "foorationale",
                      "refId": "xccdf_org.ssgproject.content_rule_docker_storage_configured",
                      "references": "[]",
                      "severity": "low",
                      "title": "Use direct-lvm with the Device Mapper Storage Driver",
                    },
                    Object {
                      "compliant": true,
                      "description": "foodescription",
                      "identifier": "{\\"label\\":\\"CCE-80440-1\\",\\"system\\":\\"https://nvd.nist.gov/cce/index.cfm\\"}",
                      "rationale": "foorationale",
                      "refId": "xccdf_org.ssgproject.content_rule_service_docker_enabled",
                      "references": "[]",
                      "severity": "medium",
                      "title": "Enable the Docker service",
                    },
                    Object {
                      "compliant": true,
                      "description": "The at and batch commands can be used to schedule tasks that are meant to be executed",
                      "identifier": null,
                      "rationale": "The atd service could be used by an unsophisticated insider to carry out activities ",
                      "refId": "xccdf_org.ssgproject.content_rule_service_atd_disabled",
                      "remediationAvailable": false,
                      "severity": "medium",
                      "title": "Disable At Service (atd)",
                    },
                  ],
                },
              ],
              "ruleObjectsFailed": Array [],
            },
          ]
        }
        selectedRules={Array []}
      />
    </Component>
    <Component>
      0
       results
    </Component>
  </PrimaryToolbar>
  <Table
    aria-label="Rules table"
    borders={true}
    canSelectAll={true}
    cells={
      Array [
        Object {
          "title": "Rule",
        },
        Object {
          "title": "Severity",
        },
        Object {
          "original": "Ansible",
          "title": <React.Fragment>
            <svg
              height="18px"
              id="ansible_icon"
              version="1.1"
              viewBox="0 0 18 18"
              width="18px"
            >
              <path
                className="st0"
                d="M7.965,8.47125 L11.480625,11.25 L9.1575,5.50125 L7.965,8.47125 Z M12.6894375,13.483125 C12.605625,13.483125 12.5263125,13.46625 12.4531875,13.4325 C12.380625,13.39875 12.2900625,13.336875 12.200625,13.258125 L7.56,9.511875 L5.99625,13.415625 L4.6575,13.415625 L8.578125,3.96 C8.634375,3.830625 8.713125,3.735 8.814375,3.6675 C8.915625,3.605625 9.028125,3.571875 9.1575,3.571875 C9.275625,3.571875 9.3825,3.605625 9.48375,3.6675 C9.585,3.729375 9.658125,3.830625 9.703125,3.96 L13.291875,12.571875 C13.314375,12.628125 13.33125,12.684375 13.336875,12.729375 C13.3425,12.774375 13.348125,12.81375 13.348125,12.83625 C13.348125,13.021875 13.28625,13.179375 13.1563125,13.303125 C13.0275,13.426875 12.87,13.483125 12.6894375,13.483125 L12.6894375,13.483125 Z M9,0 C7.756875,0 6.586875,0.23625 5.495625,0.703125 C4.404375,1.17 3.4425,1.81125 2.626875,2.626875 C1.81125,3.4425 1.17,4.39875 0.703125,5.495625 C0.23625,6.5925 0,7.756875 0,9 C0,10.243125 0.23625,11.413125 0.703125,12.504375 C1.17,13.595625 1.81125,14.5575 2.626875,15.3675 C3.4425,16.1825625 4.39875,16.824375 5.49,17.29125 C6.58125,17.758125 7.756875,18 9,18 C10.243125,18 11.413125,17.76375 12.504375,17.296875 C13.595625,16.83 14.5575,16.18875 15.3675,15.373125 C16.1825625,14.5575 16.824375,13.60125 17.29125,12.51 C17.758125,11.41875 18,10.243125 18,9 C18,7.756875 17.76375,6.586875 17.296875,5.495625 C16.83,4.404375 16.18875,3.4425 15.373125,2.6325 C14.5575,1.816875 13.60125,1.175625 12.51,0.70875 C11.41875,0.241875 10.243125,0 9,0 L9,0 Z"
              />
            </svg>
             Ansible
          </React.Fragment>,
        },
      ]
    }
    className="compliance-rules-table"
    contentId="expanded-content"
    dropdownDirection="down"
    dropdownPosition="right"
    expandId="expandable-toggle"
    gridBreakPoint="grid-md"
    onCollapse={[Function]}
    onSort={[Function]}
    role="grid"
    rowLabeledBy="simple-node"
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "props": Object {
                "colSpan": 5,
              },
              "title": <EmptyTable>
                <Unknown>
                  <Unknown
                    variant="full"
                  >
                    <Unknown
                      headingLevel="h5"
                      size="lg"
                    >
                      No matching rules found
                    </Unknown>
                    <Unknown>
                      This filter criteria matches no rules. 
                      <br />
                       Try changing your filter settings.
                    </Unknown>
                  </Unknown>
                </Unknown>
              </EmptyTable>,
            },
          ],
        },
      ]
    }
    sortBy={Object {}}
    variant={null}
  >
    <Component />
    <Component />
  </Table>
  <TableToolbar
    className="ins-c-inventory__table--toolbar"
    isFooter={true}
  >
    <Pagination
      className=""
      defaultToFullPage={false}
      dropDirection="up"
      firstPage={1}
      isCompact={false}
      isDisabled={false}
      itemCount={0}
      itemsEnd={null}
      itemsStart={null}
      offset={0}
      onFirstClick={[Function]}
      onLastClick={[Function]}
      onNextClick={[Function]}
      onPageInput={[Function]}
      onPerPageSelect={[Function]}
      onPreviousClick={[Function]}
      onSetPage={[Function]}
      ouiaId={null}
      page={1}
      perPage={10}
      perPageOptions={
        Array [
          Object {
            "title": "10",
            "value": 10,
          },
          Object {
            "title": "20",
            "value": 20,
          },
          Object {
            "title": "50",
            "value": 50,
          },
          Object {
            "title": "100",
            "value": 100,
          },
        ]
      }
      titles={
        Object {
          "currPage": "Current page",
          "items": "",
          "itemsPerPage": "Items per page",
          "optionsToggle": "Items per page",
          "page": "",
          "paginationTitle": "Pagination",
          "perPageSuffix": "per page",
          "toFirstPage": "Go to first page",
          "toLastPage": "Go to last page",
          "toNextPage": "Go to next page",
          "toPreviousPage": "Go to previous page",
        }
      }
      toggleTemplate={[Function]}
      variant="bottom"
      widgetId="pagination-options-menu"
    />
  </TableToolbar>
</Fragment>
`;
