// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SystemRulesTable component should render 1`] = `
<Fragment>
  <TableToolbar
    isFooter={false}
  >
    <Level
      gutter="md"
    >
      <LevelItem>
        <InputGroup>
          <RulesComplianceFilter
            availablePolicies={
              Array [
                Object {
                  "name": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
                  "refId": "xccdf_org.ssgproject.content_profile_pci-dss",
                },
              ]
            }
            hidePassed={false}
            policy={Array []}
            severity={Array []}
            updateFilter={[Function]}
          />
          <SimpleFilter
            buttonTitle={null}
            className=""
            onButtonClick={[Function]}
            onFilterChange={[Function]}
            onOptionSelect={[Function]}
            placeholder="Search by name or identifer"
            searchIcon={true}
          />
        </InputGroup>
      </LevelItem>
      <LevelItem>
        2
         results
      </LevelItem>
      <LevelItem>
        <Connect(ComplianceRemediationButton)
          allSystems={
            Array [
              Object {
                "id": "aa9c4497-5707-4233-9e9b-1fded5423ef3",
                "rule_objects_failed": Array [],
              },
            ]
          }
          selectedRules={Array []}
        />
      </LevelItem>
    </Level>
    <Component
      dropDirection="down"
      itemCount={2}
      onPerPageSelect={[Function]}
      onSetPage={[Function]}
      page={1}
      perPage={10}
    />
  </TableToolbar>
  <Table
    borders={true}
    cells={
      Array [
        Object {
          "title": "Rule",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Policy",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Severity",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": "Passed",
          "transforms": Array [
            [Function],
          ],
        },
        Object {
          "title": <React.Fragment>
            <svg
              height="18px"
              id="ansible_icon"
              version="1.1"
              viewBox="0 0 18 18"
              width="18px"
            >
              <path
                className="st0"
                d="M7.965,8.47125 L11.480625,11.25 L9.1575,5.50125 L7.965,8.47125 Z M12.6894375,13.483125 C12.605625,13.483125 12.5263125,13.46625 12.4531875,13.4325 C12.380625,13.39875 12.2900625,13.336875 12.200625,13.258125 L7.56,9.511875 L5.99625,13.415625 L4.6575,13.415625 L8.578125,3.96 C8.634375,3.830625 8.713125,3.735 8.814375,3.6675 C8.915625,3.605625 9.028125,3.571875 9.1575,3.571875 C9.275625,3.571875 9.3825,3.605625 9.48375,3.6675 C9.585,3.729375 9.658125,3.830625 9.703125,3.96 L13.291875,12.571875 C13.314375,12.628125 13.33125,12.684375 13.336875,12.729375 C13.3425,12.774375 13.348125,12.81375 13.348125,12.83625 C13.348125,13.021875 13.28625,13.179375 13.1563125,13.303125 C13.0275,13.426875 12.87,13.483125 12.6894375,13.483125 L12.6894375,13.483125 Z M9,0 C7.756875,0 6.586875,0.23625 5.495625,0.703125 C4.404375,1.17 3.4425,1.81125 2.626875,2.626875 C1.81125,3.4425 1.17,4.39875 0.703125,5.495625 C0.23625,6.5925 0,7.756875 0,9 C0,10.243125 0.23625,11.413125 0.703125,12.504375 C1.17,13.595625 1.81125,14.5575 2.626875,15.3675 C3.4425,16.1825625 4.39875,16.824375 5.49,17.29125 C6.58125,17.758125 7.756875,18 9,18 C10.243125,18 11.413125,17.76375 12.504375,17.296875 C13.595625,16.83 14.5575,16.18875 15.3675,15.373125 C16.1825625,14.5575 16.824375,13.60125 17.29125,12.51 C17.758125,11.41875 18,10.243125 18,9 C18,7.756875 17.76375,6.586875 17.296875,5.495625 C16.83,4.404375 16.18875,3.4425 15.373125,2.6325 C14.5575,1.816875 13.60125,1.175625 12.51,0.70875 C11.41875,0.241875 10.243125,0 9,0 L9,0 Z"
              />
            </svg>
             Ansible
          </React.Fragment>,
          "transforms": Array [
            [Function],
          ],
        },
      ]
    }
    className="compliance-rules-table"
    contentId="expanded-content"
    dropdownDirection="down"
    dropdownPosition="right"
    expandId="expandable-toggle"
    gridBreakPoint="grid-md"
    onCollapse={[Function]}
    onSelect={[Function]}
    onSort={[Function]}
    role="grid"
    rowLabeledBy="simple-node"
    rows={
      Array [
        Object {
          "cells": Array [
            Object {
              "original": "Use direct-lvm with the Device Mapper Storage Driver",
              "title": <Stack>
                <StackItem>
                  Use direct-lvm with the Device Mapper Storage Driver
                </StackItem>
                <StackItem>
                  <TextContent>
                    <Text
                      component="small"
                    >
                      CCE-80441-9
                    </Text>
                  </TextContent>
                </StackItem>
              </Stack>,
            },
            Object {
              "original": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "original": "low",
              "title": <React.Fragment>
                <svg
                  height="18"
                  width="18"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z"
                    fill="#3A9CA6"
                    fillRule="evenodd"
                  />
                </svg>
                 Low
              </React.Fragment>,
            },
            Object {
              "original": true,
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />,
            },
            Object {
              "original": undefined,
              "title": "No",
            },
          ],
          "isOpen": false,
        },
        Object {
          "cells": Array [
            Object {
              "originalIdentifier": "CCE-80441-9",
              "originalReferences": "",
              "title": <React.Fragment>
                <div
                  className="margin-top-lg"
                >
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-description-0"
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        component="h5"
                      >
                        <b>
                          Description
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      foodescription
                    </StackItem>
                  </Stack>
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-identifiers-references-0"
                  >
                    <Grid>
                      <GridItem
                        span={2}
                      >
                        <Text
                          component="h5"
                        >
                          <b>
                            Identifier
                          </b>
                        </Text>
                        <Text>
                          <a
                            href="https://nvd.nist.gov/cce/index.cfm"
                            target="_blank"
                          >
                            CCE-80441-9
                          </a>
                        </Text>
                      </GridItem>
                      
                    </Grid>
                  </Stack>
                  <Stack
                    id="rule-rationale-0"
                    style={
                      Object {
                        "marginBottom": "var(--pf-global--spacer--lg)",
                      }
                    }
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        component="h5"
                      >
                        <b>
                          Rationale
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      foorationale
                    </StackItem>
                  </Stack>
                </div>
              </React.Fragment>,
            },
          ],
          "parent": 0,
        },
        Object {
          "cells": Array [
            Object {
              "original": "Enable the Docker service",
              "title": <Stack>
                <StackItem>
                  Enable the Docker service
                </StackItem>
                <StackItem>
                  <TextContent>
                    <Text
                      component="small"
                    >
                      CCE-80440-1
                    </Text>
                  </TextContent>
                </StackItem>
              </Stack>,
            },
            Object {
              "original": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
              "title": "PCI-DSS v3 Control Baseline for Red Hat Enterprise Linux 7",
            },
            Object {
              "original": "medium",
              "title": <React.Fragment>
                <ExclamationTriangleIcon
                  className="ins-u-warning"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                />
                 Medium
              </React.Fragment>,
            },
            Object {
              "original": true,
              "title": <CheckCircleIcon
                className="ins-u-passed"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />,
            },
            Object {
              "original": undefined,
              "title": "No",
            },
          ],
          "isOpen": false,
        },
        Object {
          "cells": Array [
            Object {
              "originalIdentifier": "CCE-80440-1",
              "originalReferences": "",
              "title": <React.Fragment>
                <div
                  className="margin-top-lg"
                >
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-description-1"
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        component="h5"
                      >
                        <b>
                          Description
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      foodescription
                    </StackItem>
                  </Stack>
                  <Stack
                    className="margin-bottom-lg"
                    id="rule-identifiers-references-1"
                  >
                    <Grid>
                      <GridItem
                        span={2}
                      >
                        <Text
                          component="h5"
                        >
                          <b>
                            Identifier
                          </b>
                        </Text>
                        <Text>
                          <a
                            href="https://nvd.nist.gov/cce/index.cfm"
                            target="_blank"
                          >
                            CCE-80440-1
                          </a>
                        </Text>
                      </GridItem>
                      
                    </Grid>
                  </Stack>
                  <Stack
                    id="rule-rationale-1"
                    style={
                      Object {
                        "marginBottom": "var(--pf-global--spacer--lg)",
                      }
                    }
                  >
                    <StackItem
                      style={
                        Object {
                          "marginBottom": "var(--pf-global--spacer--sm)",
                        }
                      }
                    >
                      <Text
                        component="h5"
                      >
                        <b>
                          Rationale
                        </b>
                      </Text>
                    </StackItem>
                    <StackItem
                      isFilled={true}
                    >
                      foorationale
                    </StackItem>
                  </Stack>
                </div>
              </React.Fragment>,
            },
          ],
          "parent": 2,
        },
      ]
    }
    sortBy={Object {}}
    variant={null}
  >
    <TableHeader />
    <TableBody />
  </Table>
  <TableToolbar
    className="ins-c-inventory__table--toolbar"
    isFooter={true}
  >
    <Component
      dropDirection="up"
      itemCount={2}
      onPerPageSelect={[Function]}
      onSetPage={[Function]}
      page={1}
      perPage={10}
      variant="bottom"
    />
  </TableToolbar>
</Fragment>
`;

exports[`SystemRulesTable component should render a loading table 1`] = `
<Table
  borders={true}
  cells={
    Array [
      Object {
        "title": "Rule",
        "transforms": Array [
          [Function],
        ],
      },
      Object {
        "title": "Policy",
        "transforms": Array [
          [Function],
        ],
      },
      Object {
        "title": "Severity",
        "transforms": Array [
          [Function],
        ],
      },
      Object {
        "title": "Passed",
        "transforms": Array [
          [Function],
        ],
      },
      Object {
        "title": <React.Fragment>
          <svg
            height="18px"
            id="ansible_icon"
            version="1.1"
            viewBox="0 0 18 18"
            width="18px"
          >
            <path
              className="st0"
              d="M7.965,8.47125 L11.480625,11.25 L9.1575,5.50125 L7.965,8.47125 Z M12.6894375,13.483125 C12.605625,13.483125 12.5263125,13.46625 12.4531875,13.4325 C12.380625,13.39875 12.2900625,13.336875 12.200625,13.258125 L7.56,9.511875 L5.99625,13.415625 L4.6575,13.415625 L8.578125,3.96 C8.634375,3.830625 8.713125,3.735 8.814375,3.6675 C8.915625,3.605625 9.028125,3.571875 9.1575,3.571875 C9.275625,3.571875 9.3825,3.605625 9.48375,3.6675 C9.585,3.729375 9.658125,3.830625 9.703125,3.96 L13.291875,12.571875 C13.314375,12.628125 13.33125,12.684375 13.336875,12.729375 C13.3425,12.774375 13.348125,12.81375 13.348125,12.83625 C13.348125,13.021875 13.28625,13.179375 13.1563125,13.303125 C13.0275,13.426875 12.87,13.483125 12.6894375,13.483125 L12.6894375,13.483125 Z M9,0 C7.756875,0 6.586875,0.23625 5.495625,0.703125 C4.404375,1.17 3.4425,1.81125 2.626875,2.626875 C1.81125,3.4425 1.17,4.39875 0.703125,5.495625 C0.23625,6.5925 0,7.756875 0,9 C0,10.243125 0.23625,11.413125 0.703125,12.504375 C1.17,13.595625 1.81125,14.5575 2.626875,15.3675 C3.4425,16.1825625 4.39875,16.824375 5.49,17.29125 C6.58125,17.758125 7.756875,18 9,18 C10.243125,18 11.413125,17.76375 12.504375,17.296875 C13.595625,16.83 14.5575,16.18875 15.3675,15.373125 C16.1825625,14.5575 16.824375,13.60125 17.29125,12.51 C17.758125,11.41875 18,10.243125 18,9 C18,7.756875 17.76375,6.586875 17.296875,5.495625 C16.83,4.404375 16.18875,3.4425 15.373125,2.6325 C14.5575,1.816875 13.60125,1.175625 12.51,0.70875 C11.41875,0.241875 10.243125,0 9,0 L9,0 Z"
            />
          </svg>
           Ansible
        </React.Fragment>,
        "transforms": Array [
          [Function],
        ],
      },
    ]
  }
  className=""
  contentId="expanded-content"
  dropdownDirection="down"
  dropdownPosition="right"
  expandId="expandable-toggle"
  gridBreakPoint="grid-md"
  role="grid"
  rowLabeledBy="simple-node"
  rows={
    Array [
      Object {
        "cells": Array [
          Object {
            "colSpan": 5,
            "title": <RowLoader />,
          },
        ],
      },
      Object {
        "cells": Array [
          Object {
            "colSpan": 5,
            "title": <RowLoader />,
          },
        ],
      },
      Object {
        "cells": Array [
          Object {
            "colSpan": 5,
            "title": <RowLoader />,
          },
        ],
      },
      Object {
        "cells": Array [
          Object {
            "colSpan": 5,
            "title": <RowLoader />,
          },
        ],
      },
      Object {
        "cells": Array [
          Object {
            "colSpan": 5,
            "title": <RowLoader />,
          },
        ],
      },
      Object {
        "cells": Array [
          Object {
            "colSpan": 5,
            "title": <RowLoader />,
          },
        ],
      },
      Object {
        "cells": Array [
          Object {
            "colSpan": 5,
            "title": <RowLoader />,
          },
        ],
      },
      Object {
        "cells": Array [
          Object {
            "colSpan": 5,
            "title": <RowLoader />,
          },
        ],
      },
      Object {
        "cells": Array [
          Object {
            "colSpan": 5,
            "title": <RowLoader />,
          },
        ],
      },
      Object {
        "cells": Array [
          Object {
            "colSpan": 5,
            "title": <RowLoader />,
          },
        ],
      },
    ]
  }
  variant={null}
>
  <TableHeader />
  <TableBody />
</Table>
`;
