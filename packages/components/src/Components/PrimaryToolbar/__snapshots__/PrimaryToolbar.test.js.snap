// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PrimaryToolbar should render custom className 1`] = `
<Toolbar
  className="custom-classname ins-c-primary-toolbar"
  id="ins-primary-data-toolbar"
  toggleIsExpanded={[Function]}
>
  <ToolbarContent
    isExpanded={false}
    showClearFiltersButton={false}
  />
</Toolbar>
`;

exports[`PrimaryToolbar should render custom id 1`] = `
<Toolbar
  className=" ins-c-primary-toolbar"
  id="custom-id"
  toggleIsExpanded={[Function]}
>
  <ToolbarContent
    isExpanded={false}
    showClearFiltersButton={false}
  />
</Toolbar>
`;

exports[`PrimaryToolbar should render elements instead of data 1`] = `
<Toolbar
  className=" ins-c-primary-toolbar"
  id="ins-primary-data-toolbar"
  toggleIsExpanded={[Function]}
>
  <ToolbarContent
    isExpanded={false}
    showClearFiltersButton={false}
  >
    <ForwardRef
      className="ins-c-primary-toolbar__group-filter pf-m-spacer-lg pf-m-space-items-lg"
      variant="filter-group"
    >
      <ToolbarItem>
        <div>
          Loading...
        </div>
      </ToolbarItem>
      <ToolbarItem
        className="ins-c-primary-toolbar__filter"
      >
        <div>
          Loading...
        </div>
      </ToolbarItem>
    </ForwardRef>
    <div>
      Loading...
    </div>
    <ToolbarItem
      className="ins-c-primary-toolbar__sort-by"
    >
      <div>
        Loading...
      </div>
    </ToolbarItem>
    <ToolbarItem
      className="ins-c-primary-toolbar__pagination"
    >
      <div>
        Loading...
      </div>
    </ToolbarItem>
  </ToolbarContent>
  <ToolbarContent
    isExpanded={false}
    showClearFiltersButton={false}
  >
    <ToolbarItem>
      <div>
        Loading...
      </div>
    </ToolbarItem>
  </ToolbarContent>
</Toolbar>
`;

exports[`PrimaryToolbar should render no data 1`] = `
<Toolbar
  className=" ins-c-primary-toolbar"
  id="ins-primary-data-toolbar"
  toggleIsExpanded={[Function]}
>
  <ToolbarContent
    isExpanded={false}
    showClearFiltersButton={false}
  />
</Toolbar>
`;

exports[`PrimaryToolbar should render with data full config 1`] = `
<Toolbar
  className=" ins-c-primary-toolbar"
  id="ins-primary-data-toolbar"
  toggleIsExpanded={[Function]}
>
  <ToolbarContent
    isExpanded={false}
    showClearFiltersButton={false}
  >
    <ForwardRef
      className="ins-c-primary-toolbar__group-filter pf-m-spacer-lg pf-m-space-items-lg"
      variant="filter-group"
    >
      <ToolbarItem>
        <BulkSelect
          checked={false}
          className=""
          isDisabled={false}
          items={
            Array [
              Object {
                "onClick": [MockFunction],
                "title": "Some action",
              },
            ]
          }
          onSelect={[MockFunction]}
        />
      </ToolbarItem>
      <ToolbarItem
        className="ins-c-primary-toolbar__filter"
      >
        <ConditionalFilter
          hideLabel={false}
          isDisabled={false}
          items={
            Array [
              Object {
                "label": "First filter",
              },
              Object {
                "filterValues": Object {
                  "items": Array [
                    Object {
                      "label": "Some checkbox",
                    },
                  ],
                },
                "label": "Second filter",
                "type": "checkbox",
              },
            ]
          }
          value=""
        />
      </ToolbarItem>
    </ForwardRef>
    <Actions
      actions={
        Array [
          <Button
            onClick={[MockFunction]}
          >
             Some action
          </Button>,
          <Button
            onClick={[MockFunction]}
          >
            Another button
          </Button>,
          Object {
            "label": "Or objects",
            "onClick": [MockFunction],
          },
          "or plain string",
        ]
      }
      dropdownProps={
        Object {
          "className": "custom-class",
        }
      }
      exportConfig={
        Object {
          "onSelect": [MockFunction],
        }
      }
      onSelect={[MockFunction]}
      overflowActions={
        Array [
          Object {
            "label": "Sort order ASC",
            "onClick": [Function],
            "props": Object {
              "isDisabled": true,
            },
          },
          Object {
            "label": "Sort order DESC",
            "onClick": [Function],
            "props": Object {
              "isDisabled": false,
            },
          },
        ]
      }
    />
    <ToolbarItem
      className="ins-c-primary-toolbar__sort-by"
    >
      <SortBy
        direction="asc"
        onSortChange={[MockFunction]}
      />
    </ToolbarItem>
    <ToolbarItem
      className="ins-c-primary-toolbar__pagination"
    >
      <Pagination
        className=""
        defaultToFullPage={false}
        firstPage={1}
        isCompact={true}
        isDisabled={false}
        itemCount={100}
        itemsEnd={null}
        itemsStart={null}
        offset={0}
        onFirstClick={[Function]}
        onLastClick={[Function]}
        onNextClick={[Function]}
        onPageInput={[Function]}
        onPerPageSelect={[MockFunction]}
        onPreviousClick={[Function]}
        onSetPage={[MockFunction]}
        ouiaSafe={true}
        page={1}
        perPage={10}
        perPageOptions={
          Array [
            Object {
              "title": "10",
              "value": 10,
            },
            Object {
              "title": "20",
              "value": 20,
            },
            Object {
              "title": "50",
              "value": 50,
            },
            Object {
              "title": "100",
              "value": 100,
            },
          ]
        }
        titles={
          Object {
            "currPage": "Current page",
            "items": "",
            "itemsPerPage": "Items per page",
            "optionsToggle": "Items per page",
            "page": "",
            "paginationTitle": "Pagination",
            "perPageSuffix": "per page",
            "toFirstPage": "Go to first page",
            "toLastPage": "Go to last page",
            "toNextPage": "Go to next page",
            "toPreviousPage": "Go to previous page",
          }
        }
        toggleTemplate={[Function]}
        variant="top"
        widgetId="pagination-options-menu"
      />
    </ToolbarItem>
  </ToolbarContent>
  <ToolbarContent
    isExpanded={false}
    showClearFiltersButton={false}
  >
    <ToolbarItem>
      <FilterChips
        filters={
          Array [
            Object {
              "category": "Some",
              "chips": Array [
                Object {
                  "name": "something",
                },
                Object {
                  "name": "something 2",
                },
              ],
            },
            Object {
              "category": "Another",
              "chips": Array [
                Object {
                  "name": "One chip",
                },
              ],
            },
            Object {
              "name": "Something else",
            },
          ]
        }
        onDelete={[MockFunction]}
      />
    </ToolbarItem>
  </ToolbarContent>
</Toolbar>
`;

exports[`PrimaryToolbar should render with data only - bulk select 1`] = `
<Toolbar
  className=" ins-c-primary-toolbar"
  id="ins-primary-data-toolbar"
  toggleIsExpanded={[Function]}
>
  <ToolbarContent
    isExpanded={false}
    showClearFiltersButton={false}
  >
    <ForwardRef
      className="ins-c-primary-toolbar__group-filter pf-m-spacer-lg pf-m-space-items-lg"
      variant="filter-group"
    >
      <ToolbarItem>
        <BulkSelect
          checked={false}
          className=""
          isDisabled={false}
          items={
            Array [
              Object {
                "onClick": [MockFunction],
                "title": "Some action",
              },
            ]
          }
          onSelect={[MockFunction]}
        />
      </ToolbarItem>
    </ForwardRef>
  </ToolbarContent>
</Toolbar>
`;

exports[`PrimaryToolbar should render with data only - filterConfig 1`] = `
<Toolbar
  className=" ins-c-primary-toolbar"
  id="ins-primary-data-toolbar"
  toggleIsExpanded={[Function]}
>
  <ToolbarContent
    isExpanded={false}
    showClearFiltersButton={false}
  >
    <ForwardRef
      className="ins-c-primary-toolbar__group-filter pf-m-spacer-lg pf-m-space-items-lg"
      variant="filter-group"
    >
      <ToolbarItem
        className="ins-c-primary-toolbar__filter"
      >
        <ConditionalFilter
          hideLabel={false}
          isDisabled={false}
          items={
            Array [
              Object {
                "label": "First filter",
              },
              Object {
                "filterValues": Object {
                  "items": Array [
                    Object {
                      "label": "Some checkbox",
                    },
                  ],
                },
                "label": "Second filter",
                "type": "checkbox",
              },
            ]
          }
          value=""
        />
      </ToolbarItem>
    </ForwardRef>
  </ToolbarContent>
</Toolbar>
`;

exports[`PrimaryToolbar should render wrong actionsConfig 1`] = `
<Toolbar
  className=" ins-c-primary-toolbar"
  id="ins-primary-data-toolbar"
  toggleIsExpanded={[Function]}
>
  <ToolbarContent
    isExpanded={false}
    showClearFiltersButton={false}
  >
    <ForwardRef
      className="ins-c-primary-toolbar__group-filter pf-m-spacer-lg pf-m-space-items-lg"
      variant="filter-group"
    >
      <ToolbarItem>
        <BulkSelect
          checked={false}
          className=""
          isDisabled={false}
          items={
            Array [
              Object {
                "onClick": [MockFunction],
                "title": "Some action",
              },
            ]
          }
          onSelect={[MockFunction]}
        />
      </ToolbarItem>
      <ToolbarItem
        className="ins-c-primary-toolbar__filter"
      >
        <ConditionalFilter
          hideLabel={false}
          isDisabled={false}
          items={
            Array [
              Object {
                "label": "First filter",
              },
              Object {
                "filterValues": Object {
                  "items": Array [
                    Object {
                      "label": "Some checkbox",
                    },
                  ],
                },
                "label": "Second filter",
                "type": "checkbox",
              },
            ]
          }
          value=""
        />
      </ToolbarItem>
    </ForwardRef>
    <Actions
      actions={Array []}
      dropdownProps={Object {}}
      exportConfig={
        Object {
          "onSelect": [MockFunction],
        }
      }
      onSelect={[Function]}
      overflowActions={
        Array [
          Object {
            "label": "Sort order ASC",
            "onClick": [Function],
            "props": Object {
              "isDisabled": true,
            },
          },
          Object {
            "label": "Sort order DESC",
            "onClick": [Function],
            "props": Object {
              "isDisabled": false,
            },
          },
        ]
      }
    />
    <ToolbarItem
      className="ins-c-primary-toolbar__sort-by"
    >
      <SortBy
        direction="asc"
        onSortChange={[MockFunction]}
      />
    </ToolbarItem>
    <ToolbarItem
      className="ins-c-primary-toolbar__pagination"
    >
      <Pagination
        className=""
        defaultToFullPage={false}
        firstPage={1}
        isCompact={true}
        isDisabled={false}
        itemCount={100}
        itemsEnd={null}
        itemsStart={null}
        offset={0}
        onFirstClick={[Function]}
        onLastClick={[Function]}
        onNextClick={[Function]}
        onPageInput={[Function]}
        onPerPageSelect={[MockFunction]}
        onPreviousClick={[Function]}
        onSetPage={[MockFunction]}
        ouiaSafe={true}
        page={1}
        perPage={10}
        perPageOptions={
          Array [
            Object {
              "title": "10",
              "value": 10,
            },
            Object {
              "title": "20",
              "value": 20,
            },
            Object {
              "title": "50",
              "value": 50,
            },
            Object {
              "title": "100",
              "value": 100,
            },
          ]
        }
        titles={
          Object {
            "currPage": "Current page",
            "items": "",
            "itemsPerPage": "Items per page",
            "optionsToggle": "Items per page",
            "page": "",
            "paginationTitle": "Pagination",
            "perPageSuffix": "per page",
            "toFirstPage": "Go to first page",
            "toLastPage": "Go to last page",
            "toNextPage": "Go to next page",
            "toPreviousPage": "Go to previous page",
          }
        }
        toggleTemplate={[Function]}
        variant="top"
        widgetId="pagination-options-menu"
      />
    </ToolbarItem>
  </ToolbarContent>
  <ToolbarContent
    isExpanded={false}
    showClearFiltersButton={false}
  >
    <ToolbarItem>
      <FilterChips
        filters={
          Array [
            Object {
              "category": "Some",
              "chips": Array [
                Object {
                  "name": "something",
                },
                Object {
                  "name": "something 2",
                },
              ],
            },
            Object {
              "category": "Another",
              "chips": Array [
                Object {
                  "name": "One chip",
                },
              ],
            },
            Object {
              "name": "Something else",
            },
          ]
        }
        onDelete={[MockFunction]}
      />
    </ToolbarItem>
  </ToolbarContent>
</Toolbar>
`;
